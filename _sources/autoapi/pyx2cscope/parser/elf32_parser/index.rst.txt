:py:mod:`pyx2cscope.parser.elf32_parser`
========================================

.. py:module:: pyx2cscope.parser.elf32_parser

.. autoapi-nested-parse::

   This module provides functionalities for parsing ELF files compatible with 32-bit architectures.

   It focuses on extracting structure members and variable information from DWARF debugging information.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pyx2cscope.parser.elf32_parser.Elf32Parser




Attributes
~~~~~~~~~~

.. autoapisummary::

   pyx2cscope.parser.elf32_parser.elf_file


.. py:class:: Elf32Parser(elf_path)


   Bases: :py:obj:`pyx2cscope.parser.elf_parser.ElfParser`

   Class for parsing ELF files compatible with 32-bit architectures.

   .. py:method:: _load_elf_file()

      Load the ELF file according to the specific hardware architecture.

      This method should be implemented by subclasses to handle different ELF file formats.


   .. py:method:: close_elf_file()

      Closes the ELF file stream.


   .. py:method:: _map_variables() -> dict[str, pyx2cscope.parser.elf_parser.VariableInfo]

      Abstract method to map variables from the parsed DWARF information.

      Subclasses should implement this method to extract variable information specific to their ELF format.

      Returns:
          Dict[str, VariableInfo]: A dictionary of variable names to VariableInfo objects.


   .. py:method:: _process_variable_die(die_variable)

      Process an individual variable DIE.


   .. py:method:: _get_end_die(current_die)

      Find the end DIE of a type.


   .. py:method:: _processing_end_die(end_die)

      Processes the end DIE of a tag to extract variable information.


   .. py:method:: _extract_address(die_variable)

      Extracts the address of the current variable or fetches it from the symbol table if not found.


   .. py:method:: _load_symbol_table()

      Loads symbol table entries into a dictionary for fast access.


   .. py:method:: _fetch_address_from_symtab(variable_name)

      Fetches the address of a variable from the preloaded symbol table.


   .. py:method:: _find_actual_declaration(die_variable)

      Find the actual declaration of an extern variable.


   .. py:method:: _process_pointer_type(end_die)

      Process a pointer type variable.


   .. py:method:: _process_structure_type(end_die)

      Process a structure type variable.


   .. py:method:: _process_array_type(end_die)

      Process an array type variable.


   .. py:method:: _process_base_type(end_die)

      Process a base type variable.


   .. py:method:: _get_structure_members_recursive(die, parent_name: str, prev_address_offset=0)

      Recursively gets structure members from a DWARF DIE.


   .. py:method:: _get_structure_members(structure_die, var_name)

      Retrieves structure members from a DWARF DIE.


   .. py:method:: _get_array_length(type_die)

      Gets the length of an array type.


   .. py:method:: _get_member_type(type_offset)

      Retrieve the type information from DWARF given a type offset.


   .. py:method:: _get_dwarf_die_by_offset(offset)

      Retrieve a DWARF DIE given its offset.



.. py:data:: elf_file
   :value: 'C:\\Users\\m67250\\Downloads\\pmsm_foc_zsmt_hybrid_sam_e54\\pmsm_foc_zsmt_hybrid_sam_e54\\firmware\\qspi...'

   

