name: Run format, Build Sphinx Documentation, tests

on:
  [pull_request]

jobs:

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r quality.txt

    - name: Code Format Check
      run: |
        ruff check .

#  static-analysis:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up Python
#      uses: actions/setup-python@v5
#      with:
#        python-version: "3.10"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r quality.txt
#    - name: Check code with ruff
#      run: |
#        ruff ./pyx2cscope
#    - name: Check code with pylint
#      run: |
#        pylint ./pyx2cscope

  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Set up Microchip XC16 v2.10 compiler
      run: |
        wget -nv -O /tmp/xc16 https://ww1.microchip.com/downloads/aemDocuments/documents/DEV/ProductDocuments/SoftwareTools/xc16-v2.10-full-install-linux64-installer.run && \
        chmod +x /tmp/xc16 && \
        sudo /tmp/xc16 --mode unattended --unattendedmodeui none --netservername localhost --LicenseType FreeMode --prefix /opt/microchip/xc16/v2.10 && \
        rm /tmp/xc16
        echo "/opt/microchip/xc16/v2.10/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r quality.txt
        pip install -e .

    - name: Run tests
      run: |
        pytest 

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r quality.txt
          pip install -e .

      - name: Build documentation
        run: |
          sphinx-build -M html doc build -Wan --keep-going 


