Search.setIndex({"docnames": ["autoapi/index", "autoapi/pyx2cscope/__main__/index", "autoapi/pyx2cscope/index", "autoapi/pyx2cscope/parser/elf16_parser/index", "autoapi/pyx2cscope/parser/elf32_parser/index", "autoapi/pyx2cscope/parser/elf_parser/index", "autoapi/pyx2cscope/parser/index", "autoapi/pyx2cscope/variable/index", "autoapi/pyx2cscope/variable/variable/index", "autoapi/pyx2cscope/variable/variable_factory/index", "autoapi/pyx2cscope/xc2scope/index", "how_to", "index", "introduction"], "filenames": ["autoapi/index.rst", "autoapi/pyx2cscope/__main__/index.rst", "autoapi/pyx2cscope/index.rst", "autoapi/pyx2cscope/parser/elf16_parser/index.rst", "autoapi/pyx2cscope/parser/elf32_parser/index.rst", "autoapi/pyx2cscope/parser/elf_parser/index.rst", "autoapi/pyx2cscope/parser/index.rst", "autoapi/pyx2cscope/variable/index.rst", "autoapi/pyx2cscope/variable/variable/index.rst", "autoapi/pyx2cscope/variable/variable_factory/index.rst", "autoapi/pyx2cscope/xc2scope/index.rst", "how_to.md", "index.rst", "introduction.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf16_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf32_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable.variable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable.variable_factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.xc2scope</span></code>", "How-To", "Installation", "Some Introduction"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "page": [0, 12], "contain": [0, 2, 3, 4, 5, 7, 8, 10], "auto": [0, 10, 11], "gener": [0, 3, 5], "document": 0, "1": [0, 2, 8, 10, 11], "pyx2cscop": [0, 11, 12], "parser": [0, 2, 9], "elf16_pars": [0, 2, 6], "elf32_pars": [0, 2, 6], "elf_pars": [0, 2, 3, 4, 6], "variabl": [0, 2, 3, 4, 5, 10, 11, 12], "variable_factori": [0, 2, 7, 10], "__main__": [0, 2], "xc2scope": [0, 2, 11, 12], "creat": [0, 9, 10, 11, 12], "sphinx": 0, "autoapi": 0, "main": 1, "entri": 1, "point": [1, 8], "x2cscope": [1, 10, 11, 12, 13], "applic": 1, "initi": [1, 11, 12], "log": 1, "configur": [1, 10, 11], "base": [1, 3, 4, 5, 7, 8, 9], "command": [1, 12], "line": 1, "argument": 1, "set": [1, 8, 10, 11], "up": [1, 10, 11], "pyqt5": 1, "launch": 1, "gui": 1, "log_level": 1, "option": [1, 5, 10], "The": [1, 3, 4, 5, 8, 9, 10, 12], "level": [1, 8, 10, 11], "e": 1, "g": 1, "debug": [1, 4, 12], "info": 1, "set_logging_level": 1, "level_str": 1, "sourc": [1, 2, 3, 4, 5, 8, 9, 10], "provid": [1, 4, 5, 7, 8, 9, 10, 11], "string": [1, 3], "arg": [1, 3, 4, 5, 8, 9, 10], "str": [1, 3, 4, 5, 8, 9, 10, 11], "A": [1, 3, 4, 5, 9, 10], "repres": [1, 3, 4, 5, 8, 10], "attempt": 1, "If": [1, 8, 9, 10, 11], "an": [1, 3, 4, 5, 8, 9, 10, 12], "invalid": 1, "i": [1, 5, 6, 8, 9, 10, 11, 12, 13], "inform": [1, 3, 4, 5, 9], "messag": 1, "log_level_arg": 1, "app": 1, "ex": 1, "modul": [2, 6, 7, 11, 12], "version": 2, "0": [2, 3, 4, 5, 8, 9, 10, 11], "3": 2, "__version__": 2, "elf16": 3, "microchip": [3, 10, 12], "": [3, 8, 9, 11], "xc16": 3, "compil": 3, "defin": [3, 7, 8, 10, 11], "elf16pars": [3, 9], "pars": [3, 4, 5, 9], "elf": [3, 4, 5, 6, 9, 10, 11, 12], "file": [3, 4, 5, 9, 10, 11, 12], "extract": [3, 4, 5], "us": [3, 7, 8, 9, 10, 11, 12, 13], "about": [3, 5, 9], "program": 3, "usag": [3, 12], "elf_read": 3, "elf_fil": [3, 4, 5, 10, 11, 12], "variable_map": [3, 5], "map_vari": [3, 5], "print": [3, 12], "address_check_lower_limit": 3, "2": [3, 8, 10, 11], "address_check_upper_limit": 3, "6": 3, "elf_path": [3, 4, 5, 9], "elfpars": [3, 4, 5, 9], "extend": [3, 5, 10, 11], "basic": 3, "specif": [3, 4, 5, 7, 8, 12], "handl": [3, 4, 5, 7, 8], "produc": 3, "xc16_read_elf_path": 3, "path": [3, 5, 10, 11], "readelf": 3, "execut": 3, "_parse_cu_attribut": 3, "unit": [3, 7, 13], "from": [3, 4, 5, 8, 9, 10, 11, 12, 13], "return": [3, 4, 5, 8, 9, 10, 11], "dict": [3, 4, 5, 10, 11], "dictionari": [3, 4, 5, 10], "_parse_cu_head": 3, "header": 3, "_parse_cu_memb": 3, "member": [3, 4], "_parse_cu_el": 3, "element": [3, 8], "_parse_cu": 3, "_parse_tre": 3, "tree_str": 3, "entir": 3, "tree": 3, "_load_elf_fil": [3, 4, 5], "load": [3, 4, 5], "its": [3, 4, 8, 9, 10], "static": 3, "_get_structure_member_offset": 3, "locat": [3, 8], "offset": [3, 4], "structur": [3, 4, 5], "int": [3, 4, 5, 8, 9, 10, 11], "_locate_cu_in_dwarf": 3, "structure_di": [3, 4], "correspond": [3, 4, 5], "dwarf": [3, 4, 5], "die": [3, 4], "tupl": [3, 4, 8], "sibl": 3, "_get_member_from_nested_memb": 3, "parent_address": 3, "nested_memb": 3, "cu_structur": 3, "nest": 3, "address": [3, 4, 5, 8, 9, 10], "parent": [3, 4], "_get_structure_memb": [3, 4], "recurs": [3, 4], "get": [3, 4, 8, 9, 10, 12], "all": [3, 5, 10], "_get_address_check": 3, "check": [3, 8, 10, 11], "valu": [3, 8, 10, 11, 12], "_get_address_loc": 3, "_locate_tag_variable_end_di": 3, "end": [3, 4], "tag": [3, 4], "_check_for_pointer_tag": 3, "end_di": [3, 4], "pointer": 3, "bool": [3, 8, 10, 11], "true": [3, 8, 10, 11], "fals": [3, 8, 10, 11], "otherwis": [3, 8, 9, 10], "_check_for_structure_tag": 3, "_get_end_di": [3, 4], "start_di": 3, "given": [3, 4, 5, 8, 10], "start": [3, 4], "di": 3, "_get_next_die_by_offset": 3, "calculate_array_s": 3, "array_di": 3, "calcul": [3, 10], "size": [3, 4, 5, 8, 9, 10], "arrai": [3, 4, 5, 8, 9, 10], "method": [3, 4, 5, 7, 8, 9, 10], "retriev": [3, 4, 8, 9, 10, 11, 12], "type": [3, 4, 5, 7, 8, 9, 10], "upper": 3, "bound": 3, "_get_dwarf_die_by_offset": [3, 4], "_map_vari": [3, 4, 5], "variableinfo": [3, 4, 5], "map": [3, 4, 5], "name": [3, 4, 5, 8, 9, 10, 11], "c": [3, 4], "_desktop": 3, "_project": 3, "motorbench_project": 3, "motorbench_foc_pll_pic33ck256mp508_mclv2": 3, "zsmt_dspic33ck": 3, "function": [4, 12, 13], "compat": 4, "32": [4, 8], "bit": [4, 8], "architectur": [4, 5, 9], "It": [4, 7, 8, 10, 13], "focus": 4, "elf32pars": [4, 9], "_get_structure_members_recurs": 4, "type_di": 4, "parent_nam": 4, "prev_address_offset": 4, "var_nam": [4, 5], "_processing_end_di": 4, "process": [4, 5, 10], "_get_array_length": 4, "length": [4, 8, 10], "accord": [4, 5, 9, 11], "hardwar": [4, 5, 8, 12, 13], "should": [4, 5, 8, 10], "implement": [4, 5, 8, 10, 13], "subclass": [4, 5, 8], "differ": [4, 5, 7, 12, 13], "format": [4, 5], "current_di": 4, "find": 4, "elftool": 4, "_get_member_typ": 4, "type_offset": 4, "none": [4, 5, 8, 9, 10], "byte": [4, 5, 8, 10], "found": [4, 5, 9], "abstract": [4, 5, 8], "object": [4, 5, 8, 9, 10, 11], "user": [4, 13], "m67250": 4, "download": 4, "mclv2_sam_e54_pim": 4, "x": 4, "product": 4, "data": [5, 7, 8, 10, 11, 12, 13], "design": 5, "attribut": [5, 9, 10], "byte_s": 5, "memori": [5, 7, 8, 9, 10], "array_s": [5, 8, 9], "default": [5, 8, 10, 11, 12], "abc": 5, "interfac": [5, 8, 10, 11, 12, 13], "within": [5, 8, 12], "dwarf_info": 5, "store": [5, 7, 8, 10], "current": [5, 11], "being": 5, "get_var_info": 5, "specifi": [5, 8, 10, 12], "get_var_list": [5, 9], "list": [5, 8, 9, 10, 11], "associ": 5, "avail": [5, 9, 10, 11], "sort": [5, 10], "them": [5, 12], "packag": [7, 10, 12], "class": 7, "mcu": [7, 8, 9, 10], "microcontrol": [7, 8, 9, 10, 12], "includ": [7, 10, 11], "support": [7, 11], "variou": 7, "read": [7, 10, 12], "write": [7, 8, 12], "manipul": 7, "lnet": [7, 8, 9, 10, 12], "protocol": [7, 10, 12], "like": [7, 8, 12], "variableint8": [7, 8], "variableuint8": [7, 8], "variableint16": [7, 8], "etc": [7, 12], "well": 8, "integ": 8, "float": 8, "number": [8, 10, 11], "necessari": 8, "convert": [8, 10], "between": 8, "represent": 8, "actual": 8, "8": [8, 11], "sign": 8, "unsign": 8, "16": 8, "variableuint16": 8, "variableint32": 8, "variableuint32": 8, "variableint64": 8, "64": 8, "variableuint64": 8, "variablefloat": 8, "l_net": [8, 9], "mchplnet": [8, 9, 10], "__getitem__": 8, "item": 8, "regard": 8, "index": [8, 10, 12], "convers": [8, 10], "real": [8, 12, 13], "case": [8, 9], "zero": 8, "rais": [8, 9], "indexerror": 8, "outsid": [8, 13], "scope": [8, 10, 12], "posit": [8, 10], "__setitem__": 8, "kei": [8, 10], "__len__": 8, "In": [8, 11], "we": 8, "singl": 8, "_get_array_valu": 8, "get_valu": [8, 11, 12], "_check_value_rang": 8, "rang": 8, "min": 8, "max": 8, "valueerror": 8, "_get_min_max_valu": 8, "allow": [8, 13], "bytes_to_valu": 8, "bytearrai": [8, 10], "respect": [8, 9, 11], "bytes_to_arrai": 8, "set_valu": [8, 11, 12], "new_valu": 8, "get_width": 8, "width": 8, "is_arrai": 8, "_get_value_raw": 8, "ask": 8, "raw": [8, 10], "expect": 8, "must": 8, "reconstruct": 8, "right": 8, "_set_value_raw": 8, "bytes_data": 8, "ram": 8, "send": 8, "low": [8, 10], "commun": [8, 9, 10, 11, 12], "written": 8, "except": [8, 9], "error": 8, "is_sign": 8, "determin": 8, "is_integ": 8, "non": 8, "overrid": 8, "int8": 8, "wide": 8, "decim": 8, "uint8": 8, "int16_t": 8, "uint16_t": 8, "int32_t": 8, "4": 8, "uint32_t": 8, "uint64": 8, "int64": 8, "factori": [9, 10], "variablefactori": [9, 10], "either": 9, "depend": 9, "can": [9, 10, 11, 12], "interact": [9, 12], "instanc": 9, "device_info": 9, "connect": [9, 10, 12], "devic": 9, "appropri": 9, "get_vari": [9, 10, 11, 12], "_get_variable_inst": 9, "var_typ": 9, "vartyp": 9, "x2c": 10, "firmwar": [10, 12], "enabl": [10, 12], "embed": [10, 12], "system": 10, "python": [10, 12, 13], "run": [10, 12, 13], "utilis": 10, "channel": [10, 11], "request": 10, "receiv": 10, "get_variable_as_scope_channel": 10, "servic": 10, "scopechannel": 10, "triggerconfig": 10, "trigger": [10, 11], "trigger_level": [10, 11], "trigger_mod": [10, 11], "trigger_delai": [10, 11], "delai": 10, "percentag": 10, "trigger_edg": [10, 11], "rise": [10, 11], "fall": [10, 11], "abstract_interfac": 10, "interfaceabc": 10, "kwarg": 10, "tool": 10, "network": 10, "oper": 10, "scope_setup": 10, "setup": 10, "convert_list": 10, "set_interfac": 10, "set_elf_fil": 10, "establish": 10, "disconnect": 10, "termin": 10, "list_vari": 10, "add_scope_channel": [10, 11], "add": [10, 11], "ad": [10, 11], "id": 10, "remove_scope_channel": [10, 11], "remov": [10, 11], "result": 10, "get_scope_channel_list": 10, "set_scope_trigg": [10, 11], "config": 10, "clear_trigg": [10, 11], "reset": 10, "set_sample_tim": [10, 11], "sample_tim": [10, 11], "pre": [10, 11], "scaler": [10, 11], "sampl": [10, 11], "mode": [10, 11], "total": [10, 11], "time": [10, 11, 12, 13], "cost": [10, 11], "resolut": [10, 11], "everi": [10, 11], "2nd": [10, 11], "3rd": [10, 11], "factor": 10, "set_scope_st": 10, "scope_st": 10, "state": [10, 11], "desir": [10, 11], "request_scope_data": 10, "layer": 10, "call": 10, "onc": [10, 11], "requir": [10, 11], "ar": 10, "made": [10, 11], "acquisit": 10, "is_scope_data_readi": [10, 11], "readi": 10, "get_trigger_posit": 10, "event": 10, "get_delay_trigger_posit": 10, "_calc_sda_used_length": 10, "sda": 10, "portion": 10, "_read_array_chunk": 10, "chunk": 10, "read_arrai": 10, "data_typ": 10, "_sort_channel_data": 10, "dataset": 10, "order": 10, "_filter_channel": 10, "filter": 10, "onli": [10, 11], "valid": 10, "get_scope_channel_data": [10, 11], "valid_data": [10, 11], "you": 11, "instal": 11, "pip": 11, "go": 11, "directori": 11, "project": 11, "out": 11, "new": [11, 12], "py": 11, "your": 11, "import": [11, 12], "choos": 11, "serial": [11, 12], "lin": [11, 12], "come": 11, "futur": 11, "com": 11, "port": [11, 12], "baud": [11, 12], "rate": [11, 12], "115200": [11, 12], "need": 11, "chang": 11, "baud_rat": 11, "paramet": 11, "prefer": 11, "same": 11, "wai": 11, "other": 11, "could": 11, "com16": 11, "replac": 11, "want": 11, "monitor": 11, "variable_nam": 11, "multipl": 11, "have": 11, "gone": 11, "through": 11, "step": 11, "variable1": 11, "variable2": 11, "ani": 11, "select": 11, "work": 11, "srcchannel": 11, "triggerchannel": 11, "No": 11, "post": 11, "variable3": 11, "500": 11, "50": 11, "clear": 11, "diabl": 11, "paramat": 11, "when": 11, "self": 11, "ha": 11, "complet": 11, "yet": 11, "progress": 11, "while": 11, "sleep": 11, "comprehens": 12, "offer": 12, "develop": [12, 13], "power": 12, "toolkit": 12, "softwar": 12, "combin": 12, "capabl": 12, "advanc": 12, "visual": 12, "featur": 12, "directli": 12, "environ": 12, "via": 12, "uart": 12, "usb": 12, "tcp": 12, "ip": 12, "virtual": 12, "follow": 12, "m": 12, "demonstr": 12, "librari": 12, "x2c_scope": 12, "com8": 12, "path_to_elf_fil": 12, "speed_refer": 12, "motor": 12, "apidata": 12, "velocityrefer": 12, "speed_measur": 12, "velocitymeasur": 12, "target": 12, "1000": 12, "some": 12, "introduct": 12, "how": 12, "To": 12, "api": 12, "refer": 12, "search": 12, "plugin": 13, "mplabx": 13, "let": 13, "even": 13, "enviro": 13, "standalon": 13, "autom": 13, "test": 13, "tdd": 13, "pytest": 13, "bdd": 13, "behaviour": 13, "driven": 13, "framework": 13, "cucumb": 13, "collect": 13, "machin": 13, "learn": 13, "train": 13, "model": 13, "analysi": 13, "ai": 13, "hil": 13, "loop": 13, "tune": 13}, "objects": {"": [[2, 0, 0, "-", "pyx2cscope"]], "pyx2cscope": [[1, 0, 0, "-", "__main__"], [2, 1, 1, "", "__version__"], [6, 0, 0, "-", "parser"], [7, 0, 0, "-", "variable"], [10, 0, 0, "-", "xc2scope"]], "pyx2cscope.__main__": [[1, 1, 1, "", "app"], [1, 1, 1, "", "ex"], [1, 1, 1, "", "log_level_arg"], [1, 2, 1, "", "set_logging_level"]], "pyx2cscope.parser": [[3, 0, 0, "-", "elf16_parser"], [4, 0, 0, "-", "elf32_parser"], [5, 0, 0, "-", "elf_parser"]], "pyx2cscope.parser.elf16_parser": [[3, 1, 1, "", "ADDRESS_CHECK_LOWER_LIMIT"], [3, 1, 1, "", "ADDRESS_CHECK_UPPER_LIMIT"], [3, 3, 1, "", "Elf16Parser"], [3, 1, 1, "", "elf_file"]], "pyx2cscope.parser.elf16_parser.Elf16Parser": [[3, 4, 1, "", "_check_for_pointer_tag"], [3, 4, 1, "", "_check_for_structure_tag"], [3, 4, 1, "", "_get_address_check"], [3, 4, 1, "", "_get_address_location"], [3, 4, 1, "", "_get_dwarf_die_by_offset"], [3, 4, 1, "", "_get_end_die"], [3, 4, 1, "", "_get_member_from_nested_members"], [3, 4, 1, "", "_get_next_die_by_offset"], [3, 4, 1, "", "_get_structure_member_offset"], [3, 4, 1, "", "_get_structure_members"], [3, 4, 1, "", "_load_elf_file"], [3, 4, 1, "", "_locate_cu_in_dwarf"], [3, 4, 1, "", "_locate_tag_variable_end_die"], [3, 4, 1, "", "_map_variables"], [3, 4, 1, "", "_parse_cu"], [3, 4, 1, "", "_parse_cu_attributes"], [3, 4, 1, "", "_parse_cu_elements"], [3, 4, 1, "", "_parse_cu_header"], [3, 4, 1, "", "_parse_cu_members"], [3, 4, 1, "", "_parse_tree"], [3, 4, 1, "", "calculate_array_size"]], "pyx2cscope.parser.elf32_parser": [[4, 3, 1, "", "Elf32Parser"], [4, 1, 1, "", "elf_file"]], "pyx2cscope.parser.elf32_parser.Elf32Parser": [[4, 4, 1, "", "_get_array_length"], [4, 4, 1, "", "_get_dwarf_die_by_offset"], [4, 4, 1, "", "_get_end_die"], [4, 4, 1, "", "_get_member_type"], [4, 4, 1, "", "_get_structure_members"], [4, 4, 1, "", "_get_structure_members_recursive"], [4, 4, 1, "", "_load_elf_file"], [4, 4, 1, "", "_map_variables"], [4, 4, 1, "", "_processing_end_die"]], "pyx2cscope.parser.elf_parser": [[5, 3, 1, "", "ElfParser"], [5, 3, 1, "", "VariableInfo"]], "pyx2cscope.parser.elf_parser.ElfParser": [[5, 4, 1, "", "_load_elf_file"], [5, 4, 1, "", "_map_variables"], [5, 4, 1, "", "get_var_info"], [5, 4, 1, "", "get_var_list"], [5, 4, 1, "", "map_variables"]], "pyx2cscope.parser.elf_parser.VariableInfo": [[5, 5, 1, "", "address"], [5, 5, 1, "", "array_size"], [5, 5, 1, "", "byte_size"], [5, 5, 1, "", "name"], [5, 5, 1, "", "type"]], "pyx2cscope.variable": [[8, 0, 0, "-", "variable"], [9, 0, 0, "-", "variable_factory"]], "pyx2cscope.variable.variable": [[8, 3, 1, "", "Variable"], [8, 3, 1, "", "VariableFloat"], [8, 3, 1, "", "VariableInt16"], [8, 3, 1, "", "VariableInt32"], [8, 3, 1, "", "VariableInt64"], [8, 3, 1, "", "VariableInt8"], [8, 3, 1, "", "VariableUint16"], [8, 3, 1, "", "VariableUint32"], [8, 3, 1, "", "VariableUint64"], [8, 3, 1, "", "VariableUint8"]], "pyx2cscope.variable.variable.Variable": [[8, 4, 1, "", "__getitem__"], [8, 4, 1, "", "__len__"], [8, 4, 1, "", "__setitem__"], [8, 4, 1, "", "_check_value_range"], [8, 4, 1, "", "_get_array_values"], [8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "_get_value_raw"], [8, 4, 1, "", "_set_value_raw"], [8, 4, 1, "", "bytes_to_array"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_array"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableFloat": [[8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt16": [[8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt32": [[8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt64": [[8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt8": [[8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint16": [[8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint32": [[8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint64": [[8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint8": [[8, 4, 1, "", "_get_min_max_values"], [8, 4, 1, "", "bytes_to_value"], [8, 4, 1, "", "get_width"], [8, 4, 1, "", "is_integer"], [8, 4, 1, "", "is_signed"], [8, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable_factory": [[9, 3, 1, "", "VariableFactory"]], "pyx2cscope.variable.variable_factory.VariableFactory": [[9, 4, 1, "", "_get_variable_instance"], [9, 4, 1, "", "get_var_list"], [9, 4, 1, "", "get_variable"]], "pyx2cscope.xc2scope": [[10, 3, 1, "", "TriggerConfig"], [10, 3, 1, "", "X2CScope"], [10, 2, 1, "", "get_variable_as_scope_channel"]], "pyx2cscope.xc2scope.TriggerConfig": [[10, 5, 1, "", "trigger_delay"], [10, 5, 1, "", "trigger_edge"], [10, 5, 1, "", "trigger_level"], [10, 5, 1, "", "trigger_mode"], [10, 5, 1, "", "variable"]], "pyx2cscope.xc2scope.X2CScope": [[10, 4, 1, "", "_calc_sda_used_length"], [10, 4, 1, "", "_filter_channels"], [10, 4, 1, "", "_read_array_chunks"], [10, 4, 1, "", "_sort_channel_data"], [10, 4, 1, "", "add_scope_channel"], [10, 4, 1, "", "clear_trigger"], [10, 4, 1, "", "connect"], [10, 4, 1, "", "disconnect"], [10, 4, 1, "", "get_delay_trigger_position"], [10, 4, 1, "", "get_scope_channel_data"], [10, 4, 1, "", "get_scope_channel_list"], [10, 4, 1, "", "get_trigger_position"], [10, 4, 1, "", "get_variable"], [10, 4, 1, "", "is_scope_data_ready"], [10, 4, 1, "", "list_variables"], [10, 4, 1, "", "read_array"], [10, 4, 1, "", "remove_scope_channel"], [10, 4, 1, "", "request_scope_data"], [10, 4, 1, "", "set_elf_file"], [10, 4, 1, "", "set_interface"], [10, 4, 1, "", "set_sample_time"], [10, 4, 1, "", "set_scope_state"], [10, 4, 1, "", "set_scope_trigger"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:method", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"api": 0, "refer": 0, "pyx2cscop": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "__main__": 1, "modul": [1, 3, 4, 5, 8, 9, 10], "content": [1, 2, 3, 4, 5, 8, 9, 10, 12], "function": [1, 10, 11], "attribut": [1, 3, 4], "subpackag": 2, "submodul": [2, 6, 7], "packag": 2, "parser": [3, 4, 5, 6], "elf16_pars": 3, "class": [3, 4, 5, 8, 9, 10], "elf32_pars": 4, "elf_pars": 5, "variabl": [7, 8, 9], "variable_factori": 9, "xc2scope": 10, "how": 11, "To": 11, "get": 11, "start": [11, 12], "script": [11, 12], "scope": 11, "exampl": [11, 12], "instal": 12, "gui": 12, "simplest": 12, "indic": 12, "tabl": 12, "some": 13, "introduct": 13}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"How-To": [[11, "how-to"]], "Getting Started with Scripting": [[11, "getting-started-with-scripting"]], "Scope Functionality": [[11, "scope-functionality"]], "Example": [[11, "example"]], "Installation": [[12, "installation"]], "Start GUI example": [[12, "start-gui-example"]], "Simplest scripting example": [[12, "simplest-scripting-example"]], "Contents:": [[12, null]], "Indices and tables": [[12, "indices-and-tables"]], "Some Introduction": [[13, "some-introduction"]], "pyX2Cscope": [[13, "pyx2cscope"]], "API Reference": [[0, "api-reference"]], "pyx2cscope.__main__": [[1, "module-pyx2cscope.__main__"]], "Module Contents": [[1, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"]], "Functions": [[1, "functions"], [10, "functions"]], "Attributes": [[1, "attributes"], [3, "attributes"], [4, "attributes"]], "pyx2cscope": [[2, "module-pyx2cscope"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [6, "submodules"], [7, "submodules"]], "Package Contents": [[2, "package-contents"]], "pyx2cscope.parser.elf16_parser": [[3, "module-pyx2cscope.parser.elf16_parser"]], "Classes": [[3, "classes"], [4, "classes"], [5, "classes"], [8, "classes"], [9, "classes"], [10, "classes"]], "pyx2cscope.parser.elf32_parser": [[4, "module-pyx2cscope.parser.elf32_parser"]], "pyx2cscope.parser.elf_parser": [[5, "module-pyx2cscope.parser.elf_parser"]], "pyx2cscope.parser": [[6, "module-pyx2cscope.parser"]], "pyx2cscope.variable": [[7, "module-pyx2cscope.variable"]], "pyx2cscope.variable.variable": [[8, "module-pyx2cscope.variable.variable"]], "pyx2cscope.variable.variable_factory": [[9, "module-pyx2cscope.variable.variable_factory"]], "pyx2cscope.xc2scope": [[10, "module-pyx2cscope.xc2scope"]]}, "indexentries": {"app (in module pyx2cscope.__main__)": [[1, "pyx2cscope.__main__.app"]], "ex (in module pyx2cscope.__main__)": [[1, "pyx2cscope.__main__.ex"]], "log_level_arg (in module pyx2cscope.__main__)": [[1, "pyx2cscope.__main__.log_level_arg"]], "module": [[1, "module-pyx2cscope.__main__"], [2, "module-pyx2cscope"], [3, "module-pyx2cscope.parser.elf16_parser"], [4, "module-pyx2cscope.parser.elf32_parser"], [5, "module-pyx2cscope.parser.elf_parser"], [6, "module-pyx2cscope.parser"], [7, "module-pyx2cscope.variable"], [8, "module-pyx2cscope.variable.variable"], [9, "module-pyx2cscope.variable.variable_factory"], [10, "module-pyx2cscope.xc2scope"]], "pyx2cscope.__main__": [[1, "module-pyx2cscope.__main__"]], "set_logging_level() (in module pyx2cscope.__main__)": [[1, "pyx2cscope.__main__.set_logging_level"]], "__version__ (in module pyx2cscope)": [[2, "pyx2cscope.__version__"]], "pyx2cscope": [[2, "module-pyx2cscope"]], "address_check_lower_limit (in module pyx2cscope.parser.elf16_parser)": [[3, "pyx2cscope.parser.elf16_parser.ADDRESS_CHECK_LOWER_LIMIT"]], "address_check_upper_limit (in module pyx2cscope.parser.elf16_parser)": [[3, "pyx2cscope.parser.elf16_parser.ADDRESS_CHECK_UPPER_LIMIT"]], "elf16parser (class in pyx2cscope.parser.elf16_parser)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser"]], "_check_for_pointer_tag() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._check_for_pointer_tag"]], "_check_for_structure_tag() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._check_for_structure_tag"]], "_get_address_check() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_address_check"]], "_get_address_location() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_address_location"]], "_get_dwarf_die_by_offset() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_dwarf_die_by_offset"]], "_get_end_die() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_end_die"]], "_get_member_from_nested_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_member_from_nested_members"]], "_get_next_die_by_offset() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_next_die_by_offset"]], "_get_structure_member_offset() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_structure_member_offset"]], "_get_structure_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_structure_members"]], "_load_elf_file() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._load_elf_file"]], "_locate_cu_in_dwarf() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._locate_cu_in_dwarf"]], "_locate_tag_variable_end_die() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._locate_tag_variable_end_die"]], "_map_variables() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._map_variables"]], "_parse_cu() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu"]], "_parse_cu_attributes() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_attributes"]], "_parse_cu_elements() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_elements"]], "_parse_cu_header() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_header"]], "_parse_cu_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_members"]], "_parse_tree() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_tree"]], "calculate_array_size() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[3, "pyx2cscope.parser.elf16_parser.Elf16Parser.calculate_array_size"]], "elf_file (in module pyx2cscope.parser.elf16_parser)": [[3, "pyx2cscope.parser.elf16_parser.elf_file"]], "pyx2cscope.parser.elf16_parser": [[3, "module-pyx2cscope.parser.elf16_parser"]], "elf32parser (class in pyx2cscope.parser.elf32_parser)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser"]], "_get_array_length() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_array_length"]], "_get_dwarf_die_by_offset() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_dwarf_die_by_offset"]], "_get_end_die() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_end_die"]], "_get_member_type() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_member_type"]], "_get_structure_members() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_structure_members"]], "_get_structure_members_recursive() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_structure_members_recursive"]], "_load_elf_file() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser._load_elf_file"]], "_map_variables() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser._map_variables"]], "_processing_end_die() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[4, "pyx2cscope.parser.elf32_parser.Elf32Parser._processing_end_die"]], "elf_file (in module pyx2cscope.parser.elf32_parser)": [[4, "pyx2cscope.parser.elf32_parser.elf_file"]], "pyx2cscope.parser.elf32_parser": [[4, "module-pyx2cscope.parser.elf32_parser"]], "elfparser (class in pyx2cscope.parser.elf_parser)": [[5, "pyx2cscope.parser.elf_parser.ElfParser"]], "variableinfo (class in pyx2cscope.parser.elf_parser)": [[5, "pyx2cscope.parser.elf_parser.VariableInfo"]], "_load_elf_file() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser._load_elf_file"]], "_map_variables() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser._map_variables"]], "address (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[5, "pyx2cscope.parser.elf_parser.VariableInfo.address"]], "array_size (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[5, "pyx2cscope.parser.elf_parser.VariableInfo.array_size"]], "byte_size (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[5, "pyx2cscope.parser.elf_parser.VariableInfo.byte_size"]], "get_var_info() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser.get_var_info"]], "get_var_list() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser.get_var_list"]], "map_variables() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser.map_variables"]], "name (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[5, "pyx2cscope.parser.elf_parser.VariableInfo.name"]], "pyx2cscope.parser.elf_parser": [[5, "module-pyx2cscope.parser.elf_parser"]], "type (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[5, "pyx2cscope.parser.elf_parser.VariableInfo.type"]], "pyx2cscope.parser": [[6, "module-pyx2cscope.parser"]], "pyx2cscope.variable": [[7, "module-pyx2cscope.variable"]], "variable (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.Variable"]], "variablefloat (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.VariableFloat"]], "variableint16 (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.VariableInt16"]], "variableint32 (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.VariableInt32"]], "variableint64 (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.VariableInt64"]], "variableint8 (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.VariableInt8"]], "variableuint16 (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.VariableUint16"]], "variableuint32 (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.VariableUint32"]], "variableuint64 (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.VariableUint64"]], "variableuint8 (class in pyx2cscope.variable.variable)": [[8, "pyx2cscope.variable.variable.VariableUint8"]], "__getitem__() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.__getitem__"]], "__len__() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.__len__"]], "__setitem__() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.__setitem__"]], "_check_value_range() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable._check_value_range"]], "_get_array_values() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable._get_array_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variablefloat method)": [[8, "pyx2cscope.variable.variable.VariableFloat._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint16 method)": [[8, "pyx2cscope.variable.variable.VariableInt16._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint32 method)": [[8, "pyx2cscope.variable.variable.VariableInt32._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint64 method)": [[8, "pyx2cscope.variable.variable.VariableInt64._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint8 method)": [[8, "pyx2cscope.variable.variable.VariableInt8._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint16 method)": [[8, "pyx2cscope.variable.variable.VariableUint16._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint32 method)": [[8, "pyx2cscope.variable.variable.VariableUint32._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint64 method)": [[8, "pyx2cscope.variable.variable.VariableUint64._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint8 method)": [[8, "pyx2cscope.variable.variable.VariableUint8._get_min_max_values"]], "_get_value_raw() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable._get_value_raw"]], "_set_value_raw() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable._set_value_raw"]], "bytes_to_array() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.bytes_to_array"]], "bytes_to_value() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variablefloat method)": [[8, "pyx2cscope.variable.variable.VariableFloat.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint16 method)": [[8, "pyx2cscope.variable.variable.VariableInt16.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint32 method)": [[8, "pyx2cscope.variable.variable.VariableInt32.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint64 method)": [[8, "pyx2cscope.variable.variable.VariableInt64.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint8 method)": [[8, "pyx2cscope.variable.variable.VariableInt8.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint16 method)": [[8, "pyx2cscope.variable.variable.VariableUint16.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint32 method)": [[8, "pyx2cscope.variable.variable.VariableUint32.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint64 method)": [[8, "pyx2cscope.variable.variable.VariableUint64.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint8 method)": [[8, "pyx2cscope.variable.variable.VariableUint8.bytes_to_value"]], "get_value() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.get_value"]], "get_width() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.get_width"]], "get_width() (pyx2cscope.variable.variable.variablefloat method)": [[8, "pyx2cscope.variable.variable.VariableFloat.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint16 method)": [[8, "pyx2cscope.variable.variable.VariableInt16.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint32 method)": [[8, "pyx2cscope.variable.variable.VariableInt32.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint64 method)": [[8, "pyx2cscope.variable.variable.VariableInt64.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint8 method)": [[8, "pyx2cscope.variable.variable.VariableInt8.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint16 method)": [[8, "pyx2cscope.variable.variable.VariableUint16.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint32 method)": [[8, "pyx2cscope.variable.variable.VariableUint32.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint64 method)": [[8, "pyx2cscope.variable.variable.VariableUint64.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint8 method)": [[8, "pyx2cscope.variable.variable.VariableUint8.get_width"]], "is_array() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.is_array"]], "is_integer() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variablefloat method)": [[8, "pyx2cscope.variable.variable.VariableFloat.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint16 method)": [[8, "pyx2cscope.variable.variable.VariableInt16.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint32 method)": [[8, "pyx2cscope.variable.variable.VariableInt32.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint64 method)": [[8, "pyx2cscope.variable.variable.VariableInt64.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint8 method)": [[8, "pyx2cscope.variable.variable.VariableInt8.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint16 method)": [[8, "pyx2cscope.variable.variable.VariableUint16.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint32 method)": [[8, "pyx2cscope.variable.variable.VariableUint32.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint64 method)": [[8, "pyx2cscope.variable.variable.VariableUint64.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint8 method)": [[8, "pyx2cscope.variable.variable.VariableUint8.is_integer"]], "is_signed() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variablefloat method)": [[8, "pyx2cscope.variable.variable.VariableFloat.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint16 method)": [[8, "pyx2cscope.variable.variable.VariableInt16.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint32 method)": [[8, "pyx2cscope.variable.variable.VariableInt32.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint64 method)": [[8, "pyx2cscope.variable.variable.VariableInt64.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint8 method)": [[8, "pyx2cscope.variable.variable.VariableInt8.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint16 method)": [[8, "pyx2cscope.variable.variable.VariableUint16.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint32 method)": [[8, "pyx2cscope.variable.variable.VariableUint32.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint64 method)": [[8, "pyx2cscope.variable.variable.VariableUint64.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint8 method)": [[8, "pyx2cscope.variable.variable.VariableUint8.is_signed"]], "pyx2cscope.variable.variable": [[8, "module-pyx2cscope.variable.variable"]], "set_value() (pyx2cscope.variable.variable.variable method)": [[8, "pyx2cscope.variable.variable.Variable.set_value"]], "set_value() (pyx2cscope.variable.variable.variablefloat method)": [[8, "pyx2cscope.variable.variable.VariableFloat.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint16 method)": [[8, "pyx2cscope.variable.variable.VariableInt16.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint32 method)": [[8, "pyx2cscope.variable.variable.VariableInt32.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint64 method)": [[8, "pyx2cscope.variable.variable.VariableInt64.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint8 method)": [[8, "pyx2cscope.variable.variable.VariableInt8.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint16 method)": [[8, "pyx2cscope.variable.variable.VariableUint16.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint32 method)": [[8, "pyx2cscope.variable.variable.VariableUint32.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint64 method)": [[8, "pyx2cscope.variable.variable.VariableUint64.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint8 method)": [[8, "pyx2cscope.variable.variable.VariableUint8.set_value"]], "variablefactory (class in pyx2cscope.variable.variable_factory)": [[9, "pyx2cscope.variable.variable_factory.VariableFactory"]], "_get_variable_instance() (pyx2cscope.variable.variable_factory.variablefactory method)": [[9, "pyx2cscope.variable.variable_factory.VariableFactory._get_variable_instance"]], "get_var_list() (pyx2cscope.variable.variable_factory.variablefactory method)": [[9, "pyx2cscope.variable.variable_factory.VariableFactory.get_var_list"]], "get_variable() (pyx2cscope.variable.variable_factory.variablefactory method)": [[9, "pyx2cscope.variable.variable_factory.VariableFactory.get_variable"]], "pyx2cscope.variable.variable_factory": [[9, "module-pyx2cscope.variable.variable_factory"]], "triggerconfig (class in pyx2cscope.xc2scope)": [[10, "pyx2cscope.xc2scope.TriggerConfig"]], "x2cscope (class in pyx2cscope.xc2scope)": [[10, "pyx2cscope.xc2scope.X2CScope"]], "_calc_sda_used_length() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope._calc_sda_used_length"]], "_filter_channels() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope._filter_channels"]], "_read_array_chunks() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope._read_array_chunks"]], "_sort_channel_data() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope._sort_channel_data"]], "add_scope_channel() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.add_scope_channel"]], "clear_trigger() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.clear_trigger"]], "connect() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.connect"]], "disconnect() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.disconnect"]], "get_delay_trigger_position() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.get_delay_trigger_position"]], "get_scope_channel_data() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.get_scope_channel_data"]], "get_scope_channel_list() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.get_scope_channel_list"]], "get_trigger_position() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.get_trigger_position"]], "get_variable() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.get_variable"]], "get_variable_as_scope_channel() (in module pyx2cscope.xc2scope)": [[10, "pyx2cscope.xc2scope.get_variable_as_scope_channel"]], "is_scope_data_ready() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.is_scope_data_ready"]], "list_variables() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.list_variables"]], "pyx2cscope.xc2scope": [[10, "module-pyx2cscope.xc2scope"]], "read_array() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.read_array"]], "remove_scope_channel() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.remove_scope_channel"]], "request_scope_data() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.request_scope_data"]], "set_elf_file() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.set_elf_file"]], "set_interface() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.set_interface"]], "set_sample_time() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.set_sample_time"]], "set_scope_state() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.set_scope_state"]], "set_scope_trigger() (pyx2cscope.xc2scope.x2cscope method)": [[10, "pyx2cscope.xc2scope.X2CScope.set_scope_trigger"]], "trigger_delay (pyx2cscope.xc2scope.triggerconfig attribute)": [[10, "pyx2cscope.xc2scope.TriggerConfig.trigger_delay"]], "trigger_edge (pyx2cscope.xc2scope.triggerconfig attribute)": [[10, "pyx2cscope.xc2scope.TriggerConfig.trigger_edge"]], "trigger_level (pyx2cscope.xc2scope.triggerconfig attribute)": [[10, "pyx2cscope.xc2scope.TriggerConfig.trigger_level"]], "trigger_mode (pyx2cscope.xc2scope.triggerconfig attribute)": [[10, "pyx2cscope.xc2scope.TriggerConfig.trigger_mode"]], "variable (pyx2cscope.xc2scope.triggerconfig attribute)": [[10, "pyx2cscope.xc2scope.TriggerConfig.variable"]]}})