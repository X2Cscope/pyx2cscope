Search.setIndex({"docnames": ["FW_Support", "autoapi/index", "autoapi/pyx2cscope/__main__/index", "autoapi/pyx2cscope/index", "autoapi/pyx2cscope/parser/elf16_parser/index", "autoapi/pyx2cscope/parser/elf_parser/index", "autoapi/pyx2cscope/parser/generic_parser/index", "autoapi/pyx2cscope/parser/index", "autoapi/pyx2cscope/utils/index", "autoapi/pyx2cscope/variable/index", "autoapi/pyx2cscope/variable/variable/index", "autoapi/pyx2cscope/variable/variable_factory/index", "autoapi/pyx2cscope/x2cscope/index", "development", "example", "gui_qt", "gui_web", "index", "install", "scripting"], "filenames": ["FW_Support.md", "autoapi/index.rst", "autoapi/pyx2cscope/__main__/index.rst", "autoapi/pyx2cscope/index.rst", "autoapi/pyx2cscope/parser/elf16_parser/index.rst", "autoapi/pyx2cscope/parser/elf_parser/index.rst", "autoapi/pyx2cscope/parser/generic_parser/index.rst", "autoapi/pyx2cscope/parser/index.rst", "autoapi/pyx2cscope/utils/index.rst", "autoapi/pyx2cscope/variable/index.rst", "autoapi/pyx2cscope/variable/variable/index.rst", "autoapi/pyx2cscope/variable/variable_factory/index.rst", "autoapi/pyx2cscope/x2cscope/index.rst", "development.md", "example.md", "gui_qt.md", "gui_web.md", "index.rst", "install.rst", "scripting.rst"], "titles": ["Firmware Support", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf16_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.generic_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable.variable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable.variable_factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.x2cscope</span></code>", "Development", "Examples", "GUI Qt", "GUI Web", "pyX2Cscope", "Installation", "API Interface"], "terms": {"x2cscope": [0, 1, 2, 3, 13, 14, 15, 17], "side": [0, 12], "librari": [0, 15, 18, 19], "i": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19], "written": [0, 10], "standard": 0, "c": [0, 14], "therefor": 0, "whole": [0, 19], "microchip": [0, 4, 12, 13, 17], "16bit": 0, "32bit": 0, "mcu": [0, 9, 10, 12, 14], "portfolio": 0, "http": [0, 13, 16, 19], "github": [0, 13, 19], "io": 0, "doc": 0, "x2cscopefirmwar": 0, "html": [0, 13], "implement": [0, 5, 6, 10, 12, 15, 16, 17], "us": [0, 4, 6, 9, 10, 11, 12, 14, 16, 17, 18, 19], "dynam": 0, "function": [0, 5, 6, 14, 16, 19], "pointer": [0, 4], "some": [0, 14, 17, 19], "our": [0, 19], "low": [0, 10, 12, 14], "end": [0, 4, 6], "8bit": 0, "doe": [0, 8, 16], "contact": 0, "u": 0, "more": [0, 14, 19], "detail": [0, 6, 11, 19], "www": 0, "com": [0, 8, 13, 14, 15, 19], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19], "page": [1, 17], "contain": [1, 3, 4, 5, 6, 9, 10, 12, 19], "auto": [1, 12, 15, 19], "gener": [1, 4, 5, 14], "document": [1, 13, 16, 19], "1": [1, 10, 12, 14, 19], "pyx2cscop": [1, 13, 14, 16, 18, 19], "parser": [1, 3, 8, 11], "elf16_pars": [1, 3, 7], "elf_pars": [1, 3, 4, 6, 7], "generic_pars": [1, 3, 4, 7], "variabl": [1, 3, 4, 5, 6, 12, 14, 15, 17], "variable_factori": [1, 3, 9, 12, 19], "__main__": [1, 3, 14], "util": [1, 3, 14], "creat": [1, 3, 8, 11, 12, 14, 18, 19], "sphinx": [1, 13], "autoapi": 1, "main": [2, 6, 13, 14, 19], "entri": [2, 6], "point": [2, 10], "applic": [2, 15, 17], "initi": [2, 14, 19], "log": [2, 3, 14, 18], "configur": [2, 8, 12, 14, 15, 19], "base": [2, 4, 5, 6, 9, 10, 11, 12, 14, 15], "command": [2, 15, 16, 18], "line": [2, 18], "argument": [2, 15, 16, 18], "set": [2, 8, 10, 11, 12, 14, 15, 18, 19], "up": [2, 12, 14, 15, 19], "pyqt5": 2, "launch": 2, "gui": [2, 17], "parse_argu": 2, "sourc": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 19], "forward": 2, "receiv": [2, 3, 12, 13], "argpars": 2, "pars": [2, 4, 5, 6, 11], "them": [2, 13, 14, 19], "possibl": [2, 18, 19], "ar": [2, 11, 12, 14, 18, 19], "l": [2, 18], "level": [2, 3, 10, 12, 14, 18, 19], "info": [2, 3, 6, 10, 14, 18], "default": [2, 3, 8, 10, 11, 12, 14, 15, 16, 18, 19], "valu": [2, 4, 6, 8, 10, 12, 14, 15, 18], "v": 2, "action": 2, "version": [2, 3, 4, 18], "w": [2, 3, 14, 16], "start": [2, 4, 12, 18, 19], "web": [2, 17], "user": [2, 12, 15, 16, 17, 18], "interfac": [2, 5, 10, 11, 12, 15, 16, 17], "app": [2, 15], "For": [2, 18, 19], "complet": [2, 14, 19], "list": [2, 5, 10, 11, 12, 19], "execut": [2, 3, 4, 15, 18, 19], "python": [2, 12, 13, 15, 16, 17, 18, 19], "m": [2, 13, 14, 15, 16, 18], "help": [2, 18], "_args_check": 2, "k_arg": 2, "namespac": 2, "modul": [3, 7, 9, 17], "0": [3, 4, 6, 10, 12, 14, 16, 19], "4": [3, 10, 12, 16, 19], "3": 3, "__version__": 3, "set_logg": 3, "int": [3, 4, 6, 10, 12, 14, 19], "error": [3, 10, 14, 18], "filenam": [3, 11, 12, 14, 19], "str": [3, 4, 5, 6, 8, 10, 11, 12, 14], "__name__": [3, 14], "consol": 3, "bool": [3, 4, 10, 12, 14], "fals": [3, 4, 10, 12, 14, 19], "mode": [3, 12, 14, 15], "call": [3, 6, 11, 12], "basicconfig": [3, 14], "everi": [3, 12], "file": [3, 4, 5, 6, 7, 8, 11, 12, 15, 19], "could": [3, 14, 19], "run": [3, 12, 15, 16, 17, 18], "standalon": 3, "local": [3, 16], "folder": 3, "where": 3, "program": [3, 4, 15], "onli": [3, 4, 6, 12, 19], "when": [3, 6, 10, 15], "first": [3, 12, 15, 19], "time": [3, 12, 14, 15, 17, 19], "multipl": [3, 6, 16, 19], "have": [3, 6, 15, 19], "effect": 3, "arg": [3, 4, 5, 6, 8, 10, 11, 12, 14], "warn": [3, 4, 18], "debug": [3, 6, 14, 17, 18], "critic": [3, 18], "etc": [3, 9, 11, 12, 17, 19], "without": 3, "extens": [3, 11, 12], "true": [3, 4, 10, 12, 14, 19], "output": [3, 19], "messag": [3, 14], "AND": [3, 14], "new": [3, 4, 13, 19], "append": 3, "deprec": 4, "elf16": 4, "": [4, 10, 11, 14, 19], "xc16": 4, "compil": [4, 19], "remov": [4, 12, 15, 19], "futur": [4, 19], "defin": [4, 9, 10, 11, 12, 14, 19], "elf16pars": [4, 11], "elf": [4, 5, 6, 7, 8, 11, 12, 14, 15, 19], "The": [4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19], "extract": [4, 5, 6, 10], "inform": [4, 5, 6, 11, 12, 15, 16, 17, 19], "about": [4, 5, 10, 11, 17, 19], "usag": [4, 17, 19], "elf_read": 4, "elf_fil": [4, 5, 6, 12, 14], "variable_map": [4, 5], "map_vari": [4, 5], "print": [4, 10, 19], "address_check_lower_limit": 4, "2": [4, 10, 12, 19], "address_check_upper_limit": 4, "6": 4, "elf_path": [4, 5, 6, 11], "elfpars": [4, 5, 6, 11], "extend": [4, 5, 12], "basic": [4, 5, 14], "specif": [4, 5, 6, 9, 10, 14, 17, 19], "handl": [4, 5, 6, 8, 9, 10, 14, 19], "produc": 4, "continu": [4, 17], "instead": [4, 10, 19], "xc16_read_elf_path": 4, "path": [4, 5, 8, 11, 12, 14, 15], "readelf": 4, "_load_symbol_t": [4, 5, 6], "load": [4, 5, 6, 11, 12, 19], "symbol": [4, 5, 6], "tabl": [4, 5, 6], "method": [4, 5, 6, 9, 10, 11, 12, 19], "exist": [4, 8], "compat": [4, 6], "maintain": 4, "current": [4, 6, 11, 12, 14, 15, 18, 19], "_close_elf_fil": [4, 5, 6], "abstract": [4, 5, 10], "close": [4, 5, 6], "ani": [4, 5, 12, 14, 19], "open": [4, 5, 13, 14, 16], "connect": [4, 5, 11, 12, 15], "after": [4, 5, 6, 14, 18, 19], "done": [4, 5, 19], "_parse_cu_attribut": 4, "unit": [4, 9, 17], "from": [4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17], "return": [4, 5, 6, 8, 10, 11, 12, 14, 15, 19], "dict": [4, 5, 6, 10, 12], "A": [4, 5, 6, 10, 11, 12, 19], "dictionari": [4, 5, 6, 10, 12], "_parse_cu_head": 4, "header": 4, "_parse_cu_memb": 4, "member": [4, 6, 19], "_parse_cu_el": 4, "element": [4, 6, 10], "_parse_cu": 4, "_parse_tre": 4, "tree_str": 4, "entir": [4, 15], "tree": [4, 19], "string": [4, 10, 19], "_load_elf_fil": [4, 5, 6], "its": [4, 6, 10, 11, 12, 15, 19], "static": [4, 6], "_get_structure_member_offset": 4, "locat": [4, 10, 19], "offset": [4, 6, 10], "structur": [4, 5, 6, 19], "_locate_cu_in_dwarf": 4, "structure_di": 4, "correspond": [4, 5, 15], "dwarf": [4, 5, 6], "repres": [4, 5, 10, 12, 19], "die": [4, 6], "tupl": [4, 10], "sibl": 4, "_get_member_from_nested_memb": 4, "parent_address": 4, "nested_memb": 4, "cu_structur": 4, "nest": 4, "address": [4, 6, 10, 11, 12, 14, 19], "parent": 4, "_get_structure_memb": 4, "recurs": [4, 6], "get": [4, 6, 7, 8, 10, 11, 12, 14, 17], "all": [4, 5, 6, 10, 11, 12, 14, 15, 19], "_get_address_check": 4, "check": [4, 10, 12, 15, 17, 18, 19], "_get_address_loc": 4, "_locate_tag_variable_end_di": 4, "tag": [4, 6], "_check_for_pointer_tag": 4, "end_di": [4, 6], "otherwis": [4, 10, 11, 12], "_check_for_structure_tag": 4, "_get_end_di": [4, 6], "start_di": 4, "given": [4, 5, 6, 10, 12], "di": 4, "_get_next_die_by_offset": 4, "calculate_array_s": 4, "array_di": 4, "calcul": [4, 6, 12], "size": [4, 6, 10, 12, 19], "an": [4, 5, 6, 10, 11, 12, 15, 16, 19], "arrai": [4, 6, 10, 12, 19], "retriev": [4, 6, 8, 10, 11, 12, 14, 19], "type": [4, 5, 6, 9, 10, 11, 12, 18], "upper": 4, "bound": 4, "_get_dwarf_die_by_offset": [4, 6], "_map_vari": [4, 5, 6], "variableinfo": [4, 5, 6, 10, 11, 12], "map": [4, 5, 6], "name": [4, 5, 10, 11, 12, 14, 19], "test": [4, 6, 17, 19], "data": [4, 5, 6, 7, 9, 10, 11, 12, 17], "mcaf_zsmt_dspic33ck": 4, "provid": [5, 6, 8, 9, 10, 11, 12, 15, 19], "design": 5, "differ": [5, 6, 9, 15, 17, 18, 19], "format": [5, 6, 14, 15, 19], "abc": 5, "within": [5, 10, 15, 17], "subclass": [5, 6, 10], "should": [5, 6, 10, 12, 15], "architectur": [5, 6, 11, 12], "attribut": [5, 10, 11], "dwarf_info": 5, "store": [5, 9, 10, 11, 12, 19], "object": [5, 8, 10, 11, 12, 19], "get_var_info": 5, "specifi": [5, 10, 12, 14, 15, 19], "get_var_list": [5, 11], "none": [5, 6, 10, 11, 12, 14], "associ": 5, "found": [5, 6, 11, 15, 19], "option": [5, 12, 18], "avail": [5, 11, 12, 14, 19], "sort": [5, 12], "accord": [5, 6, 11, 19], "hardwar": [5, 6, 10, 17], "dummypars": 5, "dummi": 5, "case": [5, 6, 10, 18], "suppli": 5, "It": [5, 6, 9, 10, 12, 15, 16, 17, 18, 19], "pure": 5, "32": [6, 10, 12], "bit": [6, 10, 12, 14], "focus": [6, 17], "genericpars": 6, "stream": 6, "_get_die_vari": 6, "die_struct": 6, "process": [6, 12], "obtain": 6, "popul": 6, "self": 6, "die_vari": 6, "var_nam": 6, "_process_di": 6, "_get_base_type_di": 6, "current_di": 6, "find": [6, 16, 17], "regard": [6, 10], "select": [6, 14, 15, 19], "e": [6, 10, 12, 14, 19], "array_typ": 6, "iter": 6, "_extract_address_from_express": 6, "expr_valu": 6, "struct": [6, 19], "express": 6, "raw": [6, 10, 12], "byte": [6, 10, 12, 14], "couldn": 6, "t": 6, "determin": [6, 10], "_extract_address": 6, "fetch": [6, 7], "fast": [6, 17], "access": [6, 16], "_fetch_address_from_symtab": 6, "variable_nam": [6, 19], "preload": 6, "_find_actual_declar": 6, "actual": [6, 10, 19], "declar": 6, "extern": [6, 16], "_get_member_offset": 6, "bit_siz": [6, 10], "union": [6, 10], "_process_array_typ": 6, "member_nam": 6, "easiest": [6, 19], "primit": 6, "which": [6, 10, 15, 19], "g": [6, 10], "char": 6, "my_arrai": 6, "10": 6, "In": [6, 10, 15, 18], "_process_end_di": 6, "one": [6, 8, 12, 19], "consid": 6, "multidimension": 6, "afterward": 6, "each": [6, 19], "need": [6, 14, 15, 19], "ad": [6, 12, 19], "singl": [6, 10], "index": [6, 10, 12, 17], "array_memb": 6, "child_di": 6, "parent_nam": 6, "can": [6, 11, 12, 14, 15, 17, 19], "children": 6, "_process_enum_typ": 6, "enum": [6, 10, 11], "_process_union_typ": 6, "_process_structure_typ": 6, "includ": [6, 9, 12, 15, 16, 19], "_get_array_length": 6, "type_di": 6, "length": [6, 10, 12], "_process_base_typ": 6, "qspin_foc_same54": [6, 19], "respons": 7, "requir": [7, 12, 19], "paramet": [7, 19], "abl": 7, "microcontrol": [7, 9, 10, 11, 12, 15, 17, 19], "get_config_fil": 8, "configpars": 8, "get_elf_file_path": [8, 14], "kei": [8, 10, 12, 14], "get_com_port": [8, 14], "com_port": [8, 19], "port": [8, 14, 15, 16, 19], "If": [8, 10, 11, 12, 15, 19], "packag": [9, 12, 17], "class": 9, "memori": [9, 10, 11, 12], "support": [9, 11, 12, 15, 17, 19], "variou": [9, 15], "read": [9, 12, 14, 17], "write": [9, 10, 14, 17], "manipul": 9, "lnet": [9, 10, 11, 12, 17], "protocol": [9, 12, 17], "like": [9, 10, 17, 19], "variableint8": [9, 10], "variableuint8": [9, 10], "variableint16": [9, 10], "well": [10, 15, 19], "integ": 10, "float": [10, 12], "number": [10, 12, 14, 19], "necessari": [10, 13, 15], "convert": [10, 12], "between": [10, 12, 15], "represent": 10, "8": [10, 14, 15, 19], "sign": 10, "unsign": 10, "16": [10, 12], "variableuint16": 10, "variableint32": 10, "variableuint32": 10, "variableint64": 10, "64": 10, "variableuint64": 10, "variablefloat": 10, "variableenum": 10, "byte_s": 10, "less": 10, "than": 10, "bit_offset": 10, "array_s": [10, 11], "valid_valu": 10, "valid": [10, 12], "l_net": [10, 11], "mchplnet": [10, 11, 12], "__getitem__": 10, "item": [10, 11, 12, 14, 19], "convers": [10, 12, 17], "real": [10, 12, 15, 17], "zero": 10, "rais": [10, 11], "indexerror": 10, "outsid": 10, "scope": [10, 12], "posit": [10, 12, 14], "__setitem__": 10, "__len__": 10, "we": [10, 13, 18, 19], "__repr__": 10, "termin": [10, 12, 18], "oper": [10, 11, 12, 14], "_get_array_valu": 10, "_get_bit_valu": 10, "byte_valu": 10, "_set_bit_valu": 10, "insert": [10, 12], "correct": [10, 15], "get_valu": [10, 14, 19], "_check_value_rang": 10, "rang": [10, 14], "min": 10, "max": [10, 14], "valueerror": 10, "_get_min_max_valu": 10, "allow": [10, 15, 16, 17], "minimum": 10, "maximum": 10, "bytes_to_valu": 10, "bytearrai": [10, 12], "respect": [10, 11, 19], "bytes_to_arrai": 10, "width": 10, "set_valu": [10, 14, 19], "new_valu": 10, "_set_valu": 10, "get_width": 10, "is_arrai": 10, "_get_value_raw": 10, "ask": 10, "expect": 10, "must": 10, "reconstruct": 10, "right": [10, 15], "_set_value_raw": 10, "bytes_data": 10, "ram": 10, "send": 10, "commun": [10, 11, 12, 14, 17, 19], "except": [10, 11, 14], "is_sign": 10, "is_integ": 10, "non": 10, "overrid": 10, "int8": 10, "becaus": 10, "enumer": [10, 11], "strictli": 10, "depend": [10, 11], "get_enumerator_list": 10, "factori": [11, 12], "filetyp": [11, 12, 19], "import": [11, 12, 14], "export": [11, 12, 15], "yaml": [11, 12, 19], "yml": [11, 12, 19], "pickl": [11, 12, 19], "pkl": [11, 12, 19], "variable_info_repr": 11, "dumper": 11, "helper": 11, "deseri": 11, "do": [11, 19], "variable_info_constructor": 11, "loader": 11, "node": 11, "variablefactori": [11, 12], "either": [11, 15, 19], "elf32pars": 11, "interact": [11, 14], "instanc": [11, 19], "device_info": 11, "devic": [11, 12, 16], "appropri": [11, 15], "get_vari": [11, 12, 14, 19], "_get_variable_inst": 11, "set_elf_fil": 11, "set_lnet_interfac": 11, "_build_export_file_nam": 11, "ext": [11, 12, 19], "export_vari": [11, 12, 19], "regist": [11, 12, 14, 19], "elf_file_nam": [11, 12], "empti": [11, 12, 19], "import_vari": [11, 12, 19], "get_variable_raw": [11, 12, 14], "var_info": 11, "dataclass": [11, 12], "x2c": [12, 14, 19], "firmwar": [12, 15, 17, 19], "enabl": [12, 15, 17], "embed": [12, 17], "system": [12, 15, 18], "utilis": 12, "channel": [12, 14, 15], "request": [12, 13, 19], "uc_width_16bit": 12, "uc_width_32bit": 12, "get_variable_as_scope_channel": 12, "servic": 12, "scopechannel": 12, "triggerconfig": [12, 19], "trigger": [12, 15], "trigger_level": [12, 19], "trigger_mod": [12, 19], "trigger_delai": [12, 19], "delai": [12, 19], "percentag": 12, "trigger_edg": [12, 19], "rise": [12, 19], "fall": [12, 19], "abstract_interfac": 12, "interfaceabc": 12, "kwarg": 12, "tool": 12, "network": 12, "scope_setup": 12, "setup": [12, 15], "convert_list": 12, "uc_width": 12, "processor": 12, "set_interfac": 12, "establish": [12, 15], "disconnect": [12, 19], "list_vari": 12, "variable_info": 12, "definit": 12, "encapsul": 12, "clear": [12, 14, 19], "add_scope_channel": [12, 14, 19], "add": [12, 14, 15, 19], "id": 12, "clear_all_scope_channel": [12, 19], "reset": [12, 19], "remove_scope_channel": [12, 19], "result": [12, 14], "get_scope_channel_list": 12, "reset_scope_trigg": 12, "happen": 12, "set_scope_trigg": [12, 19], "config": 12, "clear_trigg": 12, "set_sample_tim": [12, 14], "sample_tim": 12, "pre": [12, 15, 19], "scaler": 12, "sampl": [12, 14, 15, 19], "total": 12, "cost": 12, "resolut": [12, 15], "2nd": 12, "3rd": 12, "factor": 12, "set_scope_st": 12, "scope_st": 12, "state": [12, 14, 19], "desir": [12, 15, 19], "request_scope_data": [12, 14, 19], "layer": 12, "onc": [12, 15, 19], "made": 12, "acquisit": [12, 14], "is_scope_data_readi": [12, 14, 19], "readi": [12, 14, 19], "befor": 12, "pleas": 12, "get_trigger_posit": 12, "event": 12, "get_delay_trigger_posit": 12, "_calc_sda_used_length": 12, "sda": 12, "portion": 12, "_read_array_chunk": 12, "chunk": 12, "read_arrai": 12, "data_typ": 12, "_sort_channel_data": 12, "dataset": 12, "order": 12, "_filter_channel": 12, "filter": 12, "get_scope_channel_data": [12, 14, 19], "valid_data": [12, 14], "scope_sample_tim": 12, "time_microsecond": 12, "evalu": 12, "microsecond": [12, 14], "durat": 12, "millisecond": [12, 14, 15], "get_device_info": 12, "There": 13, "mail": 13, "group": 13, "your": [13, 16, 19], "input": 13, "question": 13, "motorcontrol": 13, "code": [13, 14], "exampl": [13, 15, 16, 17], "report": 13, "issu": [13, 18], "fork": 13, "repositori": [13, 19], "branch": 13, "chang": [13, 14, 15, 19], "make": [13, 15, 17], "commit": 13, "push": 13, "pull": 13, "describ": 13, "appreci": 13, "virtual": [13, 18], "envrion": 13, "venv": [13, 18], "git": 13, "clone": 13, "cd": 13, "window": [13, 15, 16, 18], "script": [13, 18, 19], "activ": [13, 15, 18], "linux": 13, "bin": 13, "pip": [13, 18], "r": [13, 19], "txt": 13, "qualiti": 13, "keep": 13, "go": 13, "pyinstal": 13, "noconfirm": 13, "pyx2cscope_win": 13, "spec": 13, "under": 14, "py": 14, "veri": 14, "certain": 14, "motorbench": 14, "captur": 14, "serial": [14, 15, 19], "serial_port": 14, "baud_rat": [14, 19], "115200": [14, 19], "baud": [14, 15, 19], "rate": [14, 15, 19], "x2c_scope": [14, 19], "speed_refer": [14, 19], "motor": [14, 17, 19], "apidata": [14, 19], "velocityrefer": [14, 19], "speed": 14, "refer": [14, 17], "speed_measur": [14, 19], "velocitymeasur": [14, 19], "measur": 14, "attempt": [14, 15], "speedrefer": 14, "try": [14, 18], "speed_reference_valu": 14, "f": 14, "occur": 14, "led": 14, "modifi": [14, 15], "dspic33ck256mp508": 14, "special": 14, "blinkysfr": 14, "constant": 14, "led1_bit": 14, "12": 14, "late12": 14, "led2_bit": 14, "13": 14, "late13": 14, "def": 14, "set_led_st": 14, "bit_posit": 14, "OR": 14, "els": 14, "sethigh": 14, "high": 14, "setlow": 14, "demonstr": 14, "sfr": 14, "control": [14, 15, 17, 19], "sfr_led": 14, "3702": 14, "late": 14, "sheet": 14, "initial_led_st": 14, "while": [14, 19], "led1": 14, "led2": 14, "led1_high_valu": 14, "led2_high_valu": 14, "sleep": [14, 19], "led1_low_valu": 14, "led2_low_valu": 14, "other": [14, 15], "matplotlib": [14, 15, 19], "pyplot": 14, "plt": 14, "__file__": 14, "idq": 14, "q": [14, 15], "vabc": 14, "b": 14, "upto": 14, "var": 14, "plot": [14, 15, 17, 19], "ion": 14, "turn": 14, "fig": 14, "ax": 14, "subplot": 14, "loop": [14, 19], "sample_count": 14, "max_sampl": 14, "100": 14, "increas": 14, "data_storag": 14, "assum": 14, "khz": 14, "adjust": [14, 15], "time_valu": 14, "001": 14, "len": 14, "000001": 14, "label": 14, "set_xlabel": 14, "axi": 14, "accordingli": 14, "set_ylabel": 14, "set_titl": 14, "legend": 14, "paus": 14, "short": 14, "updat": [14, 15], "break": 14, "ioff": 14, "off": 14, "show": 14, "collect": [14, 19], "storag": 14, "csv_file_path": 14, "scope_data": 14, "max_length": 14, "newlin": 14, "writer": 14, "dictwrit": 14, "fieldnam": 14, "writehead": 14, "row": 14, "writerow": 14, "visit": 14, "directori": 14, "graphic": [15, 16, 19], "built": 15, "over": [15, 19], "aim": 15, "serv": 15, "how": [15, 16, 19], "desktop": 15, "out": 15, "box": 15, "below": [15, 16, 19], "also": [15, 16, 19], "peripher": 15, "five": 15, "view": 15, "drop": 15, "down": 15, "menu": 15, "project": 15, "dure": [15, 19], "500": 15, "press": 15, "take": 15, "place": 15, "button": 15, "relat": 15, "displai": 15, "top": 15, "left": 15, "corner": 15, "pwm": 15, "precis": 15, "signal": [15, 17], "you": [15, 16, 17, 18, 19], "directli": [15, 17, 19], "To": [15, 16, 18, 19], "checkbox": 15, "appli": 15, "modif": 15, "stop": 15, "click": 15, "again": [15, 19], "csv": 15, "imag": 15, "scalabl": 15, "vector": 15, "svg": 15, "zoom": 15, "drag": 15, "area": [15, 18], "origin": 15, "let": 15, "next": [15, 19], "visual": [15, 17], "live": 15, "cannot": 15, "global": [15, 18], "runtim": [15, 17], "bottom": 15, "across": 15, "ensur": [15, 19], "consist": 15, "regardless": 15, "automat": 15, "miss": 15, "unavail": 15, "manual": [15, 18], "flask": 16, "bootstrap": 16, "jqueri": 16, "chart": 16, "j": 16, "build": 16, "custom": [16, 17], "even": 16, "smart": 16, "server": 16, "machin": 16, "ha": [16, 19], "5000": 16, "localhost": 16, "follow": [16, 17, 18, 19], "host": 16, "addit": [16, 18, 19], "mai": [16, 17, 18, 19], "api": [16, 17], "comprehens": 17, "offer": 17, "develop": 17, "power": 17, "toolkit": 17, "softwar": 17, "combin": 17, "capabl": 17, "advanc": 17, "featur": 17, "environ": [17, 18], "via": 17, "uart": 17, "lin": [17, 19], "usb": 17, "tcp": [17, 19], "ip": [17, 19], "target": [17, 19], "record": 17, "autom": 17, "tdd": 17, "hil": 17, "ai": 17, "model": 17, "dashboard": 17, "qt": 17, "tkinter": 17, "instal": 17, "see": [17, 19], "section": [17, 19], "search": 17, "highli": 18, "recommend": 18, "underneath": [18, 19], "nevertheless": 18, "advis": 18, "insal": 18, "work": [18, 19], "upgrad": 18, "unexpect": 18, "reinstal": 18, "uninstal": 18, "cach": 18, "purg": 18, "manag": 19, "com8": 19, "instanti": 19, "1000": 19, "further": 19, "pyx2scop": 19, "com3": 19, "dev": 19, "ttyusb": 19, "come": 19, "prefer": 19, "com16": 19, "insid": 19, "binari": 19, "text": 19, "step": 19, "link": 19, "want": 19, "monitor": 19, "replac": 19, "dot": 19, "convent": 19, "struct_nam": 19, "final": 19, "gone": 19, "through": 19, "wai": 19, "assembli": 19, "back": 19, "human": 19, "readabl": 19, "edit": 19, "editor": 19, "secur": 19, "reload": 19, "o": 19, "com32": 19, "qspin": 19, "same54": 19, "mclv": 19, "48v": 19, "300w": 19, "angle_refer": 19, "mcfoci_moduledata_gd": 19, "doutput": 19, "elecangl": 19, "elecspe": 19, "two": 19, "plain": 19, "my_two_vari": 19, "my_vari": 19, "so": 19, "reconnect": 19, "anoth": 19, "angle_ref2": 19, "speed_ref2": 19, "housekeep": 19, "mean": 19, "frame": 19, "framework": 19, "seaborn": 19, "previous": 19, "explain": 19, "variable1": 19, "variable2": 19, "present": 19, "sequenc": 19, "ye": 19, "begin": 19, "yet": 19, "progress": 19, "simpl": 19, "depict": 19, "wait": 19, "someth": 19, "pass": 19, "trigger_config": 19, "No": 19, "post": 19}, "objects": {"": [[3, 0, 0, "-", "pyx2cscope"]], "pyx2cscope": [[2, 0, 0, "-", "__main__"], [3, 2, 1, "", "__version__"], [7, 0, 0, "-", "parser"], [3, 1, 1, "", "set_logger"], [8, 0, 0, "-", "utils"], [9, 0, 0, "-", "variable"], [12, 0, 0, "-", "x2cscope"]], "pyx2cscope.__main__": [[2, 1, 1, "", "_args_check"], [2, 1, 1, "", "parse_arguments"]], "pyx2cscope.parser": [[4, 0, 0, "-", "elf16_parser"], [5, 0, 0, "-", "elf_parser"], [6, 0, 0, "-", "generic_parser"]], "pyx2cscope.parser.elf16_parser": [[4, 2, 1, "", "ADDRESS_CHECK_LOWER_LIMIT"], [4, 2, 1, "", "ADDRESS_CHECK_UPPER_LIMIT"], [4, 3, 1, "", "Elf16Parser"], [4, 2, 1, "", "elf_file"]], "pyx2cscope.parser.elf16_parser.Elf16Parser": [[4, 4, 1, "", "_check_for_pointer_tag"], [4, 4, 1, "", "_check_for_structure_tag"], [4, 4, 1, "", "_close_elf_file"], [4, 4, 1, "", "_get_address_check"], [4, 4, 1, "", "_get_address_location"], [4, 4, 1, "", "_get_dwarf_die_by_offset"], [4, 4, 1, "", "_get_end_die"], [4, 4, 1, "", "_get_member_from_nested_members"], [4, 4, 1, "", "_get_next_die_by_offset"], [4, 4, 1, "", "_get_structure_member_offset"], [4, 4, 1, "", "_get_structure_members"], [4, 4, 1, "", "_load_elf_file"], [4, 4, 1, "", "_load_symbol_table"], [4, 4, 1, "", "_locate_cu_in_dwarf"], [4, 4, 1, "", "_locate_tag_variable_end_die"], [4, 4, 1, "", "_map_variables"], [4, 4, 1, "", "_parse_cu"], [4, 4, 1, "", "_parse_cu_attributes"], [4, 4, 1, "", "_parse_cu_elements"], [4, 4, 1, "", "_parse_cu_header"], [4, 4, 1, "", "_parse_cu_members"], [4, 4, 1, "", "_parse_tree"], [4, 4, 1, "", "calculate_array_size"]], "pyx2cscope.parser.elf_parser": [[5, 3, 1, "", "DummyParser"], [5, 3, 1, "", "ElfParser"]], "pyx2cscope.parser.elf_parser.DummyParser": [[5, 4, 1, "", "_close_elf_file"], [5, 4, 1, "", "_load_elf_file"], [5, 4, 1, "", "_load_symbol_table"], [5, 4, 1, "", "_map_variables"]], "pyx2cscope.parser.elf_parser.ElfParser": [[5, 4, 1, "", "_close_elf_file"], [5, 4, 1, "", "_load_elf_file"], [5, 4, 1, "", "_load_symbol_table"], [5, 4, 1, "", "_map_variables"], [5, 4, 1, "", "get_var_info"], [5, 4, 1, "", "get_var_list"]], "pyx2cscope.parser.generic_parser": [[6, 3, 1, "", "GenericParser"], [6, 2, 1, "", "elf_file"]], "pyx2cscope.parser.generic_parser.GenericParser": [[6, 4, 1, "", "_close_elf_file"], [6, 4, 1, "", "_extract_address"], [6, 4, 1, "", "_extract_address_from_expression"], [6, 4, 1, "", "_fetch_address_from_symtab"], [6, 4, 1, "", "_find_actual_declaration"], [6, 4, 1, "", "_get_array_length"], [6, 4, 1, "", "_get_base_type_die"], [6, 4, 1, "", "_get_die_variable"], [6, 4, 1, "", "_get_dwarf_die_by_offset"], [6, 4, 1, "", "_get_end_die"], [6, 4, 1, "", "_get_member_offset"], [6, 4, 1, "", "_load_elf_file"], [6, 4, 1, "", "_load_symbol_table"], [6, 4, 1, "", "_map_variables"], [6, 4, 1, "", "_process_array_type"], [6, 4, 1, "", "_process_base_type"], [6, 4, 1, "", "_process_die"], [6, 4, 1, "", "_process_end_die"], [6, 4, 1, "", "_process_enum_type"], [6, 4, 1, "", "_process_structure_type"], [6, 4, 1, "", "_process_union_type"]], "pyx2cscope.utils": [[8, 1, 1, "", "get_com_port"], [8, 1, 1, "", "get_config_file"], [8, 1, 1, "", "get_elf_file_path"]], "pyx2cscope.variable": [[10, 0, 0, "-", "variable"], [11, 0, 0, "-", "variable_factory"]], "pyx2cscope.variable.variable": [[10, 3, 1, "", "Variable"], [10, 3, 1, "", "VariableEnum"], [10, 3, 1, "", "VariableFloat"], [10, 3, 1, "", "VariableInfo"], [10, 3, 1, "", "VariableInt16"], [10, 3, 1, "", "VariableInt32"], [10, 3, 1, "", "VariableInt64"], [10, 3, 1, "", "VariableInt8"], [10, 3, 1, "", "VariableUint16"], [10, 3, 1, "", "VariableUint32"], [10, 3, 1, "", "VariableUint64"], [10, 3, 1, "", "VariableUint8"]], "pyx2cscope.variable.variable.Variable": [[10, 4, 1, "", "__getitem__"], [10, 4, 1, "", "__len__"], [10, 4, 1, "", "__repr__"], [10, 4, 1, "", "__setitem__"], [10, 4, 1, "", "_check_value_range"], [10, 4, 1, "", "_get_array_values"], [10, 4, 1, "", "_get_bit_value"], [10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_get_value_raw"], [10, 4, 1, "", "_set_bit_value"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "_set_value_raw"], [10, 4, 1, "", "bytes_to_array"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_array"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"], [10, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableEnum": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_enumerator_list"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable.VariableFloat": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable.VariableInfo": [[10, 5, 1, "", "address"], [10, 5, 1, "", "array_size"], [10, 5, 1, "", "bit_offset"], [10, 5, 1, "", "bit_size"], [10, 5, 1, "", "byte_size"], [10, 5, 1, "", "name"], [10, 5, 1, "", "type"], [10, 5, 1, "", "valid_values"]], "pyx2cscope.variable.variable.VariableInt16": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable.VariableInt32": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable.VariableInt64": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable.VariableInt8": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable.VariableUint16": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable.VariableUint32": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable.VariableUint64": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable.VariableUint8": [[10, 4, 1, "", "_get_min_max_values"], [10, 4, 1, "", "_set_value"], [10, 4, 1, "", "bytes_to_value"], [10, 4, 1, "", "get_width"], [10, 4, 1, "", "is_integer"], [10, 4, 1, "", "is_signed"]], "pyx2cscope.variable.variable_factory": [[11, 3, 1, "", "FileType"], [11, 3, 1, "", "VariableFactory"], [11, 1, 1, "", "variable_info_constructor"], [11, 1, 1, "", "variable_info_repr"]], "pyx2cscope.variable.variable_factory.FileType": [[11, 5, 1, "", "ELF"], [11, 5, 1, "", "PICKLE"], [11, 5, 1, "", "YAML"]], "pyx2cscope.variable.variable_factory.VariableFactory": [[11, 4, 1, "", "_build_export_file_name"], [11, 4, 1, "", "export_variables"], [11, 4, 1, "", "get_var_list"], [11, 4, 1, "", "get_variable"], [11, 4, 1, "", "get_variable_raw"], [11, 4, 1, "", "import_variables"], [11, 4, 1, "", "set_elf_file"], [11, 4, 1, "", "set_lnet_interface"]], "pyx2cscope.x2cscope": [[12, 3, 1, "", "TriggerConfig"], [12, 2, 1, "", "UC_WIDTH_16BIT"], [12, 2, 1, "", "UC_WIDTH_32BIT"], [12, 3, 1, "", "X2CScope"], [12, 1, 1, "", "get_variable_as_scope_channel"]], "pyx2cscope.x2cscope.TriggerConfig": [[12, 5, 1, "", "trigger_delay"], [12, 5, 1, "", "trigger_edge"], [12, 5, 1, "", "trigger_level"], [12, 5, 1, "", "trigger_mode"], [12, 5, 1, "", "variable"]], "pyx2cscope.x2cscope.X2CScope": [[12, 4, 1, "", "_calc_sda_used_length"], [12, 4, 1, "", "_filter_channels"], [12, 4, 1, "", "_read_array_chunks"], [12, 4, 1, "", "_sort_channel_data"], [12, 4, 1, "", "add_scope_channel"], [12, 4, 1, "", "clear_all_scope_channel"], [12, 4, 1, "", "clear_trigger"], [12, 4, 1, "", "connect"], [12, 4, 1, "", "disconnect"], [12, 4, 1, "", "export_variables"], [12, 4, 1, "", "get_delay_trigger_position"], [12, 4, 1, "", "get_device_info"], [12, 4, 1, "", "get_scope_channel_data"], [12, 4, 1, "", "get_scope_channel_list"], [12, 4, 1, "", "get_trigger_position"], [12, 4, 1, "", "get_variable"], [12, 4, 1, "", "get_variable_raw"], [12, 4, 1, "", "import_variables"], [12, 4, 1, "", "is_scope_data_ready"], [12, 4, 1, "", "list_variables"], [12, 4, 1, "", "read_array"], [12, 4, 1, "", "remove_scope_channel"], [12, 4, 1, "", "request_scope_data"], [12, 4, 1, "", "reset_scope_trigger"], [12, 4, 1, "", "scope_sample_time"], [12, 4, 1, "", "set_interface"], [12, 4, 1, "", "set_sample_time"], [12, 4, 1, "", "set_scope_state"], [12, 4, 1, "", "set_scope_trigger"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"firmwar": 0, "support": 0, "api": [1, 19], "refer": [1, 15], "pyx2cscop": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17], "__main__": 2, "modul": [2, 4, 5, 6, 8, 10, 11, 12], "content": [2, 3, 4, 5, 6, 8, 10, 11, 12, 17], "function": [2, 3, 8, 11, 12], "subpackag": 3, "submodul": [3, 7, 9], "packag": 3, "attribut": [3, 4, 6, 12], "parser": [4, 5, 6, 7], "elf16_pars": 4, "class": [4, 5, 6, 10, 11, 12, 19], "elf_pars": 5, "generic_pars": 6, "util": 8, "variabl": [9, 10, 11, 19], "variable_factori": 11, "x2cscope": [12, 19], "develop": 13, "contribut": 13, "set": 13, "up": 13, "dev": 13, "system": 13, "instal": [13, 18], "requir": 13, "run": 13, "test": 13, "ruff": 13, "syntax": 13, "check": 13, "pytest": 13, "build": 13, "doc": 13, "creat": 13, "execut": 13, "exampl": [14, 19], "examplemcaf": 14, "sfr_exampl": 14, "live": 14, "scope": [14, 19], "save": [14, 15], "data": [14, 19], "csv": 14, "file": 14, "gui": [15, 16], "qt": 15, "start": [15, 16], "get": [15, 19], "tab": 15, "watchplot": 15, "scopeview": 15, "watchview": 15, "load": 15, "config": 15, "web": 16, "indic": 17, "tabl": 17, "interfac": 19, "simplest": 19, "import": 19, "read": 19, "valu": 19, "write": 19, "export": 19, "channel": 19, "from": 19, "trigger": 19}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Firmware Support": [[0, "firmware-support"]], "API Reference": [[1, "api-reference"]], "pyx2cscope.__main__": [[2, "module-pyx2cscope.__main__"]], "Module Contents": [[2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"]], "Functions": [[2, "functions"], [3, "functions"], [8, "functions"], [11, "functions"], [12, "functions"]], "pyx2cscope": [[3, "module-pyx2cscope"]], "Subpackages": [[3, "subpackages"]], "Submodules": [[3, "submodules"], [7, "submodules"], [9, "submodules"]], "Package Contents": [[3, "package-contents"]], "Attributes": [[3, "attributes"], [4, "attributes"], [6, "attributes"], [12, "attributes"]], "pyx2cscope.parser.elf16_parser": [[4, "module-pyx2cscope.parser.elf16_parser"]], "Classes": [[4, "classes"], [5, "classes"], [6, "classes"], [10, "classes"], [11, "classes"], [12, "classes"]], "pyx2cscope.parser.elf_parser": [[5, "module-pyx2cscope.parser.elf_parser"]], "pyx2cscope.parser.generic_parser": [[6, "module-pyx2cscope.parser.generic_parser"]], "pyx2cscope.parser": [[7, "module-pyx2cscope.parser"]], "pyx2cscope.utils": [[8, "module-pyx2cscope.utils"]], "pyx2cscope.variable": [[9, "module-pyx2cscope.variable"]], "pyx2cscope.variable.variable": [[10, "module-pyx2cscope.variable.variable"]], "pyx2cscope.variable.variable_factory": [[11, "module-pyx2cscope.variable.variable_factory"]], "pyx2cscope.x2cscope": [[12, "module-pyx2cscope.x2cscope"]], "Development": [[13, "development"]], "Contribution": [[13, "contribution"]], "Set-up the dev system": [[13, "set-up-the-dev-system"]], "Installing dev requirements": [[13, "installing-dev-requirements"]], "Running tests": [[13, "running-tests"]], "ruff syntax check": [[13, "ruff-syntax-check"]], "pytest": [[13, "pytest"]], "Building docs": [[13, "building-docs"]], "Creating executables": [[13, "creating-executables"]], "Examples": [[14, "examples"]], "ExampleMCAF": [[14, "examplemcaf"]], "SFR_Example": [[14, "sfr-example"]], "Live Scope and saving data to CSV file.": [[14, "live-scope-and-saving-data-to-csv-file"]], "GUI Qt": [[15, "gui-qt"]], "Starting the GUI Qt": [[15, "starting-the-gui-qt"]], "Getting Started with pyX2Cscope reference GUI": [[15, "getting-started-with-pyx2cscope-reference-gui"]], "Tab: WatchPlot": [[15, "tab-watchplot"]], "Tab: ScopeView": [[15, "tab-scopeview"]], "Tab: WatchView": [[15, "tab-watchview"]], "Save and Load Config.": [[15, "save-and-load-config"]], "GUI Web": [[16, "gui-web"]], "Starting the Web GUI": [[16, "starting-the-web-gui"]], "pyX2Cscope": [[17, "pyx2cscope"]], "Contents:": [[17, null]], "Indices and tables": [[17, "indices-and-tables"]], "Installation": [[18, "installation"]], "API Interface": [[19, "api-interface"]], "Simplest example": [[19, "simplest-example"]], "X2CScope class": [[19, "x2cscope-class"]], "Import variables": [[19, "import-variables"]], "Variable class": [[19, "variable-class"]], "Reading values": [[19, "reading-values"]], "Writing values": [[19, "writing-values"]], "Import and Export variables": [[19, "import-and-export-variables"]], "Scope Channel": [[19, "scope-channel"]], "Getting Data from Scope": [[19, "getting-data-from-scope"]], "Triggering": [[19, "triggering"]]}, "indexentries": {"_args_check() (in module pyx2cscope.__main__)": [[2, "pyx2cscope.__main__._args_check"]], "module": [[2, "module-pyx2cscope.__main__"], [3, "module-pyx2cscope"], [4, "module-pyx2cscope.parser.elf16_parser"], [5, "module-pyx2cscope.parser.elf_parser"], [6, "module-pyx2cscope.parser.generic_parser"], [7, "module-pyx2cscope.parser"], [8, "module-pyx2cscope.utils"], [9, "module-pyx2cscope.variable"], [10, "module-pyx2cscope.variable.variable"], [11, "module-pyx2cscope.variable.variable_factory"], [12, "module-pyx2cscope.x2cscope"]], "parse_arguments() (in module pyx2cscope.__main__)": [[2, "pyx2cscope.__main__.parse_arguments"]], "pyx2cscope.__main__": [[2, "module-pyx2cscope.__main__"]], "__version__ (in module pyx2cscope)": [[3, "pyx2cscope.__version__"]], "pyx2cscope": [[3, "module-pyx2cscope"]], "set_logger() (in module pyx2cscope)": [[3, "pyx2cscope.set_logger"]], "address_check_lower_limit (in module pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.ADDRESS_CHECK_LOWER_LIMIT"]], "address_check_upper_limit (in module pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.ADDRESS_CHECK_UPPER_LIMIT"]], "elf16parser (class in pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser"]], "_check_for_pointer_tag() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._check_for_pointer_tag"]], "_check_for_structure_tag() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._check_for_structure_tag"]], "_close_elf_file() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._close_elf_file"]], "_get_address_check() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_address_check"]], "_get_address_location() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_address_location"]], "_get_dwarf_die_by_offset() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_dwarf_die_by_offset"]], "_get_end_die() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_end_die"]], "_get_member_from_nested_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_member_from_nested_members"]], "_get_next_die_by_offset() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_next_die_by_offset"]], "_get_structure_member_offset() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_structure_member_offset"]], "_get_structure_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_structure_members"]], "_load_elf_file() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._load_elf_file"]], "_load_symbol_table() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._load_symbol_table"]], "_locate_cu_in_dwarf() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._locate_cu_in_dwarf"]], "_locate_tag_variable_end_die() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._locate_tag_variable_end_die"]], "_map_variables() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._map_variables"]], "_parse_cu() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu"]], "_parse_cu_attributes() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_attributes"]], "_parse_cu_elements() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_elements"]], "_parse_cu_header() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_header"]], "_parse_cu_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_members"]], "_parse_tree() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_tree"]], "calculate_array_size() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser.calculate_array_size"]], "elf_file (in module pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.elf_file"]], "pyx2cscope.parser.elf16_parser": [[4, "module-pyx2cscope.parser.elf16_parser"]], "dummyparser (class in pyx2cscope.parser.elf_parser)": [[5, "pyx2cscope.parser.elf_parser.DummyParser"]], "elfparser (class in pyx2cscope.parser.elf_parser)": [[5, "pyx2cscope.parser.elf_parser.ElfParser"]], "_close_elf_file() (pyx2cscope.parser.elf_parser.dummyparser method)": [[5, "pyx2cscope.parser.elf_parser.DummyParser._close_elf_file"]], "_close_elf_file() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser._close_elf_file"]], "_load_elf_file() (pyx2cscope.parser.elf_parser.dummyparser method)": [[5, "pyx2cscope.parser.elf_parser.DummyParser._load_elf_file"]], "_load_elf_file() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser._load_elf_file"]], "_load_symbol_table() (pyx2cscope.parser.elf_parser.dummyparser method)": [[5, "pyx2cscope.parser.elf_parser.DummyParser._load_symbol_table"]], "_load_symbol_table() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser._load_symbol_table"]], "_map_variables() (pyx2cscope.parser.elf_parser.dummyparser method)": [[5, "pyx2cscope.parser.elf_parser.DummyParser._map_variables"]], "_map_variables() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser._map_variables"]], "get_var_info() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser.get_var_info"]], "get_var_list() (pyx2cscope.parser.elf_parser.elfparser method)": [[5, "pyx2cscope.parser.elf_parser.ElfParser.get_var_list"]], "pyx2cscope.parser.elf_parser": [[5, "module-pyx2cscope.parser.elf_parser"]], "genericparser (class in pyx2cscope.parser.generic_parser)": [[6, "pyx2cscope.parser.generic_parser.GenericParser"]], "_close_elf_file() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._close_elf_file"]], "_extract_address() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._extract_address"]], "_extract_address_from_expression() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._extract_address_from_expression"]], "_fetch_address_from_symtab() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._fetch_address_from_symtab"]], "_find_actual_declaration() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._find_actual_declaration"]], "_get_array_length() (pyx2cscope.parser.generic_parser.genericparser static method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._get_array_length"]], "_get_base_type_die() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._get_base_type_die"]], "_get_die_variable() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._get_die_variable"]], "_get_dwarf_die_by_offset() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._get_dwarf_die_by_offset"]], "_get_end_die() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._get_end_die"]], "_get_member_offset() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._get_member_offset"]], "_load_elf_file() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._load_elf_file"]], "_load_symbol_table() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._load_symbol_table"]], "_map_variables() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._map_variables"]], "_process_array_type() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._process_array_type"]], "_process_base_type() (pyx2cscope.parser.generic_parser.genericparser static method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._process_base_type"]], "_process_die() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._process_die"]], "_process_end_die() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._process_end_die"]], "_process_enum_type() (pyx2cscope.parser.generic_parser.genericparser static method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._process_enum_type"]], "_process_structure_type() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._process_structure_type"]], "_process_union_type() (pyx2cscope.parser.generic_parser.genericparser method)": [[6, "pyx2cscope.parser.generic_parser.GenericParser._process_union_type"]], "elf_file (in module pyx2cscope.parser.generic_parser)": [[6, "pyx2cscope.parser.generic_parser.elf_file"]], "pyx2cscope.parser.generic_parser": [[6, "module-pyx2cscope.parser.generic_parser"]], "pyx2cscope.parser": [[7, "module-pyx2cscope.parser"]], "get_com_port() (in module pyx2cscope.utils)": [[8, "pyx2cscope.utils.get_com_port"]], "get_config_file() (in module pyx2cscope.utils)": [[8, "pyx2cscope.utils.get_config_file"]], "get_elf_file_path() (in module pyx2cscope.utils)": [[8, "pyx2cscope.utils.get_elf_file_path"]], "pyx2cscope.utils": [[8, "module-pyx2cscope.utils"]], "pyx2cscope.variable": [[9, "module-pyx2cscope.variable"]], "variable (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.Variable"]], "variableenum (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableEnum"]], "variablefloat (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableFloat"]], "variableinfo (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableInfo"]], "variableint16 (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableInt16"]], "variableint32 (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableInt32"]], "variableint64 (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableInt64"]], "variableint8 (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableInt8"]], "variableuint16 (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableUint16"]], "variableuint32 (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableUint32"]], "variableuint64 (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableUint64"]], "variableuint8 (class in pyx2cscope.variable.variable)": [[10, "pyx2cscope.variable.variable.VariableUint8"]], "__getitem__() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.__getitem__"]], "__len__() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.__len__"]], "__repr__() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.__repr__"]], "__setitem__() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.__setitem__"]], "_check_value_range() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable._check_value_range"]], "_get_array_values() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable._get_array_values"]], "_get_bit_value() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable._get_bit_value"]], "_get_min_max_values() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableenum method)": [[10, "pyx2cscope.variable.variable.VariableEnum._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variablefloat method)": [[10, "pyx2cscope.variable.variable.VariableFloat._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint16 method)": [[10, "pyx2cscope.variable.variable.VariableInt16._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint32 method)": [[10, "pyx2cscope.variable.variable.VariableInt32._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint64 method)": [[10, "pyx2cscope.variable.variable.VariableInt64._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint8 method)": [[10, "pyx2cscope.variable.variable.VariableInt8._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint16 method)": [[10, "pyx2cscope.variable.variable.VariableUint16._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint32 method)": [[10, "pyx2cscope.variable.variable.VariableUint32._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint64 method)": [[10, "pyx2cscope.variable.variable.VariableUint64._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint8 method)": [[10, "pyx2cscope.variable.variable.VariableUint8._get_min_max_values"]], "_get_value_raw() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable._get_value_raw"]], "_set_bit_value() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable._set_bit_value"]], "_set_value() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable._set_value"]], "_set_value() (pyx2cscope.variable.variable.variableenum method)": [[10, "pyx2cscope.variable.variable.VariableEnum._set_value"]], "_set_value() (pyx2cscope.variable.variable.variablefloat method)": [[10, "pyx2cscope.variable.variable.VariableFloat._set_value"]], "_set_value() (pyx2cscope.variable.variable.variableint16 method)": [[10, "pyx2cscope.variable.variable.VariableInt16._set_value"]], "_set_value() (pyx2cscope.variable.variable.variableint32 method)": [[10, "pyx2cscope.variable.variable.VariableInt32._set_value"]], "_set_value() (pyx2cscope.variable.variable.variableint64 method)": [[10, "pyx2cscope.variable.variable.VariableInt64._set_value"]], "_set_value() (pyx2cscope.variable.variable.variableint8 method)": [[10, "pyx2cscope.variable.variable.VariableInt8._set_value"]], "_set_value() (pyx2cscope.variable.variable.variableuint16 method)": [[10, "pyx2cscope.variable.variable.VariableUint16._set_value"]], "_set_value() (pyx2cscope.variable.variable.variableuint32 method)": [[10, "pyx2cscope.variable.variable.VariableUint32._set_value"]], "_set_value() (pyx2cscope.variable.variable.variableuint64 method)": [[10, "pyx2cscope.variable.variable.VariableUint64._set_value"]], "_set_value() (pyx2cscope.variable.variable.variableuint8 method)": [[10, "pyx2cscope.variable.variable.VariableUint8._set_value"]], "_set_value_raw() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable._set_value_raw"]], "address (pyx2cscope.variable.variable.variableinfo attribute)": [[10, "pyx2cscope.variable.variable.VariableInfo.address"]], "array_size (pyx2cscope.variable.variable.variableinfo attribute)": [[10, "pyx2cscope.variable.variable.VariableInfo.array_size"]], "bit_offset (pyx2cscope.variable.variable.variableinfo attribute)": [[10, "pyx2cscope.variable.variable.VariableInfo.bit_offset"]], "bit_size (pyx2cscope.variable.variable.variableinfo attribute)": [[10, "pyx2cscope.variable.variable.VariableInfo.bit_size"]], "byte_size (pyx2cscope.variable.variable.variableinfo attribute)": [[10, "pyx2cscope.variable.variable.VariableInfo.byte_size"]], "bytes_to_array() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.bytes_to_array"]], "bytes_to_value() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableenum method)": [[10, "pyx2cscope.variable.variable.VariableEnum.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variablefloat method)": [[10, "pyx2cscope.variable.variable.VariableFloat.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint16 method)": [[10, "pyx2cscope.variable.variable.VariableInt16.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint32 method)": [[10, "pyx2cscope.variable.variable.VariableInt32.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint64 method)": [[10, "pyx2cscope.variable.variable.VariableInt64.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint8 method)": [[10, "pyx2cscope.variable.variable.VariableInt8.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint16 method)": [[10, "pyx2cscope.variable.variable.VariableUint16.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint32 method)": [[10, "pyx2cscope.variable.variable.VariableUint32.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint64 method)": [[10, "pyx2cscope.variable.variable.VariableUint64.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint8 method)": [[10, "pyx2cscope.variable.variable.VariableUint8.bytes_to_value"]], "get_enumerator_list() (pyx2cscope.variable.variable.variableenum method)": [[10, "pyx2cscope.variable.variable.VariableEnum.get_enumerator_list"]], "get_value() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.get_value"]], "get_width() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.get_width"]], "get_width() (pyx2cscope.variable.variable.variableenum method)": [[10, "pyx2cscope.variable.variable.VariableEnum.get_width"]], "get_width() (pyx2cscope.variable.variable.variablefloat method)": [[10, "pyx2cscope.variable.variable.VariableFloat.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint16 method)": [[10, "pyx2cscope.variable.variable.VariableInt16.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint32 method)": [[10, "pyx2cscope.variable.variable.VariableInt32.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint64 method)": [[10, "pyx2cscope.variable.variable.VariableInt64.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint8 method)": [[10, "pyx2cscope.variable.variable.VariableInt8.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint16 method)": [[10, "pyx2cscope.variable.variable.VariableUint16.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint32 method)": [[10, "pyx2cscope.variable.variable.VariableUint32.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint64 method)": [[10, "pyx2cscope.variable.variable.VariableUint64.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint8 method)": [[10, "pyx2cscope.variable.variable.VariableUint8.get_width"]], "is_array() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.is_array"]], "is_integer() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableenum method)": [[10, "pyx2cscope.variable.variable.VariableEnum.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variablefloat method)": [[10, "pyx2cscope.variable.variable.VariableFloat.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint16 method)": [[10, "pyx2cscope.variable.variable.VariableInt16.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint32 method)": [[10, "pyx2cscope.variable.variable.VariableInt32.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint64 method)": [[10, "pyx2cscope.variable.variable.VariableInt64.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint8 method)": [[10, "pyx2cscope.variable.variable.VariableInt8.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint16 method)": [[10, "pyx2cscope.variable.variable.VariableUint16.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint32 method)": [[10, "pyx2cscope.variable.variable.VariableUint32.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint64 method)": [[10, "pyx2cscope.variable.variable.VariableUint64.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint8 method)": [[10, "pyx2cscope.variable.variable.VariableUint8.is_integer"]], "is_signed() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableenum method)": [[10, "pyx2cscope.variable.variable.VariableEnum.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variablefloat method)": [[10, "pyx2cscope.variable.variable.VariableFloat.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint16 method)": [[10, "pyx2cscope.variable.variable.VariableInt16.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint32 method)": [[10, "pyx2cscope.variable.variable.VariableInt32.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint64 method)": [[10, "pyx2cscope.variable.variable.VariableInt64.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint8 method)": [[10, "pyx2cscope.variable.variable.VariableInt8.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint16 method)": [[10, "pyx2cscope.variable.variable.VariableUint16.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint32 method)": [[10, "pyx2cscope.variable.variable.VariableUint32.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint64 method)": [[10, "pyx2cscope.variable.variable.VariableUint64.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint8 method)": [[10, "pyx2cscope.variable.variable.VariableUint8.is_signed"]], "name (pyx2cscope.variable.variable.variableinfo attribute)": [[10, "pyx2cscope.variable.variable.VariableInfo.name"]], "pyx2cscope.variable.variable": [[10, "module-pyx2cscope.variable.variable"]], "set_value() (pyx2cscope.variable.variable.variable method)": [[10, "pyx2cscope.variable.variable.Variable.set_value"]], "type (pyx2cscope.variable.variable.variableinfo attribute)": [[10, "pyx2cscope.variable.variable.VariableInfo.type"]], "valid_values (pyx2cscope.variable.variable.variableinfo attribute)": [[10, "pyx2cscope.variable.variable.VariableInfo.valid_values"]], "elf (pyx2cscope.variable.variable_factory.filetype attribute)": [[11, "pyx2cscope.variable.variable_factory.FileType.ELF"]], "filetype (class in pyx2cscope.variable.variable_factory)": [[11, "pyx2cscope.variable.variable_factory.FileType"]], "pickle (pyx2cscope.variable.variable_factory.filetype attribute)": [[11, "pyx2cscope.variable.variable_factory.FileType.PICKLE"]], "variablefactory (class in pyx2cscope.variable.variable_factory)": [[11, "pyx2cscope.variable.variable_factory.VariableFactory"]], "yaml (pyx2cscope.variable.variable_factory.filetype attribute)": [[11, "pyx2cscope.variable.variable_factory.FileType.YAML"]], "_build_export_file_name() (pyx2cscope.variable.variable_factory.variablefactory method)": [[11, "pyx2cscope.variable.variable_factory.VariableFactory._build_export_file_name"]], "export_variables() (pyx2cscope.variable.variable_factory.variablefactory method)": [[11, "pyx2cscope.variable.variable_factory.VariableFactory.export_variables"]], "get_var_list() (pyx2cscope.variable.variable_factory.variablefactory method)": [[11, "pyx2cscope.variable.variable_factory.VariableFactory.get_var_list"]], "get_variable() (pyx2cscope.variable.variable_factory.variablefactory method)": [[11, "pyx2cscope.variable.variable_factory.VariableFactory.get_variable"]], "get_variable_raw() (pyx2cscope.variable.variable_factory.variablefactory method)": [[11, "pyx2cscope.variable.variable_factory.VariableFactory.get_variable_raw"]], "import_variables() (pyx2cscope.variable.variable_factory.variablefactory method)": [[11, "pyx2cscope.variable.variable_factory.VariableFactory.import_variables"]], "pyx2cscope.variable.variable_factory": [[11, "module-pyx2cscope.variable.variable_factory"]], "set_elf_file() (pyx2cscope.variable.variable_factory.variablefactory method)": [[11, "pyx2cscope.variable.variable_factory.VariableFactory.set_elf_file"]], "set_lnet_interface() (pyx2cscope.variable.variable_factory.variablefactory method)": [[11, "pyx2cscope.variable.variable_factory.VariableFactory.set_lnet_interface"]], "variable_info_constructor() (in module pyx2cscope.variable.variable_factory)": [[11, "pyx2cscope.variable.variable_factory.variable_info_constructor"]], "variable_info_repr() (in module pyx2cscope.variable.variable_factory)": [[11, "pyx2cscope.variable.variable_factory.variable_info_repr"]], "triggerconfig (class in pyx2cscope.x2cscope)": [[12, "pyx2cscope.x2cscope.TriggerConfig"]], "uc_width_16bit (in module pyx2cscope.x2cscope)": [[12, "pyx2cscope.x2cscope.UC_WIDTH_16BIT"]], "uc_width_32bit (in module pyx2cscope.x2cscope)": [[12, "pyx2cscope.x2cscope.UC_WIDTH_32BIT"]], "x2cscope (class in pyx2cscope.x2cscope)": [[12, "pyx2cscope.x2cscope.X2CScope"]], "_calc_sda_used_length() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope._calc_sda_used_length"]], "_filter_channels() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope._filter_channels"]], "_read_array_chunks() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope._read_array_chunks"]], "_sort_channel_data() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope._sort_channel_data"]], "add_scope_channel() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.add_scope_channel"]], "clear_all_scope_channel() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.clear_all_scope_channel"]], "clear_trigger() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.clear_trigger"]], "connect() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.connect"]], "disconnect() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.disconnect"]], "export_variables() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.export_variables"]], "get_delay_trigger_position() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.get_delay_trigger_position"]], "get_device_info() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.get_device_info"]], "get_scope_channel_data() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.get_scope_channel_data"]], "get_scope_channel_list() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.get_scope_channel_list"]], "get_trigger_position() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.get_trigger_position"]], "get_variable() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.get_variable"]], "get_variable_as_scope_channel() (in module pyx2cscope.x2cscope)": [[12, "pyx2cscope.x2cscope.get_variable_as_scope_channel"]], "get_variable_raw() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.get_variable_raw"]], "import_variables() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.import_variables"]], "is_scope_data_ready() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.is_scope_data_ready"]], "list_variables() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.list_variables"]], "pyx2cscope.x2cscope": [[12, "module-pyx2cscope.x2cscope"]], "read_array() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.read_array"]], "remove_scope_channel() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.remove_scope_channel"]], "request_scope_data() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.request_scope_data"]], "reset_scope_trigger() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.reset_scope_trigger"]], "scope_sample_time() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.scope_sample_time"]], "set_interface() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.set_interface"]], "set_sample_time() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.set_sample_time"]], "set_scope_state() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.set_scope_state"]], "set_scope_trigger() (pyx2cscope.x2cscope.x2cscope method)": [[12, "pyx2cscope.x2cscope.X2CScope.set_scope_trigger"]], "trigger_delay (pyx2cscope.x2cscope.triggerconfig attribute)": [[12, "pyx2cscope.x2cscope.TriggerConfig.trigger_delay"]], "trigger_edge (pyx2cscope.x2cscope.triggerconfig attribute)": [[12, "pyx2cscope.x2cscope.TriggerConfig.trigger_edge"]], "trigger_level (pyx2cscope.x2cscope.triggerconfig attribute)": [[12, "pyx2cscope.x2cscope.TriggerConfig.trigger_level"]], "trigger_mode (pyx2cscope.x2cscope.triggerconfig attribute)": [[12, "pyx2cscope.x2cscope.TriggerConfig.trigger_mode"]], "variable (pyx2cscope.x2cscope.triggerconfig attribute)": [[12, "pyx2cscope.x2cscope.TriggerConfig.variable"]]}})