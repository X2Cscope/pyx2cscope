Search.setIndex({"docnames": ["HW_Support", "autoapi/index", "autoapi/pyx2cscope/__main__/index", "autoapi/pyx2cscope/index", "autoapi/pyx2cscope/parser/elf16_parser/index", "autoapi/pyx2cscope/parser/elf32_parser/index", "autoapi/pyx2cscope/parser/elf_parser/index", "autoapi/pyx2cscope/parser/index", "autoapi/pyx2cscope/variable/index", "autoapi/pyx2cscope/variable/variable/index", "autoapi/pyx2cscope/variable/variable_factory/index", "autoapi/pyx2cscope/xc2scope/index", "example", "gui_qt", "gui_web", "how_to", "index", "scripting"], "filenames": ["HW_Support.md", "autoapi/index.rst", "autoapi/pyx2cscope/__main__/index.rst", "autoapi/pyx2cscope/index.rst", "autoapi/pyx2cscope/parser/elf16_parser/index.rst", "autoapi/pyx2cscope/parser/elf32_parser/index.rst", "autoapi/pyx2cscope/parser/elf_parser/index.rst", "autoapi/pyx2cscope/parser/index.rst", "autoapi/pyx2cscope/variable/index.rst", "autoapi/pyx2cscope/variable/variable/index.rst", "autoapi/pyx2cscope/variable/variable_factory/index.rst", "autoapi/pyx2cscope/xc2scope/index.rst", "example.md", "gui_qt.md", "gui_web.md", "how_to.rst", "index.rst", "scripting.md"], "titles": ["Firmware Support", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf16_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf32_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable.variable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable.variable_factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.xc2scope</span></code>", "Examples", "GUI Qt", "GUI Web", "How-To", "pyX2Cscope", "Scripting"], "terms": {"x2cscope": [0, 2, 11, 12, 15, 16], "side": [0, 11], "librari": [0, 16], "i": [0, 2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17], "written": [0, 9], "standard": 0, "c": [0, 4, 5, 12, 17], "therefor": 0, "whole": 0, "microchip": [0, 4, 11, 16, 17], "16bit": 0, "32bit": 0, "mcu": [0, 8, 9, 10, 11, 12], "portfolio": 0, "http": [0, 14], "github": 0, "io": 0, "doc": 0, "x2cscopefirmwar": 0, "html": 0, "implement": [0, 2, 5, 6, 9, 11, 13, 14, 16], "us": [0, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17], "dynam": 0, "function": [0, 5, 12, 14, 16, 17], "pointer": [0, 4], "some": [0, 12, 16, 17], "our": 0, "low": [0, 9, 11, 12], "end": [0, 4, 5], "8bit": 0, "doe": [0, 14], "contact": 0, "u": 0, "more": [0, 12, 16], "detail": 0, "www": 0, "com": [0, 12], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "page": [1, 16], "contain": [1, 3, 4, 5, 6, 8, 9, 11, 17], "auto": [1, 11, 17], "gener": [1, 4, 6, 12, 17], "document": [1, 2, 13, 14, 17], "1": [1, 3, 9, 11, 12, 17], "pyx2cscop": [1, 12, 13, 14, 15, 17], "parser": [1, 3, 10], "elf16_pars": [1, 3, 7], "elf32_pars": [1, 3, 7], "elf_pars": [1, 3, 4, 5, 7], "variabl": [1, 3, 4, 5, 6, 11, 12, 15, 16], "variable_factori": [1, 3, 8, 11], "__main__": [1, 3, 12], "xc2scope": [1, 3, 12, 16, 17], "creat": [1, 3, 10, 11, 12, 16, 17], "sphinx": 1, "autoapi": 1, "main": [2, 12], "entri": 2, "point": [2, 9], "applic": [2, 13], "initi": [2, 12, 16], "log": [2, 3, 12, 16], "configur": [2, 11, 12, 17], "base": [2, 4, 5, 6, 8, 9, 10, 12, 16], "command": [2, 13, 14, 16], "line": [2, 16], "argument": [2, 13, 14, 16], "set": [2, 9, 11, 12, 16, 17], "up": [2, 11, 12, 17], "pyqt5": [2, 16], "launch": 2, "gui": [2, 15], "parse_argu": 2, "sourc": [2, 3, 4, 5, 6, 9, 10, 11], "forward": 2, "receiv": [2, 3, 11], "argpars": 2, "pars": [2, 4, 5, 6, 10], "them": [2, 6, 12, 16], "possibl": [2, 16, 17], "ar": [2, 11, 12, 16, 17], "l": [2, 16], "level": [2, 3, 9, 11, 12, 16, 17], "info": [2, 3, 12, 16], "default": [2, 3, 6, 9, 11, 12, 13, 14, 16, 17], "valu": [2, 4, 9, 11, 12, 15, 16], "v": 2, "action": 2, "version": [2, 3, 16], "w": [2, 3, 12, 14, 16], "start": [2, 4, 5, 11, 15, 16, 17], "web": [2, 15, 16], "user": [2, 5, 13, 14, 15, 16], "interfac": [2, 6, 9, 11, 13, 14, 15, 17], "app": [2, 13], "For": [2, 16, 17], "complet": [2, 12, 17], "list": [2, 6, 9, 10, 11], "execut": [2, 3, 4, 13, 16, 17], "python": [2, 11, 13, 14, 16, 17], "m": [2, 12, 13, 14, 16], "help": [2, 16], "execute_qt": 2, "arg": [2, 3, 4, 5, 6, 9, 10, 11, 12], "qt": [2, 15, 16], "non": [2, 9], "kei": [2, 9, 11, 12], "return": [2, 4, 5, 6, 9, 10, 11, 12, 17], "execute_web": 2, "kwarg": [2, 11], "server": [2, 14], "relat": 2, "see": [2, 16], "modul": [3, 7, 8, 16], "0": [3, 4, 5, 6, 9, 10, 11, 12, 14, 17], "2": [3, 4, 9, 11], "__version__": 3, "set_logg": 3, "int": [3, 4, 5, 6, 9, 10, 11, 12, 17], "error": [3, 9, 12, 16], "filenam": [3, 12], "str": [3, 4, 5, 6, 9, 10, 11, 12], "__name__": [3, 12], "consol": 3, "bool": [3, 4, 9, 11, 12], "fals": [3, 4, 9, 11, 12, 17], "mode": [3, 11, 12], "call": [3, 11], "basicconfig": [3, 12], "everi": [3, 11], "file": [3, 4, 5, 6, 7, 10, 11, 15, 16], "could": [3, 12, 17], "run": [3, 11, 13, 14, 16, 17], "standalon": [3, 16], "A": [3, 4, 5, 6, 10, 11, 17], "local": [3, 14], "folder": [3, 17], "where": 3, "program": [3, 4, 17], "onli": [3, 11, 17], "when": [3, 9, 13, 17], "first": [3, 11, 17], "time": [3, 11, 12, 16, 17], "multipl": [3, 14, 17], "have": [3, 17], "effect": 3, "warn": [3, 16], "debug": [3, 5, 12, 16], "critic": [3, 16], "etc": [3, 8, 16, 17], "without": 3, "extens": 3, "true": [3, 4, 9, 11, 12, 17], "output": 3, "messag": [3, 12], "AND": [3, 12], "new": [3, 16, 17], "append": 3, "elf16": 4, "": [4, 9, 10, 12, 17], "xc16": 4, "compil": [4, 17], "defin": [4, 8, 9, 11, 12, 17], "elf16pars": [4, 10], "elf": [4, 5, 6, 7, 10, 11, 12, 15, 16], "The": [4, 5, 6, 9, 10, 11, 12, 13, 14, 17], "extract": [4, 5, 6], "inform": [4, 5, 6, 10, 13, 14, 16, 17], "about": [4, 6, 10], "usag": 4, "elf_read": 4, "elf_fil": [4, 5, 6, 11, 12, 16, 17], "variable_map": [4, 6], "map_vari": [4, 6], "print": [4, 9, 16], "address_check_lower_limit": 4, "address_check_upper_limit": 4, "6": 4, "elf_path": [4, 5, 6, 10], "elfpars": [4, 5, 6, 10], "extend": [4, 6, 11], "basic": [4, 12], "specif": [4, 5, 6, 8, 9, 12, 16], "handl": [4, 5, 6, 8, 9, 12, 17], "produc": 4, "xc16_read_elf_path": 4, "path": [4, 6, 11, 12, 17], "readelf": 4, "_parse_cu_attribut": 4, "unit": [4, 8, 16], "from": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16], "dict": [4, 5, 6, 11], "dictionari": [4, 5, 6, 11], "_parse_cu_head": 4, "header": 4, "_parse_cu_memb": 4, "member": [4, 5, 17], "_parse_cu_el": 4, "element": [4, 9], "_parse_cu": 4, "_parse_tre": 4, "tree_str": 4, "entir": 4, "tree": 4, "string": [4, 9, 17], "_load_elf_fil": [4, 5, 6], "load": [4, 5, 6], "its": [4, 5, 9, 10, 11, 17], "static": 4, "_get_structure_member_offset": 4, "locat": [4, 9, 17], "offset": [4, 5], "structur": [4, 5, 6, 17], "_locate_cu_in_dwarf": 4, "structure_di": [4, 5], "correspond": [4, 5, 6], "dwarf": [4, 5, 6], "repres": [4, 5, 6, 9, 11, 17], "die": [4, 5], "tupl": [4, 5, 9], "sibl": 4, "_get_member_from_nested_memb": 4, "parent_address": 4, "nested_memb": 4, "cu_structur": 4, "nest": 4, "address": [4, 5, 6, 9, 10, 11, 12, 17], "parent": [4, 5], "_get_structure_memb": [4, 5], "recurs": [4, 5], "get": [4, 5, 7, 9, 10, 11, 12, 15, 16], "all": [4, 6, 9, 11, 12, 17], "_get_address_check": 4, "check": [4, 9, 11, 16, 17], "_get_address_loc": 4, "_locate_tag_variable_end_di": 4, "tag": [4, 5], "_check_for_pointer_tag": 4, "end_di": [4, 5], "otherwis": [4, 9, 10, 11], "_check_for_structure_tag": 4, "_get_end_di": [4, 5], "start_di": 4, "given": [4, 5, 6, 9, 11], "di": 4, "_get_next_die_by_offset": 4, "calculate_array_s": 4, "array_di": 4, "calcul": [4, 11], "size": [4, 5, 6, 9, 10, 11], "an": [4, 5, 6, 9, 10, 11, 13, 14, 16, 17], "arrai": [4, 5, 6, 9, 10, 11, 17], "method": [4, 5, 6, 8, 9, 10, 11, 17], "retriev": [4, 5, 9, 10, 11, 12, 16, 17], "type": [4, 5, 6, 8, 9, 10, 11, 16], "upper": 4, "bound": 4, "_get_dwarf_die_by_offset": [4, 5], "_map_vari": [4, 5, 6], "variableinfo": [4, 5, 6], "map": [4, 5, 6], "name": [4, 5, 6, 9, 10, 11, 12, 17], "_desktop": 4, "_project": 4, "motorbench_project": 4, "motorbench_foc_pll_pic33ck256mp508_mclv2": 4, "zsmt_dspic33ck": 4, "provid": [5, 6, 8, 9, 10, 11, 17], "compat": 5, "32": [5, 9], "bit": [5, 9, 12], "architectur": [5, 6, 10], "It": [5, 8, 9, 11, 13, 14, 16, 17], "focus": 5, "elf32pars": [5, 10], "_get_structure_members_recurs": 5, "type_di": 5, "parent_nam": 5, "prev_address_offset": 5, "var_nam": [5, 6], "_processing_end_di": 5, "process": [5, 6, 11], "_get_array_length": 5, "length": [5, 9, 11], "accord": [5, 6, 10, 17], "hardwar": [5, 6, 9, 16], "should": [5, 6, 9, 11], "subclass": [5, 6, 9], "differ": [5, 6, 8, 15, 16], "format": [5, 6, 12], "current_di": 5, "find": [5, 13, 14, 16], "elftool": 5, "_get_member_typ": 5, "type_offset": 5, "none": [5, 6, 9, 10, 11, 12], "byte": [5, 6, 9, 11, 12], "found": [5, 6, 10, 17], "abstract": [5, 6, 9], "object": [5, 6, 9, 10, 11, 17], "m67250": 5, "download": 5, "mclv2_sam_e54_pim": 5, "x": 5, "product": [5, 17], "data": [6, 7, 8, 9, 11, 15, 16], "design": 6, "attribut": [6, 9, 10, 11], "byte_s": 6, "memori": [6, 8, 9, 10, 11, 17], "array_s": [6, 9, 10], "abc": 6, "within": [6, 9, 16], "dwarf_info": 6, "store": [6, 8, 9, 11], "current": [6, 12, 13, 16, 17], "being": 6, "get_var_info": 6, "specifi": [6, 9, 11, 12, 16], "get_var_list": [6, 10], "associ": 6, "option": [6, 11, 16], "avail": [6, 10, 11, 12, 17], "sort": [6, 11], "respons": 7, "requir": [7, 11, 17], "paramet": [7, 17], "abl": [7, 17], "fetch": 7, "microcontrol": [7, 8, 9, 10, 11, 16, 17], "packag": [8, 11, 16], "class": [8, 15, 16], "includ": [8, 11, 14, 17], "support": [8, 16, 17], "variou": 8, "read": [8, 11, 12, 15, 16], "write": [8, 9, 12, 16, 17], "manipul": 8, "lnet": [8, 9, 10, 11, 16], "protocol": [8, 11, 16], "like": [8, 9, 16, 17], "variableint8": [8, 9], "variableuint8": [8, 9], "variableint16": [8, 9], "well": [9, 17], "integ": 9, "float": 9, "number": [9, 11, 12, 17], "necessari": 9, "convert": [9, 11], "between": [9, 11], "represent": 9, "actual": [9, 17], "8": [9, 12, 17], "sign": 9, "unsign": 9, "16": 9, "variableuint16": 9, "variableint32": 9, "variableuint32": 9, "variableint64": 9, "64": 9, "variableuint64": 9, "variablefloat": 9, "l_net": [9, 10], "mchplnet": [9, 10, 11], "__getitem__": 9, "item": [9, 12, 17], "regard": 9, "index": [9, 11, 16], "convers": [9, 11], "real": [9, 16], "case": [9, 10], "zero": 9, "rais": [9, 10], "indexerror": 9, "If": [9, 10, 11, 17], "outsid": [9, 16], "scope": [9, 11, 15, 16], "posit": [9, 11, 12], "__setitem__": 9, "__len__": 9, "In": 9, "we": 9, "singl": 9, "__repr__": 9, "termin": [9, 11, 16], "oper": [9, 11, 12], "instead": [9, 17], "_get_array_valu": 9, "get_valu": [9, 12, 16, 17], "_check_value_rang": 9, "rang": [9, 12], "min": 9, "max": [9, 12], "valueerror": 9, "_get_min_max_valu": 9, "allow": [9, 14, 16], "minimum": 9, "maximum": 9, "bytes_to_valu": 9, "bytearrai": [9, 11], "respect": [9, 10, 17], "bytes_to_arrai": 9, "width": 9, "set_valu": [9, 12, 16, 17], "new_valu": 9, "get_width": 9, "is_arrai": 9, "_get_value_raw": 9, "ask": 9, "raw": [9, 11], "expect": 9, "must": 9, "reconstruct": 9, "right": 9, "_set_value_raw": 9, "bytes_data": 9, "ram": 9, "send": 9, "commun": [9, 10, 11, 12, 16, 17], "except": [9, 10, 12], "is_sign": 9, "determin": 9, "is_integ": 9, "overrid": 9, "int8": 9, "which": [9, 17], "becaus": 9, "4": [9, 14], "factori": [10, 11], "variablefactori": [10, 11], "either": [10, 16, 17], "depend": 10, "can": [10, 11, 12, 13, 16, 17], "interact": [10, 12], "instanc": 10, "device_info": 10, "connect": [10, 11], "devic": [10, 14], "appropri": 10, "get_vari": [10, 11, 12, 16, 17], "_get_variable_inst": 10, "var_typ": 10, "vartyp": 10, "x2c": [11, 12], "firmwar": [11, 16], "enabl": [11, 16], "embed": [11, 16], "system": [11, 16], "utilis": 11, "channel": [11, 12, 15, 16], "request": [11, 17], "get_variable_as_scope_channel": 11, "servic": 11, "scopechannel": 11, "triggerconfig": [11, 17], "trigger": [11, 15], "trigger_level": [11, 17], "trigger_mod": [11, 17], "trigger_delai": [11, 17], "delai": [11, 17], "percentag": 11, "trigger_edg": [11, 17], "rise": [11, 17], "fall": [11, 17], "abstract_interfac": 11, "interfaceabc": 11, "tool": 11, "network": 11, "scope_setup": 11, "setup": 11, "convert_list": 11, "set_interfac": 11, "set_elf_fil": 11, "establish": 11, "disconnect": 11, "list_vari": 11, "add_scope_channel": [11, 12, 17], "add": [11, 12, 17], "ad": [11, 17], "id": 11, "clear_scope_channel": [11, 17], "remov": [11, 17], "reset": [11, 17], "ani": [11, 12, 17], "remove_scope_channel": [11, 17], "result": [11, 12], "get_scope_channel_list": 11, "reset_scope_trigg": 11, "e": [11, 12, 17], "happen": 11, "set_scope_trigg": [11, 17], "config": 11, "clear_trigg": 11, "set_sample_tim": [11, 12], "sample_tim": 11, "pre": [11, 17], "scaler": 11, "sampl": [11, 12, 17], "total": 11, "cost": 11, "resolut": 11, "2nd": 11, "3rd": 11, "factor": 11, "set_scope_st": 11, "scope_st": 11, "state": [11, 12, 17], "desir": [11, 17], "request_scope_data": [11, 12, 17], "layer": 11, "onc": [11, 17], "made": 11, "acquisit": [11, 12], "is_scope_data_readi": [11, 12, 17], "readi": [11, 12, 17], "befor": 11, "pleas": 11, "insert": 11, "get_trigger_posit": 11, "event": 11, "get_delay_trigger_posit": 11, "_calc_sda_used_length": 11, "sda": 11, "portion": 11, "_read_array_chunk": 11, "chunk": 11, "read_arrai": 11, "data_typ": 11, "_sort_channel_data": 11, "dataset": 11, "order": 11, "_filter_channel": 11, "filter": 11, "valid": 11, "get_scope_channel_data": [11, 12, 17], "valid_data": [11, 12], "under": [12, 17], "py": 12, "veri": 12, "certain": 12, "motorbench": 12, "code": 12, "import": [12, 16, 17], "util": 12, "get_com_port": 12, "get_elf_file_path": 12, "captur": 12, "serial": [12, 16, 17], "port": [12, 14, 15, 16], "serial_port": 12, "baud_rat": [12, 17], "115200": [12, 16, 17], "baud": [12, 16, 17], "rate": [12, 16, 17], "x2c_scope": [12, 16, 17], "speed_refer": [12, 16], "motor": [12, 16], "apidata": [12, 16], "velocityrefer": [12, 16], "speed": 12, "refer": [12, 16], "speed_measur": [12, 16], "velocitymeasur": [12, 16], "measur": 12, "attempt": 12, "speedrefer": 12, "try": [12, 16], "speed_reference_valu": 12, "f": 12, "occur": 12, "chang": [12, 17], "led": 12, "modifi": 12, "dspic33ck256mp508": 12, "special": 12, "regist": [12, 17], "blinkysfr": 12, "select": [12, 17], "constant": 12, "led1_bit": 12, "12": 12, "late12": 12, "led2_bit": 12, "13": 12, "late13": 12, "def": 12, "set_led_st": 12, "bit_posit": 12, "clear": [12, 17], "OR": 12, "els": 12, "sethigh": 12, "high": 12, "setlow": 12, "demonstr": 12, "sfr": 12, "control": [12, 17], "sfr_led": 12, "get_variable_raw": 12, "3702": 12, "late": 12, "sheet": 12, "initial_led_st": 12, "while": [12, 17], "led1": 12, "led2": 12, "led1_high_valu": 12, "led2_high_valu": 12, "sleep": [12, 17], "led1_low_valu": 12, "led2_low_valu": 12, "other": 12, "matplotlib": [12, 17], "pyplot": 12, "plt": 12, "__file__": 12, "idq": 12, "q": [12, 13], "vabc": 12, "b": 12, "upto": 12, "var": 12, "plot": [12, 17], "ion": 12, "turn": 12, "fig": 12, "ax": 12, "subplot": 12, "loop": [12, 16, 17], "sample_count": 12, "max_sampl": 12, "100": 12, "increas": 12, "need": [12, 17], "data_storag": 12, "assum": 12, "khz": 12, "adjust": 12, "time_valu": 12, "001": 12, "len": 12, "millisecond": 12, "000001": 12, "microsecond": 12, "label": 12, "set_xlabel": 12, "axi": 12, "accordingli": 12, "set_ylabel": 12, "set_titl": 12, "legend": 12, "paus": 12, "short": 12, "updat": 12, "break": 12, "ioff": 12, "off": 12, "after": [12, 17], "show": 12, "collect": [12, 16, 17], "storag": 12, "csv_file_path": 12, "scope_data": 12, "max_length": 12, "open": [12, 14], "newlin": 12, "writer": 12, "dictwrit": 12, "fieldnam": 12, "writehead": 12, "row": 12, "writerow": 12, "visit": 12, "directori": 12, "graphic": [13, 14, 15, 16, 17], "built": 13, "over": [13, 16], "aim": 13, "serv": 13, "exampl": [13, 14, 16, 17], "how": [13, 14, 16, 17], "make": [13, 16], "desktop": 13, "out": 13, "box": 13, "below": [13, 14, 16, 17], "also": [13, 14], "addit": [13, 14, 16, 17], "you": [13, 14, 15, 16, 17], "mai": [13, 14, 16, 17], "api": [13, 14, 17], "uns": 14, "flask": 14, "bootstrap": 14, "jqueri": 14, "chart": 14, "j": 14, "build": 14, "custom": [14, 16], "window": [14, 16], "even": [14, 16], "access": 14, "smart": 14, "your": [14, 16, 17], "machin": [14, 16], "extern": 14, "ha": [14, 17], "5000": 14, "localhost": 14, "follow": [14, 16, 17], "To": [14, 16, 17], "host": 14, "section": [15, 16], "guid": 15, "approach": 15, "script": [15, 16], "wai": 15, "comprehens": 16, "offer": 16, "develop": 16, "power": 16, "toolkit": 16, "softwar": 16, "combin": 16, "capabl": 16, "advanc": 16, "visual": 16, "featur": 16, "directli": [16, 17], "environ": [16, 17], "via": 16, "uart": 16, "lin": [16, 17], "usb": 16, "tcp": [16, 17], "ip": [16, 17], "plugin": 16, "mplabx": [16, 17], "let": 16, "autom": 16, "test": 16, "tdd": 16, "pytest": 16, "bdd": 16, "behavior": 16, "driven": 16, "framework": [16, 17], "cucumb": 16, "learn": 16, "train": 16, "model": 16, "analysi": 16, "ai": 16, "hil": 16, "tune": 16, "virtual": 16, "venv": 16, "activ": 16, "pip": 16, "highli": 16, "recommend": 16, "underneath": [16, 17], "nevertheless": 16, "ignor": 16, "upgrad": 16, "both": 16, "There": 16, "two": [16, 17], "one": 16, "browser": 16, "These": 16, "own": 16, "than": 16, "offici": 16, "manag": 16, "simplest": 16, "depict": [16, 17], "com8": 16, "path_to_elf_fil": 16, "target": 16, "1000": 16, "examplemcaf": 16, "sfr_exampl": 16, "live": 16, "save": 16, "csv": 16, "subpackag": 16, "submodul": 16, "search": 16, "successfulli": 17, "instal": 17, "project": 17, "so": 17, "insid": 17, "step": 17, "clss": 17, "pyx2scop": 17, "instanti": 17, "com3": 17, "dev": 17, "ttyusb": 17, "come": 17, "futur": 17, "prefer": 17, "devtool": 17, "hex": 17, "flash": 17, "descript": 17, "dist": 17, "your_elf_fil": 17, "comm": 17, "com16": 17, "your_path_to_elf_fil": 17, "next": 17, "link": 17, "want": 17, "monitor": 17, "variable_nam": 17, "replac": 17, "struct": 17, "dot": 17, "convent": 17, "struct_nam": 17, "final": 17, "gone": 17, "through": 17, "mean": 17, "dure": 17, "frame": 17, "seaborn": 17, "previous": 17, "explain": 17, "variable1": 17, "variable2": 17, "each": 17, "present": 17, "sequenc": 17, "done": 17, "ye": 17, "again": 17, "begin": 17, "yet": 17, "progress": 17, "simpl": 17, "wait": 17, "do": 17, "someth": 17, "work": 17, "pass": 17, "trigger_config": 17, "No": 17, "post": 17}, "objects": {"": [[3, 0, 0, "-", "pyx2cscope"]], "pyx2cscope": [[2, 0, 0, "-", "__main__"], [3, 2, 1, "", "__version__"], [7, 0, 0, "-", "parser"], [3, 1, 1, "", "set_logger"], [8, 0, 0, "-", "variable"], [11, 0, 0, "-", "xc2scope"]], "pyx2cscope.__main__": [[2, 1, 1, "", "execute_qt"], [2, 1, 1, "", "execute_web"], [2, 1, 1, "", "parse_arguments"]], "pyx2cscope.parser": [[4, 0, 0, "-", "elf16_parser"], [5, 0, 0, "-", "elf32_parser"], [6, 0, 0, "-", "elf_parser"]], "pyx2cscope.parser.elf16_parser": [[4, 2, 1, "", "ADDRESS_CHECK_LOWER_LIMIT"], [4, 2, 1, "", "ADDRESS_CHECK_UPPER_LIMIT"], [4, 3, 1, "", "Elf16Parser"], [4, 2, 1, "", "elf_file"]], "pyx2cscope.parser.elf16_parser.Elf16Parser": [[4, 4, 1, "", "_check_for_pointer_tag"], [4, 4, 1, "", "_check_for_structure_tag"], [4, 4, 1, "", "_get_address_check"], [4, 4, 1, "", "_get_address_location"], [4, 4, 1, "", "_get_dwarf_die_by_offset"], [4, 4, 1, "", "_get_end_die"], [4, 4, 1, "", "_get_member_from_nested_members"], [4, 4, 1, "", "_get_next_die_by_offset"], [4, 4, 1, "", "_get_structure_member_offset"], [4, 4, 1, "", "_get_structure_members"], [4, 4, 1, "", "_load_elf_file"], [4, 4, 1, "", "_locate_cu_in_dwarf"], [4, 4, 1, "", "_locate_tag_variable_end_die"], [4, 4, 1, "", "_map_variables"], [4, 4, 1, "", "_parse_cu"], [4, 4, 1, "", "_parse_cu_attributes"], [4, 4, 1, "", "_parse_cu_elements"], [4, 4, 1, "", "_parse_cu_header"], [4, 4, 1, "", "_parse_cu_members"], [4, 4, 1, "", "_parse_tree"], [4, 4, 1, "", "calculate_array_size"]], "pyx2cscope.parser.elf32_parser": [[5, 3, 1, "", "Elf32Parser"], [5, 2, 1, "", "elf_file"]], "pyx2cscope.parser.elf32_parser.Elf32Parser": [[5, 4, 1, "", "_get_array_length"], [5, 4, 1, "", "_get_dwarf_die_by_offset"], [5, 4, 1, "", "_get_end_die"], [5, 4, 1, "", "_get_member_type"], [5, 4, 1, "", "_get_structure_members"], [5, 4, 1, "", "_get_structure_members_recursive"], [5, 4, 1, "", "_load_elf_file"], [5, 4, 1, "", "_map_variables"], [5, 4, 1, "", "_processing_end_die"]], "pyx2cscope.parser.elf_parser": [[6, 3, 1, "", "ElfParser"], [6, 3, 1, "", "VariableInfo"]], "pyx2cscope.parser.elf_parser.ElfParser": [[6, 4, 1, "", "_load_elf_file"], [6, 4, 1, "", "_map_variables"], [6, 4, 1, "", "get_var_info"], [6, 4, 1, "", "get_var_list"], [6, 4, 1, "", "map_variables"]], "pyx2cscope.parser.elf_parser.VariableInfo": [[6, 5, 1, "", "address"], [6, 5, 1, "", "array_size"], [6, 5, 1, "", "byte_size"], [6, 5, 1, "", "name"], [6, 5, 1, "", "type"]], "pyx2cscope.variable": [[9, 0, 0, "-", "variable"], [10, 0, 0, "-", "variable_factory"]], "pyx2cscope.variable.variable": [[9, 3, 1, "", "Variable"], [9, 3, 1, "", "VariableFloat"], [9, 3, 1, "", "VariableInt16"], [9, 3, 1, "", "VariableInt32"], [9, 3, 1, "", "VariableInt64"], [9, 3, 1, "", "VariableInt8"], [9, 3, 1, "", "VariableUint16"], [9, 3, 1, "", "VariableUint32"], [9, 3, 1, "", "VariableUint64"], [9, 3, 1, "", "VariableUint8"]], "pyx2cscope.variable.variable.Variable": [[9, 4, 1, "", "__getitem__"], [9, 4, 1, "", "__len__"], [9, 4, 1, "", "__repr__"], [9, 4, 1, "", "__setitem__"], [9, 4, 1, "", "_check_value_range"], [9, 4, 1, "", "_get_array_values"], [9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "_get_value_raw"], [9, 4, 1, "", "_set_value_raw"], [9, 4, 1, "", "bytes_to_array"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_array"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableFloat": [[9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt16": [[9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt32": [[9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt64": [[9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt8": [[9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint16": [[9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint32": [[9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint64": [[9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint8": [[9, 4, 1, "", "_get_min_max_values"], [9, 4, 1, "", "bytes_to_value"], [9, 4, 1, "", "get_width"], [9, 4, 1, "", "is_integer"], [9, 4, 1, "", "is_signed"], [9, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable_factory": [[10, 3, 1, "", "VariableFactory"]], "pyx2cscope.variable.variable_factory.VariableFactory": [[10, 4, 1, "", "_get_variable_instance"], [10, 4, 1, "", "get_var_list"], [10, 4, 1, "", "get_variable"]], "pyx2cscope.xc2scope": [[11, 3, 1, "", "TriggerConfig"], [11, 3, 1, "", "X2CScope"], [11, 1, 1, "", "get_variable_as_scope_channel"]], "pyx2cscope.xc2scope.TriggerConfig": [[11, 5, 1, "", "trigger_delay"], [11, 5, 1, "", "trigger_edge"], [11, 5, 1, "", "trigger_level"], [11, 5, 1, "", "trigger_mode"], [11, 5, 1, "", "variable"]], "pyx2cscope.xc2scope.X2CScope": [[11, 4, 1, "", "_calc_sda_used_length"], [11, 4, 1, "", "_filter_channels"], [11, 4, 1, "", "_read_array_chunks"], [11, 4, 1, "", "_sort_channel_data"], [11, 4, 1, "", "add_scope_channel"], [11, 4, 1, "", "clear_scope_channel"], [11, 4, 1, "", "clear_trigger"], [11, 4, 1, "", "connect"], [11, 4, 1, "", "disconnect"], [11, 4, 1, "", "get_delay_trigger_position"], [11, 4, 1, "", "get_scope_channel_data"], [11, 4, 1, "", "get_scope_channel_list"], [11, 4, 1, "", "get_trigger_position"], [11, 4, 1, "", "get_variable"], [11, 4, 1, "", "is_scope_data_ready"], [11, 4, 1, "", "list_variables"], [11, 4, 1, "", "read_array"], [11, 4, 1, "", "remove_scope_channel"], [11, 4, 1, "", "request_scope_data"], [11, 4, 1, "", "reset_scope_trigger"], [11, 4, 1, "", "set_elf_file"], [11, 4, 1, "", "set_interface"], [11, 4, 1, "", "set_sample_time"], [11, 4, 1, "", "set_scope_state"], [11, 4, 1, "", "set_scope_trigger"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"firmwar": 0, "support": 0, "api": [1, 16], "refer": 1, "pyx2cscop": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16], "__main__": 2, "modul": [2, 4, 5, 6, 9, 10, 11], "content": [2, 3, 4, 5, 6, 9, 10, 11, 16], "function": [2, 3, 11], "subpackag": 3, "submodul": [3, 7, 8], "packag": 3, "attribut": [3, 4, 5], "parser": [4, 5, 6, 7], "elf16_pars": 4, "class": [4, 5, 6, 9, 10, 11, 17], "elf32_pars": 5, "elf_pars": 6, "variabl": [8, 9, 10, 17], "variable_factori": 10, "xc2scope": 11, "exampl": 12, "examplemcaf": 12, "sfr_exampl": 12, "live": 12, "scope": [12, 17], "save": 12, "data": [12, 17], "csv": 12, "file": [12, 17], "gui": [13, 14, 16], "qt": 13, "start": [13, 14], "web": 14, "how": 15, "To": 15, "instal": 16, "usag": 16, "The": 16, "interfac": 16, "indic": 16, "tabl": 16, "script": 17, "x2cscope": 17, "port": 17, "elf": 17, "read": 17, "valu": 17, "channel": 17, "get": 17, "from": 17, "trigger": 17}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Firmware Support": [[0, "firmware-support"]], "API Reference": [[1, "api-reference"]], "pyx2cscope.__main__": [[2, "module-pyx2cscope.__main__"]], "Module Contents": [[2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"]], "Functions": [[2, "functions"], [3, "functions"], [11, "functions"]], "pyx2cscope": [[3, "module-pyx2cscope"]], "Subpackages": [[3, "subpackages"]], "Submodules": [[3, "submodules"], [7, "submodules"], [8, "submodules"]], "Package Contents": [[3, "package-contents"]], "Attributes": [[3, "attributes"], [4, "attributes"], [5, "attributes"]], "pyx2cscope.parser.elf16_parser": [[4, "module-pyx2cscope.parser.elf16_parser"]], "Classes": [[4, "classes"], [5, "classes"], [6, "classes"], [9, "classes"], [10, "classes"], [11, "classes"]], "pyx2cscope.parser.elf32_parser": [[5, "module-pyx2cscope.parser.elf32_parser"]], "pyx2cscope.parser.elf_parser": [[6, "module-pyx2cscope.parser.elf_parser"]], "pyx2cscope.parser": [[7, "module-pyx2cscope.parser"]], "pyx2cscope.variable": [[8, "module-pyx2cscope.variable"]], "pyx2cscope.variable.variable": [[9, "module-pyx2cscope.variable.variable"]], "pyx2cscope.variable.variable_factory": [[10, "module-pyx2cscope.variable.variable_factory"]], "pyx2cscope.xc2scope": [[11, "module-pyx2cscope.xc2scope"]], "Examples": [[12, "examples"]], "ExampleMCAF": [[12, "examplemcaf"]], "SFR_Example": [[12, "sfr-example"]], "Live Scope and saving data to CSV file.": [[12, "live-scope-and-saving-data-to-csv-file"]], "GUI Qt": [[13, "gui-qt"]], "Starting the GUI Qt": [[13, "starting-the-gui-qt"]], "GUI Web": [[14, "gui-web"]], "Starting the Web GUI": [[14, "starting-the-web-gui"]], "How-To": [[15, "how-to"]], "pyX2Cscope": [[16, "pyx2cscope"]], "Installation": [[16, "installation"]], "Usage": [[16, "usage"]], "The GUI interface": [[16, "the-gui-interface"]], "The API interface": [[16, "the-api-interface"]], "Contents:": [[16, null]], "Indices and tables": [[16, "indices-and-tables"]], "Scripting": [[17, "scripting"]], "X2CScope class": [[17, "x2cscope-class"]], "Port": [[17, "port"]], "Elf File": [[17, "elf-file"]], "Variable class": [[17, "variable-class"]], "Reading values": [[17, "reading-values"]], "Scope Channel": [[17, "scope-channel"]], "Getting Data from Scope": [[17, "getting-data-from-scope"]], "Triggering": [[17, "triggering"]]}, "indexentries": {"execute_qt() (in module pyx2cscope.__main__)": [[2, "pyx2cscope.__main__.execute_qt"]], "execute_web() (in module pyx2cscope.__main__)": [[2, "pyx2cscope.__main__.execute_web"]], "module": [[2, "module-pyx2cscope.__main__"], [3, "module-pyx2cscope"], [4, "module-pyx2cscope.parser.elf16_parser"], [5, "module-pyx2cscope.parser.elf32_parser"], [6, "module-pyx2cscope.parser.elf_parser"], [7, "module-pyx2cscope.parser"], [8, "module-pyx2cscope.variable"], [9, "module-pyx2cscope.variable.variable"], [10, "module-pyx2cscope.variable.variable_factory"], [11, "module-pyx2cscope.xc2scope"]], "parse_arguments() (in module pyx2cscope.__main__)": [[2, "pyx2cscope.__main__.parse_arguments"]], "pyx2cscope.__main__": [[2, "module-pyx2cscope.__main__"]], "__version__ (in module pyx2cscope)": [[3, "pyx2cscope.__version__"]], "pyx2cscope": [[3, "module-pyx2cscope"]], "set_logger() (in module pyx2cscope)": [[3, "pyx2cscope.set_logger"]], "address_check_lower_limit (in module pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.ADDRESS_CHECK_LOWER_LIMIT"]], "address_check_upper_limit (in module pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.ADDRESS_CHECK_UPPER_LIMIT"]], "elf16parser (class in pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser"]], "_check_for_pointer_tag() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._check_for_pointer_tag"]], "_check_for_structure_tag() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._check_for_structure_tag"]], "_get_address_check() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_address_check"]], "_get_address_location() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_address_location"]], "_get_dwarf_die_by_offset() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_dwarf_die_by_offset"]], "_get_end_die() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_end_die"]], "_get_member_from_nested_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_member_from_nested_members"]], "_get_next_die_by_offset() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_next_die_by_offset"]], "_get_structure_member_offset() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_structure_member_offset"]], "_get_structure_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_structure_members"]], "_load_elf_file() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._load_elf_file"]], "_locate_cu_in_dwarf() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._locate_cu_in_dwarf"]], "_locate_tag_variable_end_die() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._locate_tag_variable_end_die"]], "_map_variables() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._map_variables"]], "_parse_cu() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu"]], "_parse_cu_attributes() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_attributes"]], "_parse_cu_elements() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_elements"]], "_parse_cu_header() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_header"]], "_parse_cu_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_members"]], "_parse_tree() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_tree"]], "calculate_array_size() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser.calculate_array_size"]], "elf_file (in module pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.elf_file"]], "pyx2cscope.parser.elf16_parser": [[4, "module-pyx2cscope.parser.elf16_parser"]], "elf32parser (class in pyx2cscope.parser.elf32_parser)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser"]], "_get_array_length() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_array_length"]], "_get_dwarf_die_by_offset() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_dwarf_die_by_offset"]], "_get_end_die() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_end_die"]], "_get_member_type() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_member_type"]], "_get_structure_members() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_structure_members"]], "_get_structure_members_recursive() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_structure_members_recursive"]], "_load_elf_file() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._load_elf_file"]], "_map_variables() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._map_variables"]], "_processing_end_die() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._processing_end_die"]], "elf_file (in module pyx2cscope.parser.elf32_parser)": [[5, "pyx2cscope.parser.elf32_parser.elf_file"]], "pyx2cscope.parser.elf32_parser": [[5, "module-pyx2cscope.parser.elf32_parser"]], "elfparser (class in pyx2cscope.parser.elf_parser)": [[6, "pyx2cscope.parser.elf_parser.ElfParser"]], "variableinfo (class in pyx2cscope.parser.elf_parser)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo"]], "_load_elf_file() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser._load_elf_file"]], "_map_variables() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser._map_variables"]], "address (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.address"]], "array_size (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.array_size"]], "byte_size (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.byte_size"]], "get_var_info() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser.get_var_info"]], "get_var_list() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser.get_var_list"]], "map_variables() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser.map_variables"]], "name (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.name"]], "pyx2cscope.parser.elf_parser": [[6, "module-pyx2cscope.parser.elf_parser"]], "type (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.type"]], "pyx2cscope.parser": [[7, "module-pyx2cscope.parser"]], "pyx2cscope.variable": [[8, "module-pyx2cscope.variable"]], "variable (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.Variable"]], "variablefloat (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.VariableFloat"]], "variableint16 (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.VariableInt16"]], "variableint32 (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.VariableInt32"]], "variableint64 (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.VariableInt64"]], "variableint8 (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.VariableInt8"]], "variableuint16 (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.VariableUint16"]], "variableuint32 (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.VariableUint32"]], "variableuint64 (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.VariableUint64"]], "variableuint8 (class in pyx2cscope.variable.variable)": [[9, "pyx2cscope.variable.variable.VariableUint8"]], "__getitem__() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.__getitem__"]], "__len__() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.__len__"]], "__repr__() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.__repr__"]], "__setitem__() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.__setitem__"]], "_check_value_range() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable._check_value_range"]], "_get_array_values() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable._get_array_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variablefloat method)": [[9, "pyx2cscope.variable.variable.VariableFloat._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint16 method)": [[9, "pyx2cscope.variable.variable.VariableInt16._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint32 method)": [[9, "pyx2cscope.variable.variable.VariableInt32._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint64 method)": [[9, "pyx2cscope.variable.variable.VariableInt64._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint8 method)": [[9, "pyx2cscope.variable.variable.VariableInt8._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint16 method)": [[9, "pyx2cscope.variable.variable.VariableUint16._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint32 method)": [[9, "pyx2cscope.variable.variable.VariableUint32._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint64 method)": [[9, "pyx2cscope.variable.variable.VariableUint64._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint8 method)": [[9, "pyx2cscope.variable.variable.VariableUint8._get_min_max_values"]], "_get_value_raw() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable._get_value_raw"]], "_set_value_raw() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable._set_value_raw"]], "bytes_to_array() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.bytes_to_array"]], "bytes_to_value() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variablefloat method)": [[9, "pyx2cscope.variable.variable.VariableFloat.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint16 method)": [[9, "pyx2cscope.variable.variable.VariableInt16.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint32 method)": [[9, "pyx2cscope.variable.variable.VariableInt32.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint64 method)": [[9, "pyx2cscope.variable.variable.VariableInt64.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint8 method)": [[9, "pyx2cscope.variable.variable.VariableInt8.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint16 method)": [[9, "pyx2cscope.variable.variable.VariableUint16.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint32 method)": [[9, "pyx2cscope.variable.variable.VariableUint32.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint64 method)": [[9, "pyx2cscope.variable.variable.VariableUint64.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint8 method)": [[9, "pyx2cscope.variable.variable.VariableUint8.bytes_to_value"]], "get_value() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.get_value"]], "get_width() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.get_width"]], "get_width() (pyx2cscope.variable.variable.variablefloat method)": [[9, "pyx2cscope.variable.variable.VariableFloat.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint16 method)": [[9, "pyx2cscope.variable.variable.VariableInt16.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint32 method)": [[9, "pyx2cscope.variable.variable.VariableInt32.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint64 method)": [[9, "pyx2cscope.variable.variable.VariableInt64.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint8 method)": [[9, "pyx2cscope.variable.variable.VariableInt8.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint16 method)": [[9, "pyx2cscope.variable.variable.VariableUint16.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint32 method)": [[9, "pyx2cscope.variable.variable.VariableUint32.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint64 method)": [[9, "pyx2cscope.variable.variable.VariableUint64.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint8 method)": [[9, "pyx2cscope.variable.variable.VariableUint8.get_width"]], "is_array() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.is_array"]], "is_integer() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variablefloat method)": [[9, "pyx2cscope.variable.variable.VariableFloat.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint16 method)": [[9, "pyx2cscope.variable.variable.VariableInt16.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint32 method)": [[9, "pyx2cscope.variable.variable.VariableInt32.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint64 method)": [[9, "pyx2cscope.variable.variable.VariableInt64.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint8 method)": [[9, "pyx2cscope.variable.variable.VariableInt8.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint16 method)": [[9, "pyx2cscope.variable.variable.VariableUint16.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint32 method)": [[9, "pyx2cscope.variable.variable.VariableUint32.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint64 method)": [[9, "pyx2cscope.variable.variable.VariableUint64.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint8 method)": [[9, "pyx2cscope.variable.variable.VariableUint8.is_integer"]], "is_signed() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variablefloat method)": [[9, "pyx2cscope.variable.variable.VariableFloat.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint16 method)": [[9, "pyx2cscope.variable.variable.VariableInt16.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint32 method)": [[9, "pyx2cscope.variable.variable.VariableInt32.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint64 method)": [[9, "pyx2cscope.variable.variable.VariableInt64.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint8 method)": [[9, "pyx2cscope.variable.variable.VariableInt8.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint16 method)": [[9, "pyx2cscope.variable.variable.VariableUint16.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint32 method)": [[9, "pyx2cscope.variable.variable.VariableUint32.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint64 method)": [[9, "pyx2cscope.variable.variable.VariableUint64.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint8 method)": [[9, "pyx2cscope.variable.variable.VariableUint8.is_signed"]], "pyx2cscope.variable.variable": [[9, "module-pyx2cscope.variable.variable"]], "set_value() (pyx2cscope.variable.variable.variable method)": [[9, "pyx2cscope.variable.variable.Variable.set_value"]], "set_value() (pyx2cscope.variable.variable.variablefloat method)": [[9, "pyx2cscope.variable.variable.VariableFloat.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint16 method)": [[9, "pyx2cscope.variable.variable.VariableInt16.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint32 method)": [[9, "pyx2cscope.variable.variable.VariableInt32.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint64 method)": [[9, "pyx2cscope.variable.variable.VariableInt64.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint8 method)": [[9, "pyx2cscope.variable.variable.VariableInt8.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint16 method)": [[9, "pyx2cscope.variable.variable.VariableUint16.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint32 method)": [[9, "pyx2cscope.variable.variable.VariableUint32.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint64 method)": [[9, "pyx2cscope.variable.variable.VariableUint64.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint8 method)": [[9, "pyx2cscope.variable.variable.VariableUint8.set_value"]], "variablefactory (class in pyx2cscope.variable.variable_factory)": [[10, "pyx2cscope.variable.variable_factory.VariableFactory"]], "_get_variable_instance() (pyx2cscope.variable.variable_factory.variablefactory method)": [[10, "pyx2cscope.variable.variable_factory.VariableFactory._get_variable_instance"]], "get_var_list() (pyx2cscope.variable.variable_factory.variablefactory method)": [[10, "pyx2cscope.variable.variable_factory.VariableFactory.get_var_list"]], "get_variable() (pyx2cscope.variable.variable_factory.variablefactory method)": [[10, "pyx2cscope.variable.variable_factory.VariableFactory.get_variable"]], "pyx2cscope.variable.variable_factory": [[10, "module-pyx2cscope.variable.variable_factory"]], "triggerconfig (class in pyx2cscope.xc2scope)": [[11, "pyx2cscope.xc2scope.TriggerConfig"]], "x2cscope (class in pyx2cscope.xc2scope)": [[11, "pyx2cscope.xc2scope.X2CScope"]], "_calc_sda_used_length() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope._calc_sda_used_length"]], "_filter_channels() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope._filter_channels"]], "_read_array_chunks() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope._read_array_chunks"]], "_sort_channel_data() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope._sort_channel_data"]], "add_scope_channel() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.add_scope_channel"]], "clear_scope_channel() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.clear_scope_channel"]], "clear_trigger() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.clear_trigger"]], "connect() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.connect"]], "disconnect() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.disconnect"]], "get_delay_trigger_position() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.get_delay_trigger_position"]], "get_scope_channel_data() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.get_scope_channel_data"]], "get_scope_channel_list() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.get_scope_channel_list"]], "get_trigger_position() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.get_trigger_position"]], "get_variable() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.get_variable"]], "get_variable_as_scope_channel() (in module pyx2cscope.xc2scope)": [[11, "pyx2cscope.xc2scope.get_variable_as_scope_channel"]], "is_scope_data_ready() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.is_scope_data_ready"]], "list_variables() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.list_variables"]], "pyx2cscope.xc2scope": [[11, "module-pyx2cscope.xc2scope"]], "read_array() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.read_array"]], "remove_scope_channel() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.remove_scope_channel"]], "request_scope_data() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.request_scope_data"]], "reset_scope_trigger() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.reset_scope_trigger"]], "set_elf_file() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.set_elf_file"]], "set_interface() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.set_interface"]], "set_sample_time() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.set_sample_time"]], "set_scope_state() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.set_scope_state"]], "set_scope_trigger() (pyx2cscope.xc2scope.x2cscope method)": [[11, "pyx2cscope.xc2scope.X2CScope.set_scope_trigger"]], "trigger_delay (pyx2cscope.xc2scope.triggerconfig attribute)": [[11, "pyx2cscope.xc2scope.TriggerConfig.trigger_delay"]], "trigger_edge (pyx2cscope.xc2scope.triggerconfig attribute)": [[11, "pyx2cscope.xc2scope.TriggerConfig.trigger_edge"]], "trigger_level (pyx2cscope.xc2scope.triggerconfig attribute)": [[11, "pyx2cscope.xc2scope.TriggerConfig.trigger_level"]], "trigger_mode (pyx2cscope.xc2scope.triggerconfig attribute)": [[11, "pyx2cscope.xc2scope.TriggerConfig.trigger_mode"]], "variable (pyx2cscope.xc2scope.triggerconfig attribute)": [[11, "pyx2cscope.xc2scope.TriggerConfig.variable"]]}})