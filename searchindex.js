Search.setIndex({"docnames": ["FW_Support", "autoapi/index", "autoapi/pyx2cscope/__main__/index", "autoapi/pyx2cscope/index", "autoapi/pyx2cscope/parser/elf16_parser/index", "autoapi/pyx2cscope/parser/elf32_parser/index", "autoapi/pyx2cscope/parser/elf_parser/index", "autoapi/pyx2cscope/parser/elfparser_try_unified/index", "autoapi/pyx2cscope/parser/index", "autoapi/pyx2cscope/utils/index", "autoapi/pyx2cscope/variable/index", "autoapi/pyx2cscope/variable/variable/index", "autoapi/pyx2cscope/variable/variable_factory/index", "autoapi/pyx2cscope/x2cscope/index", "example", "gui_qt", "gui_web", "how_to", "index", "scripting"], "filenames": ["FW_Support.md", "autoapi/index.rst", "autoapi/pyx2cscope/__main__/index.rst", "autoapi/pyx2cscope/index.rst", "autoapi/pyx2cscope/parser/elf16_parser/index.rst", "autoapi/pyx2cscope/parser/elf32_parser/index.rst", "autoapi/pyx2cscope/parser/elf_parser/index.rst", "autoapi/pyx2cscope/parser/elfparser_try_unified/index.rst", "autoapi/pyx2cscope/parser/index.rst", "autoapi/pyx2cscope/utils/index.rst", "autoapi/pyx2cscope/variable/index.rst", "autoapi/pyx2cscope/variable/variable/index.rst", "autoapi/pyx2cscope/variable/variable_factory/index.rst", "autoapi/pyx2cscope/x2cscope/index.rst", "example.md", "gui_qt.md", "gui_web.md", "how_to.rst", "index.rst", "scripting.md"], "titles": ["Firmware Support", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf16_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf32_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elf_parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser.elfparser_try_unified</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable.variable</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.variable.variable_factory</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyx2cscope.x2cscope</span></code>", "Examples", "GUI Qt", "GUI Web", "How-To", "pyX2Cscope", "Scripting"], "terms": {"x2cscope": [0, 1, 2, 3, 14, 17, 18], "side": [0, 13], "librari": [0, 18], "i": [0, 2, 3, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19], "written": [0, 11], "standard": 0, "c": [0, 4, 5, 7, 14, 19], "therefor": 0, "whole": 0, "microchip": [0, 4, 7, 13, 18, 19], "16bit": 0, "32bit": 0, "mcu": [0, 10, 11, 12, 13, 14], "portfolio": 0, "http": [0, 16], "github": 0, "io": 0, "doc": 0, "x2cscopefirmwar": 0, "html": 0, "implement": [0, 5, 6, 11, 13, 15, 16, 18], "us": [0, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19], "dynam": 0, "function": [0, 5, 14, 16, 18, 19], "pointer": [0, 4, 5], "some": [0, 14, 18, 19], "our": 0, "low": [0, 11, 13, 14], "end": [0, 4, 5], "8bit": 0, "doe": [0, 9, 16], "contact": 0, "u": 0, "more": [0, 14, 18], "detail": 0, "www": 0, "com": [0, 9, 14], "thi": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "page": [1, 18], "contain": [1, 3, 4, 6, 10, 11, 13, 19], "auto": [1, 13, 19], "gener": [1, 4, 6, 14, 19], "document": [1, 15, 16, 19], "1": [1, 11, 13, 14, 19], "pyx2cscop": [1, 14, 15, 16, 17, 19], "parser": [1, 3, 9, 12], "elf16_pars": [1, 3, 8], "elf32_pars": [1, 3, 8], "elf_pars": [1, 3, 4, 5, 8], "elfparser_try_unifi": [1, 3, 8], "variabl": [1, 3, 4, 5, 6, 13, 14, 17, 18], "variable_factori": [1, 3, 10, 13], "__main__": [1, 3, 14], "util": [1, 3, 14], "creat": [1, 3, 9, 12, 13, 14, 18, 19], "sphinx": 1, "autoapi": 1, "main": [2, 14], "entri": [2, 5], "point": [2, 11], "applic": [2, 15], "initi": [2, 14, 18], "log": [2, 3, 14, 18], "configur": [2, 9, 13, 14, 19], "base": [2, 4, 5, 6, 10, 11, 12, 13, 14, 18], "command": [2, 15, 16, 18], "line": [2, 18], "argument": [2, 15, 16, 18], "set": [2, 9, 11, 13, 14, 18, 19], "up": [2, 13, 14, 19], "pyqt5": 2, "launch": 2, "gui": [2, 17], "parse_argu": 2, "sourc": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13], "forward": 2, "receiv": [2, 3, 13], "argpars": 2, "pars": [2, 4, 5, 6, 12], "them": [2, 6, 14, 18], "possibl": [2, 18, 19], "ar": [2, 13, 14, 18, 19], "l": [2, 18], "level": [2, 3, 11, 13, 14, 18, 19], "info": [2, 3, 14, 18], "default": [2, 3, 6, 9, 11, 13, 14, 15, 16, 18, 19], "valu": [2, 4, 9, 11, 13, 14, 17, 18], "v": 2, "action": 2, "version": [2, 3, 18], "w": [2, 3, 14, 16, 18], "start": [2, 4, 13, 17, 18, 19], "web": [2, 17, 18], "user": [2, 5, 7, 13, 15, 16, 17, 18], "interfac": [2, 6, 11, 13, 15, 16, 17, 19], "app": [2, 15], "For": [2, 18, 19], "complet": [2, 14, 19], "list": [2, 6, 11, 12, 13], "execut": [2, 3, 4, 15, 18, 19], "python": [2, 13, 15, 16, 18, 19], "m": [2, 14, 15, 16, 18], "help": [2, 18], "_args_check": 2, "k_arg": 2, "namespac": 2, "modul": [3, 8, 10, 18], "0": [3, 4, 5, 6, 11, 12, 13, 14, 16, 19], "3": 3, "2": [3, 4, 11, 13], "__version__": 3, "set_logg": 3, "int": [3, 4, 6, 11, 12, 13, 14, 19], "error": [3, 11, 14, 18], "filenam": [3, 7, 14], "str": [3, 4, 5, 6, 9, 11, 12, 13, 14], "__name__": [3, 14], "consol": 3, "bool": [3, 4, 11, 13, 14], "fals": [3, 4, 11, 13, 14, 19], "mode": [3, 13, 14], "call": [3, 13], "basicconfig": [3, 14], "everi": [3, 13], "file": [3, 4, 5, 6, 7, 8, 9, 12, 13, 17, 18], "could": [3, 14, 19], "run": [3, 13, 15, 16, 18, 19], "standalon": [3, 18], "local": [3, 16], "folder": [3, 19], "where": 3, "program": [3, 4, 19], "onli": [3, 13, 19], "when": [3, 11, 15, 19], "first": [3, 13, 19], "time": [3, 13, 14, 18, 19], "multipl": [3, 16, 19], "have": [3, 19], "effect": 3, "arg": [3, 4, 6, 9, 11, 12, 13, 14], "warn": [3, 18], "debug": [3, 5, 14, 18], "critic": [3, 18], "etc": [3, 10, 18, 19], "without": 3, "extens": 3, "true": [3, 4, 11, 13, 14, 19], "output": 3, "messag": [3, 14], "AND": [3, 14], "new": [3, 18, 19], "append": 3, "elf16": 4, "": [4, 11, 12, 14, 19], "xc16": 4, "compil": [4, 19], "defin": [4, 10, 11, 13, 14, 19], "elf16pars": [4, 12], "elf": [4, 5, 6, 7, 8, 9, 12, 13, 14, 17, 18], "The": [4, 6, 9, 11, 12, 13, 14, 15, 16, 19], "extract": [4, 5, 6], "inform": [4, 5, 6, 7, 12, 13, 15, 16, 18, 19], "about": [4, 6, 12], "usag": 4, "elf_read": 4, "elf_fil": [4, 5, 6, 7, 13, 14, 18, 19], "variable_map": [4, 6], "map_vari": [4, 6], "print": [4, 7, 11, 18], "address_check_lower_limit": 4, "address_check_upper_limit": 4, "6": 4, "elf_path": [4, 5, 6, 12], "elfpars": [4, 5, 6, 7, 12], "extend": [4, 6, 13], "basic": [4, 14], "specif": [4, 5, 6, 10, 11, 14, 18], "handl": [4, 5, 6, 9, 10, 11, 14, 19], "produc": 4, "xc16_read_elf_path": 4, "path": [4, 6, 9, 13, 14, 19], "readelf": 4, "_parse_cu_attribut": 4, "unit": [4, 10, 18], "from": [4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18], "return": [4, 5, 6, 9, 11, 12, 13, 14, 19], "dict": [4, 5, 6, 13], "A": [4, 5, 6, 12, 13, 19], "dictionari": [4, 5, 6, 13], "_parse_cu_head": 4, "header": 4, "_parse_cu_memb": 4, "member": [4, 5, 19], "_parse_cu_el": 4, "element": [4, 11], "_parse_cu": 4, "_parse_tre": 4, "tree_str": 4, "entir": 4, "tree": 4, "string": [4, 11, 19], "_load_elf_fil": [4, 5, 6], "load": [4, 5, 6], "its": [4, 5, 11, 12, 13, 19], "static": 4, "_get_structure_member_offset": 4, "locat": [4, 11, 19], "offset": [4, 5], "structur": [4, 5, 6, 19], "_locate_cu_in_dwarf": 4, "structure_di": [4, 5], "correspond": [4, 6], "dwarf": [4, 5, 6], "repres": [4, 6, 11, 13, 19], "die": [4, 5], "tupl": [4, 11], "sibl": 4, "_get_member_from_nested_memb": 4, "parent_address": 4, "nested_memb": 4, "cu_structur": 4, "nest": 4, "address": [4, 5, 6, 11, 12, 13, 14, 19], "parent": 4, "_get_structure_memb": [4, 5], "recurs": [4, 5], "get": [4, 5, 8, 9, 11, 12, 13, 14, 17, 18], "all": [4, 6, 11, 13, 14, 19], "_get_address_check": 4, "check": [4, 11, 13, 18, 19], "_get_address_loc": 4, "_locate_tag_variable_end_di": 4, "tag": [4, 5], "_check_for_pointer_tag": 4, "end_di": [4, 5], "otherwis": [4, 11, 12, 13], "_check_for_structure_tag": 4, "_get_end_di": [4, 5], "start_di": 4, "given": [4, 5, 6, 11, 13], "di": 4, "_get_next_die_by_offset": 4, "calculate_array_s": 4, "array_di": 4, "calcul": [4, 13], "size": [4, 6, 11, 12, 13], "an": [4, 5, 6, 11, 12, 13, 15, 16, 18, 19], "arrai": [4, 5, 6, 11, 12, 13, 19], "method": [4, 5, 6, 10, 11, 12, 13, 19], "retriev": [4, 5, 9, 11, 12, 13, 14, 18, 19], "type": [4, 5, 6, 10, 11, 12, 13, 18], "upper": 4, "bound": 4, "_get_dwarf_die_by_offset": [4, 5], "_map_vari": [4, 5, 6], "variableinfo": [4, 5, 6], "map": [4, 5, 6], "name": [4, 5, 6, 11, 12, 13, 14, 19], "_desktop": 4, "_project": 4, "motorbench_project": 4, "motorbench_foc_pll_pic33ck256mp508_mclv2": 4, "zsmt_dspic33ck": 4, "provid": [5, 6, 9, 10, 11, 12, 13, 19], "compat": 5, "32": [5, 11], "bit": [5, 11, 14], "architectur": [5, 6, 12], "It": [5, 10, 11, 13, 15, 16, 18, 19], "focus": 5, "elf32pars": [5, 12], "accord": [5, 6, 12, 19], "hardwar": [5, 6, 11, 18], "should": [5, 6, 11, 13], "subclass": [5, 6, 11], "differ": [5, 6, 10, 17, 18], "format": [5, 6, 14], "close_elf_fil": 5, "close": 5, "stream": 5, "abstract": [5, 6, 11], "object": [5, 6, 9, 11, 12, 13, 19], "_process_variable_di": 5, "die_vari": 5, "process": [5, 6, 7, 13], "individu": 5, "current_di": 5, "find": [5, 15, 16, 18], "_processing_end_di": 5, "_extract_address": 5, "current": [5, 6, 14, 15, 18, 19], "fetch": [5, 8], "symbol": [5, 7], "tabl": 5, "found": [5, 6, 12, 19], "_load_symbol_t": 5, "fast": 5, "access": [5, 16], "_fetch_address_from_symtab": 5, "variable_nam": [5, 19], "preload": 5, "_find_actual_declar": 5, "actual": [5, 11, 19], "declar": 5, "extern": [5, 16], "_process_pointer_typ": 5, "_process_structure_typ": 5, "_process_array_typ": 5, "_process_base_typ": 5, "_get_structure_members_recurs": 5, "parent_nam": 5, "prev_address_offset": 5, "var_nam": [5, 6], "_get_array_length": 5, "type_di": 5, "length": [5, 11, 13], "_get_member_typ": 5, "type_offset": 5, "m67250": [5, 7], "download": 5, "pmsm_foc_zsmt_hybrid_sam_e54": 5, "firmwar": [5, 13, 18], "qspi": 5, "data": [6, 8, 10, 11, 13, 17, 18], "design": 6, "attribut": [6, 11, 12], "byte_s": 6, "byte": [6, 11, 13, 14], "memori": [6, 10, 11, 12, 13, 19], "array_s": [6, 11, 12], "abc": 6, "within": [6, 11, 18], "dwarf_info": 6, "store": [6, 10, 11, 13], "being": 6, "get_var_info": 6, "specifi": [6, 11, 13, 14, 18], "get_var_list": [6, 12], "none": [6, 11, 12, 13, 14], "associ": 6, "option": [6, 13, 18], "avail": [6, 12, 13, 14, 19], "sort": [6, 13], "unifi": 7, "solut": 7, "process_fil": 7, "technologi": 7, "inc": 7, "mark": 7, "wendler": 7, "m18034": 7, "masters_2024_mc3": 7, "respons": 8, "requir": [8, 13, 19], "paramet": [8, 19], "abl": [8, 19], "microcontrol": [8, 10, 11, 12, 13, 18, 19], "get_config_fil": 9, "configpars": 9, "get_elf_file_path": [9, 14], "kei": [9, 11, 13, 14], "get_com_port": [9, 14], "com_port": 9, "port": [9, 14, 16, 17, 18], "If": [9, 11, 12, 13, 19], "exist": 9, "one": [9, 13, 18], "packag": [10, 13, 18], "class": [10, 17, 18], "includ": [10, 13, 16, 19], "support": [10, 18, 19], "variou": 10, "read": [10, 13, 14, 17, 18], "write": [10, 11, 14, 18, 19], "manipul": 10, "lnet": [10, 11, 12, 13, 18], "protocol": [10, 13, 18], "like": [10, 11, 18, 19], "variableint8": [10, 11], "variableuint8": [10, 11], "variableint16": [10, 11], "well": [11, 19], "integ": 11, "float": [11, 13], "number": [11, 13, 14, 19], "necessari": 11, "convert": [11, 13], "between": [11, 13], "represent": 11, "8": [11, 14, 19], "sign": 11, "unsign": 11, "16": 11, "variableuint16": 11, "variableint32": 11, "variableuint32": 11, "variableint64": 11, "64": 11, "variableuint64": 11, "variablefloat": 11, "l_net": [11, 12], "mchplnet": [11, 12, 13], "__getitem__": 11, "item": [11, 14, 19], "regard": 11, "index": [11, 13, 18], "convers": [11, 13], "real": [11, 13, 18], "case": [11, 12, 18], "zero": 11, "rais": [11, 12], "indexerror": 11, "outsid": [11, 18], "scope": [11, 13, 17, 18], "posit": [11, 13, 14], "__setitem__": 11, "__len__": 11, "In": [11, 18], "we": [11, 18], "singl": 11, "__repr__": 11, "termin": [11, 13, 18], "oper": [11, 13, 14], "instead": [11, 19], "_get_array_valu": 11, "get_valu": [11, 14, 18, 19], "_check_value_rang": 11, "rang": [11, 14], "min": 11, "max": [11, 14], "valueerror": 11, "_get_min_max_valu": 11, "allow": [11, 16, 18], "minimum": 11, "maximum": 11, "bytes_to_valu": 11, "bytearrai": [11, 13], "respect": [11, 12, 19], "bytes_to_arrai": 11, "width": 11, "set_valu": [11, 14, 18, 19], "new_valu": 11, "get_width": 11, "is_arrai": 11, "_get_value_raw": 11, "ask": 11, "raw": [11, 13], "expect": 11, "must": 11, "reconstruct": 11, "right": 11, "_set_value_raw": 11, "bytes_data": 11, "ram": 11, "send": 11, "commun": [11, 12, 13, 14, 18, 19], "except": [11, 12, 14], "is_sign": 11, "determin": 11, "is_integ": 11, "non": 11, "overrid": 11, "int8": 11, "which": [11, 19], "becaus": 11, "4": [11, 13, 16], "factori": [12, 13], "variablefactori": [12, 13], "either": [12, 18, 19], "depend": 12, "can": [12, 13, 14, 15, 18, 19], "interact": [12, 14], "instanc": 12, "device_info": 12, "connect": [12, 13], "devic": [12, 13, 16], "appropri": 12, "get_vari": [12, 13, 14, 18, 19], "_get_variable_inst": 12, "var_typ": 12, "vartyp": 12, "x2c": [13, 14], "enabl": [13, 18], "embed": [13, 18], "system": [13, 18], "utilis": 13, "channel": [13, 14, 17, 18], "request": [13, 19], "uc_width_16bit": 13, "uc_width_32bit": 13, "get_variable_as_scope_channel": 13, "servic": 13, "scopechannel": 13, "triggerconfig": [13, 19], "trigger": [13, 17], "trigger_level": [13, 19], "trigger_mod": [13, 19], "trigger_delai": [13, 19], "delai": [13, 19], "percentag": 13, "trigger_edg": [13, 19], "rise": [13, 19], "fall": [13, 19], "abstract_interfac": 13, "interfaceabc": 13, "kwarg": 13, "tool": 13, "network": 13, "scope_setup": 13, "setup": 13, "convert_list": 13, "set_interfac": 13, "set_elf_fil": 13, "establish": 13, "disconnect": 13, "list_vari": 13, "add_scope_channel": [13, 14, 19], "add": [13, 14, 19], "ad": [13, 19], "id": 13, "clear_all_scope_channel": [13, 19], "remov": [13, 19], "reset": [13, 19], "ani": [13, 14, 19], "remove_scope_channel": [13, 19], "result": [13, 14], "get_scope_channel_list": 13, "reset_scope_trigg": 13, "e": [13, 14, 19], "happen": 13, "set_scope_trigg": [13, 19], "config": 13, "clear_trigg": 13, "set_sample_tim": [13, 14], "sample_tim": 13, "pre": [13, 19], "scaler": 13, "sampl": [13, 14, 19], "total": 13, "cost": 13, "resolut": 13, "2nd": 13, "3rd": 13, "factor": 13, "set_scope_st": 13, "scope_st": 13, "state": [13, 14, 19], "desir": [13, 19], "request_scope_data": [13, 14, 19], "layer": 13, "onc": [13, 19], "made": 13, "acquisit": [13, 14], "is_scope_data_readi": [13, 14, 19], "readi": [13, 14, 19], "befor": 13, "pleas": 13, "insert": 13, "get_trigger_posit": 13, "event": 13, "get_delay_trigger_posit": 13, "_calc_sda_used_length": 13, "sda": 13, "portion": 13, "_read_array_chunk": 13, "chunk": 13, "read_arrai": 13, "data_typ": 13, "_sort_channel_data": 13, "dataset": 13, "order": 13, "_filter_channel": 13, "filter": 13, "valid": 13, "get_scope_channel_data": [13, 14, 19], "valid_data": [13, 14], "scope_sample_tim": 13, "time_microsecond": 13, "evalu": 13, "microsecond": [13, 14], "durat": 13, "millisecond": [13, 14], "get_device_info": 13, "under": [14, 19], "py": 14, "veri": 14, "certain": 14, "motorbench": 14, "code": 14, "import": [14, 18, 19], "captur": 14, "serial": [14, 18, 19], "serial_port": 14, "baud_rat": [14, 19], "115200": [14, 18, 19], "baud": [14, 18, 19], "rate": [14, 18, 19], "x2c_scope": [14, 18, 19], "speed_refer": [14, 18], "motor": [14, 18], "apidata": [14, 18], "velocityrefer": [14, 18], "speed": 14, "refer": [14, 18], "speed_measur": [14, 18], "velocitymeasur": [14, 18], "measur": 14, "attempt": 14, "speedrefer": 14, "try": [14, 18], "speed_reference_valu": 14, "f": 14, "occur": 14, "chang": [14, 19], "led": 14, "modifi": 14, "dspic33ck256mp508": 14, "special": 14, "regist": [14, 19], "blinkysfr": 14, "select": [14, 19], "constant": 14, "led1_bit": 14, "12": 14, "late12": 14, "led2_bit": 14, "13": 14, "late13": 14, "def": 14, "set_led_st": 14, "bit_posit": 14, "clear": [14, 19], "OR": 14, "els": 14, "sethigh": 14, "high": 14, "setlow": 14, "demonstr": 14, "sfr": 14, "control": [14, 19], "sfr_led": 14, "get_variable_raw": 14, "3702": 14, "late": 14, "sheet": 14, "initial_led_st": 14, "while": [14, 19], "led1": 14, "led2": 14, "led1_high_valu": 14, "led2_high_valu": 14, "sleep": [14, 19], "led1_low_valu": 14, "led2_low_valu": 14, "other": 14, "matplotlib": [14, 19], "pyplot": 14, "plt": 14, "__file__": 14, "idq": 14, "q": [14, 15], "vabc": 14, "b": 14, "upto": 14, "var": 14, "plot": [14, 19], "ion": 14, "turn": 14, "fig": 14, "ax": 14, "subplot": 14, "loop": [14, 18, 19], "sample_count": 14, "max_sampl": 14, "100": 14, "increas": 14, "need": [14, 19], "data_storag": 14, "assum": 14, "khz": 14, "adjust": 14, "time_valu": 14, "001": 14, "len": 14, "000001": 14, "label": 14, "set_xlabel": 14, "axi": 14, "accordingli": 14, "set_ylabel": 14, "set_titl": 14, "legend": 14, "paus": 14, "short": 14, "updat": 14, "break": 14, "ioff": 14, "off": 14, "after": [14, 18, 19], "show": 14, "collect": [14, 18, 19], "storag": 14, "csv_file_path": 14, "scope_data": 14, "max_length": 14, "open": [14, 16], "newlin": 14, "writer": 14, "dictwrit": 14, "fieldnam": 14, "writehead": 14, "row": 14, "writerow": 14, "visit": 14, "directori": 14, "graphic": [15, 16, 17, 18, 19], "built": 15, "over": [15, 18], "aim": 15, "serv": 15, "exampl": [15, 16, 18, 19], "how": [15, 16, 18, 19], "make": [15, 18], "desktop": 15, "out": 15, "box": 15, "below": [15, 16, 18, 19], "also": [15, 16], "addit": [15, 16, 18, 19], "you": [15, 16, 17, 18, 19], "mai": [15, 16, 18, 19], "api": [15, 16, 19], "flask": 16, "bootstrap": 16, "jqueri": 16, "chart": 16, "j": 16, "build": 16, "custom": [16, 18], "window": [16, 18], "even": [16, 18], "smart": 16, "server": 16, "your": [16, 18, 19], "machin": [16, 18], "ha": [16, 19], "5000": 16, "localhost": 16, "follow": [16, 18, 19], "To": [16, 18, 19], "host": 16, "section": [17, 18], "guid": 17, "approach": 17, "script": [17, 18], "wai": 17, "qt": [17, 18], "comprehens": 18, "offer": 18, "develop": 18, "power": 18, "toolkit": 18, "softwar": 18, "combin": 18, "capabl": 18, "advanc": 18, "visual": 18, "featur": 18, "directli": [18, 19], "environ": [18, 19], "via": 18, "uart": 18, "lin": [18, 19], "usb": 18, "tcp": [18, 19], "ip": [18, 19], "plugin": 18, "mplabx": [18, 19], "let": 18, "autom": 18, "test": 18, "tdd": 18, "pytest": 18, "bdd": 18, "behavior": 18, "driven": 18, "framework": [18, 19], "cucumb": 18, "learn": 18, "train": 18, "model": 18, "analysi": 18, "ai": 18, "hil": 18, "tune": 18, "virtual": 18, "venv": 18, "activ": 18, "pip": 18, "highli": 18, "recommend": 18, "underneath": [18, 19], "nevertheless": 18, "advis": 18, "area": 18, "global": 18, "insal": 18, "work": [18, 19], "upgrad": 18, "unexpect": 18, "issu": 18, "reinstal": 18, "manual": 18, "uninstal": 18, "cach": 18, "purg": 18, "both": 18, "There": 18, "two": [18, 19], "browser": 18, "These": 18, "own": 18, "than": 18, "offici": 18, "manag": 18, "simplest": 18, "depict": [18, 19], "com8": 18, "path_to_elf_fil": 18, "target": 18, "1000": 18, "see": 18, "examplemcaf": 18, "sfr_exampl": 18, "live": 18, "save": 18, "csv": 18, "subpackag": 18, "submodul": 18, "search": 18, "successfulli": 19, "instal": 19, "project": 19, "so": 19, "insid": 19, "step": 19, "clss": 19, "pyx2scop": 19, "instanti": 19, "com3": 19, "dev": 19, "ttyusb": 19, "come": 19, "futur": 19, "prefer": 19, "devtool": 19, "hex": 19, "flash": 19, "descript": 19, "dist": 19, "product": 19, "your_elf_fil": 19, "comm": 19, "com16": 19, "your_path_to_elf_fil": 19, "next": 19, "link": 19, "want": 19, "monitor": 19, "replac": 19, "struct": 19, "dot": 19, "convent": 19, "struct_nam": 19, "final": 19, "gone": 19, "through": 19, "mean": 19, "dure": 19, "frame": 19, "seaborn": 19, "previous": 19, "explain": 19, "variable1": 19, "variable2": 19, "each": 19, "present": 19, "sequenc": 19, "done": 19, "ye": 19, "again": 19, "begin": 19, "yet": 19, "progress": 19, "simpl": 19, "wait": 19, "do": 19, "someth": 19, "pass": 19, "trigger_config": 19, "No": 19, "post": 19}, "objects": {"": [[3, 0, 0, "-", "pyx2cscope"]], "pyx2cscope": [[2, 0, 0, "-", "__main__"], [3, 2, 1, "", "__version__"], [8, 0, 0, "-", "parser"], [3, 1, 1, "", "set_logger"], [9, 0, 0, "-", "utils"], [10, 0, 0, "-", "variable"], [13, 0, 0, "-", "x2cscope"]], "pyx2cscope.__main__": [[2, 1, 1, "", "_args_check"], [2, 1, 1, "", "parse_arguments"]], "pyx2cscope.parser": [[4, 0, 0, "-", "elf16_parser"], [5, 0, 0, "-", "elf32_parser"], [6, 0, 0, "-", "elf_parser"], [7, 0, 0, "-", "elfparser_try_unified"]], "pyx2cscope.parser.elf16_parser": [[4, 2, 1, "", "ADDRESS_CHECK_LOWER_LIMIT"], [4, 2, 1, "", "ADDRESS_CHECK_UPPER_LIMIT"], [4, 3, 1, "", "Elf16Parser"], [4, 2, 1, "", "elf_file"]], "pyx2cscope.parser.elf16_parser.Elf16Parser": [[4, 4, 1, "", "_check_for_pointer_tag"], [4, 4, 1, "", "_check_for_structure_tag"], [4, 4, 1, "", "_get_address_check"], [4, 4, 1, "", "_get_address_location"], [4, 4, 1, "", "_get_dwarf_die_by_offset"], [4, 4, 1, "", "_get_end_die"], [4, 4, 1, "", "_get_member_from_nested_members"], [4, 4, 1, "", "_get_next_die_by_offset"], [4, 4, 1, "", "_get_structure_member_offset"], [4, 4, 1, "", "_get_structure_members"], [4, 4, 1, "", "_load_elf_file"], [4, 4, 1, "", "_locate_cu_in_dwarf"], [4, 4, 1, "", "_locate_tag_variable_end_die"], [4, 4, 1, "", "_map_variables"], [4, 4, 1, "", "_parse_cu"], [4, 4, 1, "", "_parse_cu_attributes"], [4, 4, 1, "", "_parse_cu_elements"], [4, 4, 1, "", "_parse_cu_header"], [4, 4, 1, "", "_parse_cu_members"], [4, 4, 1, "", "_parse_tree"], [4, 4, 1, "", "calculate_array_size"]], "pyx2cscope.parser.elf32_parser": [[5, 3, 1, "", "Elf32Parser"], [5, 2, 1, "", "elf_file"]], "pyx2cscope.parser.elf32_parser.Elf32Parser": [[5, 4, 1, "", "_extract_address"], [5, 4, 1, "", "_fetch_address_from_symtab"], [5, 4, 1, "", "_find_actual_declaration"], [5, 4, 1, "", "_get_array_length"], [5, 4, 1, "", "_get_dwarf_die_by_offset"], [5, 4, 1, "", "_get_end_die"], [5, 4, 1, "", "_get_member_type"], [5, 4, 1, "", "_get_structure_members"], [5, 4, 1, "", "_get_structure_members_recursive"], [5, 4, 1, "", "_load_elf_file"], [5, 4, 1, "", "_load_symbol_table"], [5, 4, 1, "", "_map_variables"], [5, 4, 1, "", "_process_array_type"], [5, 4, 1, "", "_process_base_type"], [5, 4, 1, "", "_process_pointer_type"], [5, 4, 1, "", "_process_structure_type"], [5, 4, 1, "", "_process_variable_die"], [5, 4, 1, "", "_processing_end_die"], [5, 4, 1, "", "close_elf_file"]], "pyx2cscope.parser.elf_parser": [[6, 3, 1, "", "ElfParser"], [6, 3, 1, "", "VariableInfo"]], "pyx2cscope.parser.elf_parser.ElfParser": [[6, 4, 1, "", "_load_elf_file"], [6, 4, 1, "", "_map_variables"], [6, 4, 1, "", "get_var_info"], [6, 4, 1, "", "get_var_list"], [6, 4, 1, "", "map_variables"]], "pyx2cscope.parser.elf_parser.VariableInfo": [[6, 5, 1, "", "address"], [6, 5, 1, "", "array_size"], [6, 5, 1, "", "byte_size"], [6, 5, 1, "", "name"], [6, 5, 1, "", "type"]], "pyx2cscope.parser.elfparser_try_unified": [[7, 2, 1, "", "elf_file"], [7, 1, 1, "", "process_file"]], "pyx2cscope.utils": [[9, 1, 1, "", "get_com_port"], [9, 1, 1, "", "get_config_file"], [9, 1, 1, "", "get_elf_file_path"]], "pyx2cscope.variable": [[11, 0, 0, "-", "variable"], [12, 0, 0, "-", "variable_factory"]], "pyx2cscope.variable.variable": [[11, 3, 1, "", "Variable"], [11, 3, 1, "", "VariableFloat"], [11, 3, 1, "", "VariableInt16"], [11, 3, 1, "", "VariableInt32"], [11, 3, 1, "", "VariableInt64"], [11, 3, 1, "", "VariableInt8"], [11, 3, 1, "", "VariableUint16"], [11, 3, 1, "", "VariableUint32"], [11, 3, 1, "", "VariableUint64"], [11, 3, 1, "", "VariableUint8"]], "pyx2cscope.variable.variable.Variable": [[11, 4, 1, "", "__getitem__"], [11, 4, 1, "", "__len__"], [11, 4, 1, "", "__repr__"], [11, 4, 1, "", "__setitem__"], [11, 4, 1, "", "_check_value_range"], [11, 4, 1, "", "_get_array_values"], [11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "_get_value_raw"], [11, 4, 1, "", "_set_value_raw"], [11, 4, 1, "", "bytes_to_array"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_array"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableFloat": [[11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt16": [[11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt32": [[11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt64": [[11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableInt8": [[11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint16": [[11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint32": [[11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint64": [[11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable.VariableUint8": [[11, 4, 1, "", "_get_min_max_values"], [11, 4, 1, "", "bytes_to_value"], [11, 4, 1, "", "get_width"], [11, 4, 1, "", "is_integer"], [11, 4, 1, "", "is_signed"], [11, 4, 1, "", "set_value"]], "pyx2cscope.variable.variable_factory": [[12, 3, 1, "", "VariableFactory"]], "pyx2cscope.variable.variable_factory.VariableFactory": [[12, 4, 1, "", "_get_variable_instance"], [12, 4, 1, "", "get_var_list"], [12, 4, 1, "", "get_variable"]], "pyx2cscope.x2cscope": [[13, 3, 1, "", "TriggerConfig"], [13, 2, 1, "", "UC_WIDTH_16BIT"], [13, 2, 1, "", "UC_WIDTH_32BIT"], [13, 3, 1, "", "X2CScope"], [13, 1, 1, "", "get_variable_as_scope_channel"]], "pyx2cscope.x2cscope.TriggerConfig": [[13, 5, 1, "", "trigger_delay"], [13, 5, 1, "", "trigger_edge"], [13, 5, 1, "", "trigger_level"], [13, 5, 1, "", "trigger_mode"], [13, 5, 1, "", "variable"]], "pyx2cscope.x2cscope.X2CScope": [[13, 4, 1, "", "_calc_sda_used_length"], [13, 4, 1, "", "_filter_channels"], [13, 4, 1, "", "_read_array_chunks"], [13, 4, 1, "", "_sort_channel_data"], [13, 4, 1, "", "add_scope_channel"], [13, 4, 1, "", "clear_all_scope_channel"], [13, 4, 1, "", "clear_trigger"], [13, 4, 1, "", "connect"], [13, 4, 1, "", "disconnect"], [13, 4, 1, "", "get_delay_trigger_position"], [13, 4, 1, "", "get_device_info"], [13, 4, 1, "", "get_scope_channel_data"], [13, 4, 1, "", "get_scope_channel_list"], [13, 4, 1, "", "get_trigger_position"], [13, 4, 1, "", "get_variable"], [13, 4, 1, "", "is_scope_data_ready"], [13, 4, 1, "", "list_variables"], [13, 4, 1, "", "read_array"], [13, 4, 1, "", "remove_scope_channel"], [13, 4, 1, "", "request_scope_data"], [13, 4, 1, "", "reset_scope_trigger"], [13, 4, 1, "", "scope_sample_time"], [13, 4, 1, "", "set_elf_file"], [13, 4, 1, "", "set_interface"], [13, 4, 1, "", "set_sample_time"], [13, 4, 1, "", "set_scope_state"], [13, 4, 1, "", "set_scope_trigger"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:data", "3": "py:class", "4": "py:method", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "data", "Python data"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"firmwar": 0, "support": 0, "api": [1, 18], "refer": 1, "pyx2cscop": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18], "__main__": 2, "modul": [2, 4, 5, 6, 7, 9, 11, 12, 13], "content": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 18], "function": [2, 3, 7, 9, 13], "subpackag": 3, "submodul": [3, 8, 10], "packag": 3, "attribut": [3, 4, 5, 7, 13], "parser": [4, 5, 6, 7, 8], "elf16_pars": 4, "class": [4, 5, 6, 11, 12, 13, 19], "elf32_pars": 5, "elf_pars": 6, "elfparser_try_unifi": 7, "util": 9, "variabl": [10, 11, 12, 19], "variable_factori": 12, "x2cscope": [13, 19], "exampl": 14, "examplemcaf": 14, "sfr_exampl": 14, "live": 14, "scope": [14, 19], "save": 14, "data": [14, 19], "csv": 14, "file": [14, 19], "gui": [15, 16, 18], "qt": 15, "start": [15, 16], "web": 16, "how": 17, "To": 17, "instal": 18, "usag": 18, "The": 18, "interfac": 18, "indic": 18, "tabl": 18, "script": 19, "port": 19, "elf": 19, "read": 19, "valu": 19, "channel": 19, "get": 19, "from": 19, "trigger": 19}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Firmware Support": [[0, "firmware-support"]], "API Reference": [[1, "api-reference"]], "pyx2cscope.__main__": [[2, "module-pyx2cscope.__main__"]], "Module Contents": [[2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"]], "Functions": [[2, "functions"], [3, "functions"], [7, "functions"], [9, "functions"], [13, "functions"]], "pyx2cscope": [[3, "module-pyx2cscope"]], "Subpackages": [[3, "subpackages"]], "Submodules": [[3, "submodules"], [8, "submodules"], [10, "submodules"]], "Package Contents": [[3, "package-contents"]], "Attributes": [[3, "attributes"], [4, "attributes"], [5, "attributes"], [7, "attributes"], [13, "attributes"]], "pyx2cscope.parser.elf16_parser": [[4, "module-pyx2cscope.parser.elf16_parser"]], "Classes": [[4, "classes"], [5, "classes"], [6, "classes"], [11, "classes"], [12, "classes"], [13, "classes"]], "pyx2cscope.parser.elf32_parser": [[5, "module-pyx2cscope.parser.elf32_parser"]], "pyx2cscope.parser.elf_parser": [[6, "module-pyx2cscope.parser.elf_parser"]], "pyx2cscope.parser.elfparser_try_unified": [[7, "module-pyx2cscope.parser.elfparser_try_unified"]], "pyx2cscope.parser": [[8, "module-pyx2cscope.parser"]], "pyx2cscope.utils": [[9, "module-pyx2cscope.utils"]], "pyx2cscope.variable": [[10, "module-pyx2cscope.variable"]], "pyx2cscope.variable.variable": [[11, "module-pyx2cscope.variable.variable"]], "pyx2cscope.variable.variable_factory": [[12, "module-pyx2cscope.variable.variable_factory"]], "pyx2cscope.x2cscope": [[13, "module-pyx2cscope.x2cscope"]], "Examples": [[14, "examples"]], "ExampleMCAF": [[14, "examplemcaf"]], "SFR_Example": [[14, "sfr-example"]], "Live Scope and saving data to CSV file.": [[14, "live-scope-and-saving-data-to-csv-file"]], "GUI Qt": [[15, "gui-qt"]], "Starting the GUI Qt": [[15, "starting-the-gui-qt"]], "GUI Web": [[16, "gui-web"]], "Starting the Web GUI": [[16, "starting-the-web-gui"]], "How-To": [[17, "how-to"]], "pyX2Cscope": [[18, "pyx2cscope"]], "Installation": [[18, "installation"]], "Usage": [[18, "usage"]], "The GUI interface": [[18, "the-gui-interface"]], "The API interface": [[18, "the-api-interface"]], "Contents:": [[18, null]], "Indices and tables": [[18, "indices-and-tables"]], "Scripting": [[19, "scripting"]], "X2CScope class": [[19, "x2cscope-class"]], "Port": [[19, "port"]], "Elf File": [[19, "elf-file"]], "Variable class": [[19, "variable-class"]], "Reading values": [[19, "reading-values"]], "Scope Channel": [[19, "scope-channel"]], "Getting Data from Scope": [[19, "getting-data-from-scope"]], "Triggering": [[19, "triggering"]]}, "indexentries": {"_args_check() (in module pyx2cscope.__main__)": [[2, "pyx2cscope.__main__._args_check"]], "module": [[2, "module-pyx2cscope.__main__"], [3, "module-pyx2cscope"], [4, "module-pyx2cscope.parser.elf16_parser"], [5, "module-pyx2cscope.parser.elf32_parser"], [6, "module-pyx2cscope.parser.elf_parser"], [7, "module-pyx2cscope.parser.elfparser_try_unified"], [8, "module-pyx2cscope.parser"], [9, "module-pyx2cscope.utils"], [10, "module-pyx2cscope.variable"], [11, "module-pyx2cscope.variable.variable"], [12, "module-pyx2cscope.variable.variable_factory"], [13, "module-pyx2cscope.x2cscope"]], "parse_arguments() (in module pyx2cscope.__main__)": [[2, "pyx2cscope.__main__.parse_arguments"]], "pyx2cscope.__main__": [[2, "module-pyx2cscope.__main__"]], "__version__ (in module pyx2cscope)": [[3, "pyx2cscope.__version__"]], "pyx2cscope": [[3, "module-pyx2cscope"]], "set_logger() (in module pyx2cscope)": [[3, "pyx2cscope.set_logger"]], "address_check_lower_limit (in module pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.ADDRESS_CHECK_LOWER_LIMIT"]], "address_check_upper_limit (in module pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.ADDRESS_CHECK_UPPER_LIMIT"]], "elf16parser (class in pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser"]], "_check_for_pointer_tag() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._check_for_pointer_tag"]], "_check_for_structure_tag() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._check_for_structure_tag"]], "_get_address_check() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_address_check"]], "_get_address_location() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_address_location"]], "_get_dwarf_die_by_offset() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_dwarf_die_by_offset"]], "_get_end_die() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_end_die"]], "_get_member_from_nested_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_member_from_nested_members"]], "_get_next_die_by_offset() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_next_die_by_offset"]], "_get_structure_member_offset() (pyx2cscope.parser.elf16_parser.elf16parser static method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_structure_member_offset"]], "_get_structure_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._get_structure_members"]], "_load_elf_file() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._load_elf_file"]], "_locate_cu_in_dwarf() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._locate_cu_in_dwarf"]], "_locate_tag_variable_end_die() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._locate_tag_variable_end_die"]], "_map_variables() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._map_variables"]], "_parse_cu() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu"]], "_parse_cu_attributes() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_attributes"]], "_parse_cu_elements() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_elements"]], "_parse_cu_header() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_header"]], "_parse_cu_members() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_cu_members"]], "_parse_tree() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser._parse_tree"]], "calculate_array_size() (pyx2cscope.parser.elf16_parser.elf16parser method)": [[4, "pyx2cscope.parser.elf16_parser.Elf16Parser.calculate_array_size"]], "elf_file (in module pyx2cscope.parser.elf16_parser)": [[4, "pyx2cscope.parser.elf16_parser.elf_file"]], "pyx2cscope.parser.elf16_parser": [[4, "module-pyx2cscope.parser.elf16_parser"]], "elf32parser (class in pyx2cscope.parser.elf32_parser)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser"]], "_extract_address() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._extract_address"]], "_fetch_address_from_symtab() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._fetch_address_from_symtab"]], "_find_actual_declaration() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._find_actual_declaration"]], "_get_array_length() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_array_length"]], "_get_dwarf_die_by_offset() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_dwarf_die_by_offset"]], "_get_end_die() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_end_die"]], "_get_member_type() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_member_type"]], "_get_structure_members() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_structure_members"]], "_get_structure_members_recursive() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._get_structure_members_recursive"]], "_load_elf_file() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._load_elf_file"]], "_load_symbol_table() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._load_symbol_table"]], "_map_variables() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._map_variables"]], "_process_array_type() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._process_array_type"]], "_process_base_type() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._process_base_type"]], "_process_pointer_type() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._process_pointer_type"]], "_process_structure_type() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._process_structure_type"]], "_process_variable_die() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._process_variable_die"]], "_processing_end_die() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser._processing_end_die"]], "close_elf_file() (pyx2cscope.parser.elf32_parser.elf32parser method)": [[5, "pyx2cscope.parser.elf32_parser.Elf32Parser.close_elf_file"]], "elf_file (in module pyx2cscope.parser.elf32_parser)": [[5, "pyx2cscope.parser.elf32_parser.elf_file"]], "pyx2cscope.parser.elf32_parser": [[5, "module-pyx2cscope.parser.elf32_parser"]], "elfparser (class in pyx2cscope.parser.elf_parser)": [[6, "pyx2cscope.parser.elf_parser.ElfParser"]], "variableinfo (class in pyx2cscope.parser.elf_parser)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo"]], "_load_elf_file() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser._load_elf_file"]], "_map_variables() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser._map_variables"]], "address (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.address"]], "array_size (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.array_size"]], "byte_size (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.byte_size"]], "get_var_info() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser.get_var_info"]], "get_var_list() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser.get_var_list"]], "map_variables() (pyx2cscope.parser.elf_parser.elfparser method)": [[6, "pyx2cscope.parser.elf_parser.ElfParser.map_variables"]], "name (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.name"]], "pyx2cscope.parser.elf_parser": [[6, "module-pyx2cscope.parser.elf_parser"]], "type (pyx2cscope.parser.elf_parser.variableinfo attribute)": [[6, "pyx2cscope.parser.elf_parser.VariableInfo.type"]], "elf_file (in module pyx2cscope.parser.elfparser_try_unified)": [[7, "pyx2cscope.parser.elfparser_try_unified.elf_file"]], "process_file() (in module pyx2cscope.parser.elfparser_try_unified)": [[7, "pyx2cscope.parser.elfparser_try_unified.process_file"]], "pyx2cscope.parser.elfparser_try_unified": [[7, "module-pyx2cscope.parser.elfparser_try_unified"]], "pyx2cscope.parser": [[8, "module-pyx2cscope.parser"]], "get_com_port() (in module pyx2cscope.utils)": [[9, "pyx2cscope.utils.get_com_port"]], "get_config_file() (in module pyx2cscope.utils)": [[9, "pyx2cscope.utils.get_config_file"]], "get_elf_file_path() (in module pyx2cscope.utils)": [[9, "pyx2cscope.utils.get_elf_file_path"]], "pyx2cscope.utils": [[9, "module-pyx2cscope.utils"]], "pyx2cscope.variable": [[10, "module-pyx2cscope.variable"]], "variable (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.Variable"]], "variablefloat (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.VariableFloat"]], "variableint16 (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.VariableInt16"]], "variableint32 (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.VariableInt32"]], "variableint64 (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.VariableInt64"]], "variableint8 (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.VariableInt8"]], "variableuint16 (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.VariableUint16"]], "variableuint32 (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.VariableUint32"]], "variableuint64 (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.VariableUint64"]], "variableuint8 (class in pyx2cscope.variable.variable)": [[11, "pyx2cscope.variable.variable.VariableUint8"]], "__getitem__() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.__getitem__"]], "__len__() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.__len__"]], "__repr__() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.__repr__"]], "__setitem__() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.__setitem__"]], "_check_value_range() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable._check_value_range"]], "_get_array_values() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable._get_array_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variablefloat method)": [[11, "pyx2cscope.variable.variable.VariableFloat._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint16 method)": [[11, "pyx2cscope.variable.variable.VariableInt16._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint32 method)": [[11, "pyx2cscope.variable.variable.VariableInt32._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint64 method)": [[11, "pyx2cscope.variable.variable.VariableInt64._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableint8 method)": [[11, "pyx2cscope.variable.variable.VariableInt8._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint16 method)": [[11, "pyx2cscope.variable.variable.VariableUint16._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint32 method)": [[11, "pyx2cscope.variable.variable.VariableUint32._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint64 method)": [[11, "pyx2cscope.variable.variable.VariableUint64._get_min_max_values"]], "_get_min_max_values() (pyx2cscope.variable.variable.variableuint8 method)": [[11, "pyx2cscope.variable.variable.VariableUint8._get_min_max_values"]], "_get_value_raw() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable._get_value_raw"]], "_set_value_raw() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable._set_value_raw"]], "bytes_to_array() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.bytes_to_array"]], "bytes_to_value() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variablefloat method)": [[11, "pyx2cscope.variable.variable.VariableFloat.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint16 method)": [[11, "pyx2cscope.variable.variable.VariableInt16.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint32 method)": [[11, "pyx2cscope.variable.variable.VariableInt32.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint64 method)": [[11, "pyx2cscope.variable.variable.VariableInt64.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableint8 method)": [[11, "pyx2cscope.variable.variable.VariableInt8.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint16 method)": [[11, "pyx2cscope.variable.variable.VariableUint16.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint32 method)": [[11, "pyx2cscope.variable.variable.VariableUint32.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint64 method)": [[11, "pyx2cscope.variable.variable.VariableUint64.bytes_to_value"]], "bytes_to_value() (pyx2cscope.variable.variable.variableuint8 method)": [[11, "pyx2cscope.variable.variable.VariableUint8.bytes_to_value"]], "get_value() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.get_value"]], "get_width() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.get_width"]], "get_width() (pyx2cscope.variable.variable.variablefloat method)": [[11, "pyx2cscope.variable.variable.VariableFloat.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint16 method)": [[11, "pyx2cscope.variable.variable.VariableInt16.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint32 method)": [[11, "pyx2cscope.variable.variable.VariableInt32.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint64 method)": [[11, "pyx2cscope.variable.variable.VariableInt64.get_width"]], "get_width() (pyx2cscope.variable.variable.variableint8 method)": [[11, "pyx2cscope.variable.variable.VariableInt8.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint16 method)": [[11, "pyx2cscope.variable.variable.VariableUint16.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint32 method)": [[11, "pyx2cscope.variable.variable.VariableUint32.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint64 method)": [[11, "pyx2cscope.variable.variable.VariableUint64.get_width"]], "get_width() (pyx2cscope.variable.variable.variableuint8 method)": [[11, "pyx2cscope.variable.variable.VariableUint8.get_width"]], "is_array() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.is_array"]], "is_integer() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variablefloat method)": [[11, "pyx2cscope.variable.variable.VariableFloat.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint16 method)": [[11, "pyx2cscope.variable.variable.VariableInt16.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint32 method)": [[11, "pyx2cscope.variable.variable.VariableInt32.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint64 method)": [[11, "pyx2cscope.variable.variable.VariableInt64.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableint8 method)": [[11, "pyx2cscope.variable.variable.VariableInt8.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint16 method)": [[11, "pyx2cscope.variable.variable.VariableUint16.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint32 method)": [[11, "pyx2cscope.variable.variable.VariableUint32.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint64 method)": [[11, "pyx2cscope.variable.variable.VariableUint64.is_integer"]], "is_integer() (pyx2cscope.variable.variable.variableuint8 method)": [[11, "pyx2cscope.variable.variable.VariableUint8.is_integer"]], "is_signed() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variablefloat method)": [[11, "pyx2cscope.variable.variable.VariableFloat.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint16 method)": [[11, "pyx2cscope.variable.variable.VariableInt16.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint32 method)": [[11, "pyx2cscope.variable.variable.VariableInt32.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint64 method)": [[11, "pyx2cscope.variable.variable.VariableInt64.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableint8 method)": [[11, "pyx2cscope.variable.variable.VariableInt8.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint16 method)": [[11, "pyx2cscope.variable.variable.VariableUint16.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint32 method)": [[11, "pyx2cscope.variable.variable.VariableUint32.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint64 method)": [[11, "pyx2cscope.variable.variable.VariableUint64.is_signed"]], "is_signed() (pyx2cscope.variable.variable.variableuint8 method)": [[11, "pyx2cscope.variable.variable.VariableUint8.is_signed"]], "pyx2cscope.variable.variable": [[11, "module-pyx2cscope.variable.variable"]], "set_value() (pyx2cscope.variable.variable.variable method)": [[11, "pyx2cscope.variable.variable.Variable.set_value"]], "set_value() (pyx2cscope.variable.variable.variablefloat method)": [[11, "pyx2cscope.variable.variable.VariableFloat.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint16 method)": [[11, "pyx2cscope.variable.variable.VariableInt16.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint32 method)": [[11, "pyx2cscope.variable.variable.VariableInt32.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint64 method)": [[11, "pyx2cscope.variable.variable.VariableInt64.set_value"]], "set_value() (pyx2cscope.variable.variable.variableint8 method)": [[11, "pyx2cscope.variable.variable.VariableInt8.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint16 method)": [[11, "pyx2cscope.variable.variable.VariableUint16.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint32 method)": [[11, "pyx2cscope.variable.variable.VariableUint32.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint64 method)": [[11, "pyx2cscope.variable.variable.VariableUint64.set_value"]], "set_value() (pyx2cscope.variable.variable.variableuint8 method)": [[11, "pyx2cscope.variable.variable.VariableUint8.set_value"]], "variablefactory (class in pyx2cscope.variable.variable_factory)": [[12, "pyx2cscope.variable.variable_factory.VariableFactory"]], "_get_variable_instance() (pyx2cscope.variable.variable_factory.variablefactory method)": [[12, "pyx2cscope.variable.variable_factory.VariableFactory._get_variable_instance"]], "get_var_list() (pyx2cscope.variable.variable_factory.variablefactory method)": [[12, "pyx2cscope.variable.variable_factory.VariableFactory.get_var_list"]], "get_variable() (pyx2cscope.variable.variable_factory.variablefactory method)": [[12, "pyx2cscope.variable.variable_factory.VariableFactory.get_variable"]], "pyx2cscope.variable.variable_factory": [[12, "module-pyx2cscope.variable.variable_factory"]], "triggerconfig (class in pyx2cscope.x2cscope)": [[13, "pyx2cscope.x2cscope.TriggerConfig"]], "uc_width_16bit (in module pyx2cscope.x2cscope)": [[13, "pyx2cscope.x2cscope.UC_WIDTH_16BIT"]], "uc_width_32bit (in module pyx2cscope.x2cscope)": [[13, "pyx2cscope.x2cscope.UC_WIDTH_32BIT"]], "x2cscope (class in pyx2cscope.x2cscope)": [[13, "pyx2cscope.x2cscope.X2CScope"]], "_calc_sda_used_length() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope._calc_sda_used_length"]], "_filter_channels() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope._filter_channels"]], "_read_array_chunks() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope._read_array_chunks"]], "_sort_channel_data() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope._sort_channel_data"]], "add_scope_channel() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.add_scope_channel"]], "clear_all_scope_channel() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.clear_all_scope_channel"]], "clear_trigger() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.clear_trigger"]], "connect() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.connect"]], "disconnect() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.disconnect"]], "get_delay_trigger_position() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.get_delay_trigger_position"]], "get_device_info() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.get_device_info"]], "get_scope_channel_data() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.get_scope_channel_data"]], "get_scope_channel_list() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.get_scope_channel_list"]], "get_trigger_position() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.get_trigger_position"]], "get_variable() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.get_variable"]], "get_variable_as_scope_channel() (in module pyx2cscope.x2cscope)": [[13, "pyx2cscope.x2cscope.get_variable_as_scope_channel"]], "is_scope_data_ready() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.is_scope_data_ready"]], "list_variables() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.list_variables"]], "pyx2cscope.x2cscope": [[13, "module-pyx2cscope.x2cscope"]], "read_array() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.read_array"]], "remove_scope_channel() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.remove_scope_channel"]], "request_scope_data() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.request_scope_data"]], "reset_scope_trigger() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.reset_scope_trigger"]], "scope_sample_time() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.scope_sample_time"]], "set_elf_file() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.set_elf_file"]], "set_interface() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.set_interface"]], "set_sample_time() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.set_sample_time"]], "set_scope_state() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.set_scope_state"]], "set_scope_trigger() (pyx2cscope.x2cscope.x2cscope method)": [[13, "pyx2cscope.x2cscope.X2CScope.set_scope_trigger"]], "trigger_delay (pyx2cscope.x2cscope.triggerconfig attribute)": [[13, "pyx2cscope.x2cscope.TriggerConfig.trigger_delay"]], "trigger_edge (pyx2cscope.x2cscope.triggerconfig attribute)": [[13, "pyx2cscope.x2cscope.TriggerConfig.trigger_edge"]], "trigger_level (pyx2cscope.x2cscope.triggerconfig attribute)": [[13, "pyx2cscope.x2cscope.TriggerConfig.trigger_level"]], "trigger_mode (pyx2cscope.x2cscope.triggerconfig attribute)": [[13, "pyx2cscope.x2cscope.TriggerConfig.trigger_mode"]], "variable (pyx2cscope.x2cscope.triggerconfig attribute)": [[13, "pyx2cscope.x2cscope.TriggerConfig.variable"]]}})